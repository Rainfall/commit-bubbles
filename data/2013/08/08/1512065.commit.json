{
  "when": "2013-08-08T17:58:24-04:00", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-34,6 +34,7", 
          "lines": [
            " \n", 
            " import javax.xml.namespace.QName;\n", 
            " import java.io.File;\n", 
            "+import java.net.URI;\n", 
            " import java.net.URL;\n", 
            " import java.util.Properties;\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-126,10 +127,11", 
          "lines": [
            "             if (wsdlURI != null) {\n", 
            "                 wsdlEndpoint.setWsdlURI(wsdlURI.trim());\n", 
            "                 if (noParsing == null || !JavaUtils.isTrueExplicitly(noParsing)) {\n", 
            "+                    String synapseHome = properties.get(SynapseConstants.SYNAPSE_HOME) != null ?\n", 
            "+                            properties.get(SynapseConstants.SYNAPSE_HOME).toString() : \"\";\n", 
            "                     try {\n", 
            "                         OMNode wsdlOM = SynapseConfigUtils.getOMElementFromURL(new URL(wsdlURI)\n", 
            "-                                .toString(), properties.get(SynapseConstants.SYNAPSE_HOME) != null ?\n", 
            "-                                properties.get(SynapseConstants.SYNAPSE_HOME).toString() : \"\");\n", 
            "+                                .toString(), synapseHome);\n", 
            "                         if (wsdlOM != null && wsdlOM instanceof OMElement) {\n", 
            "                             OMElement omElement = (OMElement) wsdlOM;\n", 
            "                             OMNamespace ns = omElement.getNamespace();\n"
          ]
        }, 
        {
          "locn": "-136,10 +138,11", 
          "lines": [
            "                             if (ns != null) {\n", 
            "                                 String nsUri = omElement.getNamespace().getNamespaceURI();\n", 
            "                                 if (org.apache.axis2.namespace.Constants.NS_URI_WSDL11.equals(nsUri)) {\n", 
            "-\n", 
            "+                                    URI baseURI = SynapseConfigUtils.resolveRelativeURI(\n", 
            "+                                            new URI(wsdlURI), synapseHome);\n", 
            "                                     new WSDL11EndpointBuilder().\n", 
            "                                             populateEndpointDefinitionFromWSDL(endpoint,\n", 
            "-                                                    wsdlURI.trim(), omElement, serviceName, portName);\n", 
            "+                                                    baseURI.toString(), omElement, serviceName, portName);\n", 
            " \n", 
            "                                 } else if (WSDL2Constants.WSDL_NAMESPACE.equals(nsUri)) {\n", 
            "                                     //endpoint = new WSDL20EndpointBuilder().\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/WSDLEndpointFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/WSDLEndpointFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-636,6 +636,34", 
          "lines": [
            "         return url;\n", 
            "     }\n", 
            " \n", 
            "+    /**\n", 
            "+     * Resolve a relative URI. If the URI is a file and it's path is relative, the basePath will be\n", 
            "+     * used as parent location. If the URI is null the basePath will be returned as URI.\n", 
            "+     *\n", 
            "+     * @param uri      the URI to resolve\n", 
            "+     * @param basePath the base path\n", 
            "+     * @return the absolute URI\n", 
            "+     */\n", 
            "+    public static URI resolveRelativeURI(URI uri, String basePath) {\n", 
            "+        URI baseURI;\n", 
            "+        if (uri != null) {\n", 
            "+            if (\"file\".equals(uri.getScheme())) {\n", 
            "+                String wsdlPath = uri.getSchemeSpecificPart();\n", 
            "+                if (!new File(wsdlPath).isAbsolute()) {\n", 
            "+                    baseURI = new File(new File(basePath),\n", 
            "+                            wsdlPath).toURI();\n", 
            "+                } else {\n", 
            "+                    baseURI = uri;\n", 
            "+                }\n", 
            "+            } else {\n", 
            "+                baseURI = uri;\n", 
            "+            }\n", 
            "+        } else {\n", 
            "+            baseURI = new File(basePath).toURI();\n", 
            "+        }\n", 
            "+        return baseURI;\n", 
            "+    }\n", 
            "+\n", 
            "     public static String resolveRelativeURI(String parentLocation, String relativeLocation) {\n", 
            " \n", 
            "         if (relativeLocation == null) {\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/SynapseConfigUtils.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/SynapseConfigUtils.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-251,9 +251,8", 
          "lines": [
            "         boolean wsdlFound = false;\n", 
            "         String publishWSDL = null;\n", 
            " \n", 
            "-        SynapseEnvironment synEnv = SynapseConfigUtils.getSynapseEnvironment(axisCfg);\n", 
            "-        String synapseHome = synEnv != null ? synEnv.getServerContextInformation()\n", 
            "-                .getServerConfigurationInformation().getSynapseHome() : \"\";\n", 
            "+        String synapseHome = synCfg.getProperty(SynapseConstants.SYNAPSE_HOME) != null ?\n", 
            "+                synCfg.getProperty(SynapseConstants.SYNAPSE_HOME) : \"\";\n", 
            " \n", 
            "         if (wsdlKey != null) {\n", 
            "             synCfg.getEntryDefinition(wsdlKey);\n"
          ]
        }, 
        {
          "locn": "-374,8 +373,8", 
          "lines": [
            "                                     \"Could not get the WSDL to Axis Service Builder\");\n", 
            "                         }\n", 
            " \n", 
            "-                        wsdlToAxisServiceBuilder.setBaseUri(wsdlURI != null ?\n", 
            "-                                wsdlURI.toString() : synapseHome);\n", 
            "+                        URI baseURI = SynapseConfigUtils.resolveRelativeURI(wsdlURI, synapseHome);\n", 
            "+                        wsdlToAxisServiceBuilder.setBaseUri(baseURI.toString());\n", 
            " \n", 
            "                         if (trace()) {\n", 
            "                             trace.info(\"Setting up custom resolvers\");\n"
          ]
        }, 
        {
          "locn": "-399,8 +398,7", 
          "lines": [
            "                                     ((WSDL11ToAxisServiceBuilder)\n", 
            "                                             wsdlToAxisServiceBuilder).setCustomWSDLResolver(\n", 
            "                                             new CustomWSDLLocator(new InputSource(wsdlInputStream),\n", 
            "-                                                    wsdlURI != null ? wsdlURI.toString() : \"\",\n", 
            "-                                                    resourceMap, synCfg));\n", 
            "+                                                    baseURI.toString(), resourceMap, synCfg));\n", 
            "                                 }\n", 
            "                             } else {\n", 
            "                                 //if the resource map isn't available ,\n"
          ]
        }, 
        {
          "locn": "-412,7 +410,7", 
          "lines": [
            "                                     ((WSDL11ToAxisServiceBuilder)\n", 
            "                                             wsdlToAxisServiceBuilder).setCustomWSDLResolver(\n", 
            "                                             new CustomWSDLLocator(new InputSource(wsdlInputStream),\n", 
            "-                                                    wsdlURI != null ? wsdlURI.toString() : \"\"));\n", 
            "+                                                    baseURI.toString()));\n", 
            "                                 }\n", 
            "                             }\n", 
            "                         }\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/ProxyService.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/ProxyService.java"
    }
  ], 
  "id": "1512065"
}