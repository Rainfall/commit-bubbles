{
  "when": "2016-12-27T08:15:34-05:00", 
  "who": "ravi", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-140,6 +140,7", 
          "lines": [
            "                         <li><a href=\"samples/sample352.html\">Sample 352: Accessing Synapse MessageContext API through scripts</a></li>\n", 
            "                         <li><a href=\"samples/sample353.html\">Sample 353: Using Ruby scripts for mediation</a></li>\n", 
            "                         <li><a href=\"samples/sample354.html\">Sample 354: Using In-lined Ruby scripts for mediation</a></li>\n", 
            "+                        <li><a href=\"samples/sample355.html\">Sample 355: Using Python scripts for mediation</a></li>\n", 
            "                     </ul>\n", 
            "                 </p>\n", 
            "                 <h4>Database Mediators (Interacting with Databases)</h4>\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-35,6 +35,9", 
          "lines": [
            " \t\t\t\t<li>\n", 
            " \t\t\t\t\t<a href=\"#ruby\">Ruby Support</a>\n", 
            " \t\t\t\t</li>\n", 
            "+                <li>\n", 
            "+\t\t\t\t\t<a href=\"#python\">Python Support</a>\n", 
            "+\t\t\t\t</li>\n", 
            " \t\t\t\t<li>\n", 
            " \t\t\t\t\t<a href=\"#json\">JSON Support</a>\n", 
            " \t\t\t\t</li>\n"
          ]
        }, 
        {
          "locn": "-69,6 +72,18", 
          "lines": [
            " \t\t\t\t\t</a>\n", 
            " \t\t\t\t</p>\n", 
            " \t\t\t</subsection>\n", 
            "+\t\t\t<subsection name=\"Python Support\" id=\"python\">\n", 
            "+\t\t\t\t<p>\n", 
            "+\t\t\t\t\tFor Python support you need to download the 'jython.jar'\n", 
            "+\t\t\t\t\tfrom the Maven repository for Jython, and copy it into the 'lib'\n", 
            "+\t\t\t\t\tfolder of Synapse . The Jython JAR can be downloaded from\n", 
            "+\t\t\t\t\t<a class=\"externalLink\"\n", 
            "+\t\t\t\t\t\thref=\"http://central.maven.org/maven2/org/python/jython/2.2.1/jython-2.2.1.jar\">\n", 
            "+\t\t\t\t\t\there\n", 
            "+\t\t\t\t\t</a>\n", 
            "+\t\t\t\t</p>\n", 
            "+\t\t\t</subsection>\n", 
            "+\n", 
            " \t\t\t<subsection name=\"JSON Support\" id=\"json\">\n", 
            " \t\t\t\t<p>\n", 
            " \t\t\t\t\t<a class=\"externalLink\" href=\"http://json.org\">JSON</a>\n"
          ]
        }, 
        {
          "locn": "-107,4 +122,4", 
          "lines": [
            " \n", 
            " \t\t</section>\n", 
            " \t</body>\n", 
            "-</document>\n", 
            "\\ No newline at end of file\n", 
            "+</document>\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/setup/script.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/setup/script.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,101", 
          "lines": [
            "+<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n", 
            "+<!--\n", 
            "+  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "+  ~  distributed with this work for additional information\n", 
            "+  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "+  ~  to you under the Apache License, Version 2.0 (the\n", 
            "+  ~  \"License\"); you may not use this file except in compliance\n", 
            "+  ~  with the License.  You may obtain a copy of the License at\n", 
            "+  ~\n", 
            "+  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+  ~\n", 
            "+  ~  Unless required by applicable law or agreed to in writing,\n", 
            "+  ~  software distributed under the License is distributed on an\n", 
            "+  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+  ~  KIND, either express or implied.  See the License for the\n", 
            "+  ~  specific language governing permissions and limitations\n", 
            "+  ~  under the License.\n", 
            "+  -->\n", 
            "+\n", 
            "+<document>\n", 
            "+    <properties>\n", 
            "+        <title>Apache Synapse - Sample 355</title>\n", 
            "+    </properties>\n", 
            "+    <body>\n", 
            "+        <section name=\"Sample 355: Using Python Scripts for Mediation\">\n", 
            "+            <div class=\"xmlConf\">\n", 
            "+                &lt;definitions xmlns=&quot;http://ws.apache.org/ns/synapse&quot;&gt;\n", 
            "+\n", 
            "+                    &lt;registry provider=&quot;org.apache.synapse.registry.url.SimpleURLRegistry&quot;&gt;\n", 
            "+                        &lt;!-- the root property of the simple URL registry helps resolve a resource URL as root + key --&gt;\n", 
            "+                        &lt;parameter name=&quot;root&quot;&gt;file:repository/conf/sample/resources/&lt;/parameter&gt;\n", 
            "+                        &lt;!-- all resources loaded from the URL registry would be cached for this number of milli seconds --&gt;\n", 
            "+                        &lt;parameter name=&quot;cachableDuration&quot;&gt;15000&lt;/parameter&gt;\n", 
            "+                    &lt;/registry&gt;\n", 
            "+\n", 
            "+                    &lt;localEntry key=&quot;stockquoteScript&quot;\n", 
            "+                                src=&quot;file:repository/conf/sample/resources/script/stockquoteTransformRequest.py&quot;/&gt;\n", 
            "+\n", 
            "+                    &lt;sequence name=&quot;main&quot;&gt;\n", 
            "+                        &lt;in&gt;\n", 
            "+                            &lt;!-- transform the custom quote request into a standard quote request expected by the service --&gt;\n", 
            "+                            &lt;script language=&quot;py&quot; key=&quot;stockquoteScript&quot; function=&quot;transformRequest&quot;/&gt;\n", 
            "+                            &lt;send&gt;\n", 
            "+                                &lt;endpoint&gt;\n", 
            "+                                    &lt;address uri=&quot;http://localhost:9000/services/SimpleStockQuoteService&quot;/&gt;\n", 
            "+                                &lt;/endpoint&gt;\n", 
            "+                            &lt;/send&gt;\n", 
            "+                        &lt;/in&gt;\n", 
            "+                        &lt;out&gt;\n", 
            "+                            &lt;!-- transform the standard response back into the custom format the client expects --&gt;\n", 
            "+                            &lt;script language=&quot;py&quot; key=&quot;script/stockquoteTransformResponse.py&quot;\n", 
            "+                                    function=&quot;transformResponse&quot;/&gt;\n", 
            "+                            &lt;send/&gt;\n", 
            "+                        &lt;/out&gt;\n", 
            "+                    &lt;/sequence&gt;\n", 
            "+\n", 
            "+                &lt;/definitions&gt;</div>\n", 
            "+            <subsection name=\"Objective\">\n", 
            "+                <p>\n", 
            "+                    Shows how to embed Python scripts in the Synapse configuration itself.\n", 
            "+                </p>\n", 
            "+            </subsection>\n", 
            "+            <subsection name=\"Pre-requisites\">\n", 
            "+                <p>\n", 
            "+                    <ul>\n", 
            "+                     \t<li>\n", 
            "+                            This sample uses Jython, so first setup support for this in Synapse as described at\n", 
            "+\t\t\t\t\t\t\t<a href=\"setup/script.html#python\">Configuring Jython</a>\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            Deploy the SimpleStockQuoteService in the sample Axis2 server and start Axis2\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            Synapse does not ship with a Jython engine by default. Therefore you should\n", 
            "+                            download the Jython engine from Jython site and copy the downloaded jar file\n", 
            "+                            to the 'lib' directory of Synapse.\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            Start Synapse using the configuration numbered 355 (repository/conf/sample/synapse_sample_355.xml)\n", 
            "+                            <div class=\"command\">\n", 
            "+                                Unix/Linux: sh synapse.sh -sample 355<br/>\n", 
            "+                                Windows: synapse.bat -sample 355\n", 
            "+                            </div>\n", 
            "+                        </li>\n", 
            "+                    </ul>\n", 
            "+                </p>\n", 
            "+            </subsection>\n", 
            "+            <subsection name=\"Executing the Client\">\n", 
            "+                <p>\n", 
            "+                    Run the sample client as follows.\n", 
            "+                </p>\n", 
            "+                <div class=\"command\">ant stockquote -Daddurl=http://localhost:9000/services/SimpleStockQuoteService -Dtrpurl=http://localhost:8280/ -Dmode=customquote</div>\n", 
            "+                <p>\n", 
            "+                    The Python scripts will transform the requests and responses.\n", 
            "+                </p>                \n", 
            "+            </subsection>\n", 
            "+        </section>\n", 
            "+        <p><a href=\"../samples.html\">Back to Catalog</a></p>        \n", 
            "+    </body>\n", 
            "+</document>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/sample355.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/sample355.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,32", 
          "lines": [
            "+#\n", 
            "+#  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+#  or more contributor license agreements.  See the NOTICE file\n", 
            "+#  distributed with this work for additional information\n", 
            "+#  regarding copyright ownership.  The ASF licenses this file\n", 
            "+#  to you under the Apache License, Version 2.0 (the\n", 
            "+#  \"License\"); you may not use this file except in compliance\n", 
            "+#  with the License.  You may obtain a copy of the License at\n", 
            "+#\n", 
            "+#   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+#\n", 
            "+#  Unless required by applicable law or agreed to in writing,\n", 
            "+#  software distributed under the License is distributed on an\n", 
            "+#   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+#  KIND, either express or implied.  See the License for the\n", 
            "+#  specific language governing permissions and limitations\n", 
            "+#  under the License. \n", 
            "+# \n", 
            "+\n", 
            "+from org.apache.synapse.util.xpath import SynapseXPath\n", 
            "+\n", 
            "+def transformRequest(mc):\n", 
            "+    symbolXPath = SynapseXPath(\"//*[local-name()='Code']/text()\")\n", 
            "+    symbol = symbolXPath.stringValueOf(mc)\n", 
            "+    mc.setPayloadXML('''\n", 
            "+\t<m:getQuote xmlns:m=\"http://services.samples\">\n", 
            "+\t\t<m:request>\n", 
            "+\t\t\t<m:symbol>''' + symbol + '''</m:symbol>\n", 
            "+\t\t</m:request>\n", 
            "+\t</m:getQuote>''')\n", 
            "+\n", 
            "+\n"
          ]
        }
      ], 
      "to": "java/repository/conf/sample/resources/script/stockquoteTransformRequest.py", 
      "from": "java/repository/conf/sample/resources/script/stockquoteTransformRequest.py"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,32", 
          "lines": [
            "+#\n", 
            "+#    Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+#    or more contributor license agreements.  See the NOTICE file\n", 
            "+#    distributed with this work for additional information\n", 
            "+#    regarding copyright ownership.  The ASF licenses this file\n", 
            "+#    to you under the Apache License, Version 2.0 (the\n", 
            "+#    \"License\"); you may not use this file except in compliance\n", 
            "+#    with the License.  You may obtain a copy of the License at\n", 
            "+#  \n", 
            "+#     http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+#  \n", 
            "+#    Unless required by applicable law or agreed to in writing,\n", 
            "+#    software distributed under the License is distributed on an\n", 
            "+#     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+#    KIND, either express or implied.  See the License for the\n", 
            "+#    specific language governing permissions and limitations\n", 
            "+#    under the License.\n", 
            "+# \n", 
            "+\n", 
            "+from org.apache.synapse.util.xpath import SynapseXPath\n", 
            "+\n", 
            "+def transformResponse(mc):\n", 
            "+    symbolXPath = SynapseXPath(\"//*[local-name()='symbol']/text()\")\n", 
            "+    symbol = symbolXPath.stringValueOf(mc)\n", 
            "+    lastXPath = SynapseXPath(\"//*[local-name()='last']/text()\")\n", 
            "+    price = lastXPath.stringValueOf(mc)\n", 
            "+    mc.setPayloadXML('''\n", 
            "+       <m:CheckPriceResponse xmlns:m=\"http://services.samples/xsd\">\n", 
            "+\t  <m:Code>''' + symbol + '''</m:Code>\n", 
            "+\t  <m:Price>''' + price + '''</m:Price>\n", 
            "+       </m:CheckPriceResponse>\n", 
            "+   ''')\n"
          ]
        }
      ], 
      "to": "java/repository/conf/sample/resources/script/stockquoteTransformResponse.py", 
      "from": "java/repository/conf/sample/resources/script/stockquoteTransformResponse.py"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,54", 
          "lines": [
            "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n", 
            "+<!--\n", 
            "+  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "+  ~  distributed with this work for additional information\n", 
            "+  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "+  ~  to you under the Apache License, Version 2.0 (the\n", 
            "+  ~  \"License\"); you may not use this file except in compliance\n", 
            "+  ~  with the License.  You may obtain a copy of the License at\n", 
            "+  ~\n", 
            "+  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+  ~\n", 
            "+  ~  Unless required by applicable law or agreed to in writing,\n", 
            "+  ~  software distributed under the License is distributed on an\n", 
            "+  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+  ~  KIND, either express or implied.  See the License for the\n", 
            "+  ~  specific language governing permissions and limitations\n", 
            "+  ~  under the License.\n", 
            "+  -->\n", 
            "+\n", 
            "+<!-- Using Python scripts for mediation -->\n", 
            "+<definitions xmlns=\"http://ws.apache.org/ns/synapse\">\n", 
            "+\n", 
            "+    <registry provider=\"org.apache.synapse.registry.url.SimpleURLRegistry\">\n", 
            "+        <!-- the root property of the simple URL registry helps resolve a resource URL as root + key -->\n", 
            "+        <parameter name=\"root\">file:repository/conf/sample/resources/</parameter>\n", 
            "+        <!-- all resources loaded from the URL registry would be cached for this number of milli seconds -->\n", 
            "+        <parameter name=\"cachableDuration\">15000</parameter>\n", 
            "+    </registry>\n", 
            "+\n", 
            "+    <localEntry key=\"stockquoteScript\"\n", 
            "+                src=\"file:repository/conf/sample/resources/script/stockquoteTransformRequest.py\"/>\n", 
            "+\n", 
            "+    <sequence name=\"main\">\n", 
            "+        <in>\n", 
            "+            <!-- transform the custom quote request into a standard quote request expected by the service -->\n", 
            "+            <script language=\"py\" key=\"stockquoteScript\" function=\"transformRequest\"/>\n", 
            "+            <send>\n", 
            "+                <endpoint>\n", 
            "+                    <address uri=\"http://localhost:9000/services/SimpleStockQuoteService\"/>\n", 
            "+                </endpoint>\n", 
            "+            </send>\n", 
            "+        </in>\n", 
            "+        <out>\n", 
            "+            <!-- transform the standard response back into the custom format the client expects -->\n", 
            "+            <script language=\"py\" key=\"script/stockquoteTransformResponse.py\"\n", 
            "+                    function=\"transformResponse\"/>\n", 
            "+            <send/>\n", 
            "+        </out>\n", 
            "+    </sequence>\n", 
            "+\n", 
            "+</definitions>\n", 
            "+\n", 
            "+\n"
          ]
        }
      ], 
      "to": "java/repository/conf/sample/synapse_sample_355.xml", 
      "from": "java/repository/conf/sample/synapse_sample_355.xml"
    }
  ], 
  "id": "1776121"
}