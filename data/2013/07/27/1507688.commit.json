{
  "when": "2013-07-27T12:26:43-04:00", 
  "who": "sadeep", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-88,15 +88,15", 
          "lines": [
            "                         <li>\n", 
            "                             Add minimal client JARs of your EJB Container to SYNAPSE_HOME/lib. \n", 
            "                             E.g. If you are using JBoss 7, it is sufficient to add the \n", 
            "-                            jboss-client.jar file.\n", 
            "+                            <i>jboss-client.jar</i> file.\n", 
            "                         </li>\n", 
            "                         <li>\n", 
            "-                            Add the synapse-samples-ejb-1.0.0.jar to SYNAPSE_HOME/lib. (Note: adding \n", 
            "+                            Add the <i>synapse-samples-ejb-1.0.0.jar</i> to SYNAPSE_HOME/lib. (Note: adding\n", 
            "                             only the remote interfaces of the EJBs will suffice. Here we are using\n", 
            "                             the complete jar file for simplicity.)\n", 
            "                         </li>                \n", 
            "                         <li>\n", 
            "-                            Configure a beanstalk named 'demo' in\n", 
            "+                            Configure a beanstalk named <i>demo</i> in\n", 
            "                             SYNAPSE_HOME/repository/conf/synapse.properties. You will need to \n", 
            "                             specify the JNDI properties of your EJB Container in this configuration.\n", 
            "                             Some example configurations are shown below. <br/> \n"
          ]
        }, 
        {
          "locn": "-127,9 +127,9", 
          "lines": [
            "                         <li>\n", 
            "                             If the JNDI names assigned to the EJBs by your EJB Container differ from\n", 
            "                             the JNDI names specified in the sample 470 configuration file\n", 
            "-                            (repository/conf/sample/synapse_sample_470.xml), edit 'jndiName' \n", 
            "+                            (repository/conf/sample/synapse_sample_470.xml), edit the <i>jndiName</i>\n", 
            "                             attribute of all &lt; ejb /&gt; mediator invocations in the \n", 
            "-                            synapse_sample_470.xml accordingly.\n", 
            "+                            <i>synapse_sample_470.xml</i> accordingly.\n", 
            "                         </li>\n", 
            "                         <li>\n", 
            "                             Start Synapse using the configuration numbered 470 \n"
          ]
        }, 
        {
          "locn": "-174,7 +174,7", 
          "lines": [
            "                 </p>\n", 
            "                 <p>\n", 
            "                     Finally, Enrich and Bean mediators are used to build the response message extracting properties from\n", 
            "-                    the JavaBean stored in the <i>store</i> property.\n", 
            "+                    the JavaBean stored in the <i>store</i> message context property.\n", 
            "                 </p>\n", 
            "                 <p>A sample response is shown below.</p>\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/sample470.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/sample470.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,176", 
          "lines": [
            "+<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n", 
            "+<!--\n", 
            "+  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "+  ~  distributed with this work for additional information\n", 
            "+  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "+  ~  to you under the Apache License, Version 2.0 (the\n", 
            "+  ~  \"License\"); you may not use this file except in compliance\n", 
            "+  ~  with the License.  You may obtain a copy of the License at\n", 
            "+  ~\n", 
            "+  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+  ~\n", 
            "+  ~  Unless required by applicable law or agreed to in writing,\n", 
            "+  ~  software distributed under the License is distributed on an\n", 
            "+  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+  ~  KIND, either express or implied.  See the License for the\n", 
            "+  ~  specific language governing permissions and limitations\n", 
            "+  ~  under the License.\n", 
            "+  -->\n", 
            "+\n", 
            "+<document>\n", 
            "+    <properties>\n", 
            "+        <title>Apache Synapse - Sample 471</title>\n", 
            "+    </properties>\n", 
            "+    <body>\n", 
            "+        <section name=\"Sample 471: Introduction to the EJB Mediator II - Invoking Stateful Session Beans\">\n", 
            "+            <div class=\"xmlConf\">&lt;definitions&gt;\n", 
            "+    &lt;proxy name=&quot;BuyAllProxy&quot; transports=&quot;https http&quot; startOnLoad=&quot;true&quot; trace=&quot;disable&quot;&gt;\n", 
            "+        &lt;target&gt;\n", 
            "+            &lt;!-- Iterate over all items in the request and call addItem() on the ShoppingCart EJB for each item. --&gt;\n", 
            "+            &lt;inSequence&gt;\n", 
            "+                &lt;property name=&quot;SESSION_ID&quot; expression=&quot;get-property(&apos;MessageID&apos;)&quot;/&gt;\n", 
            "+                &lt;iterate xmlns:m0=&quot;http://services.samples&quot; preservePayload=&quot;false&quot;\n", 
            "+                         expression=&quot;//m0:buyItems/m0:items/m0:item&quot;&gt;\n", 
            "+                    &lt;target&gt;\n", 
            "+                        &lt;sequence&gt;\n", 
            "+                            &lt;ejb class=&quot;samples.ejb.ShoppingCart&quot; beanstalk=&quot;demo&quot; method=&quot;addItem&quot; sessionId=&quot;{get-property(&apos;SESSION_ID&apos;)}&quot; jndiName=&quot;ShoppingCartBean/remote&quot;&gt;\n", 
            "+                                &lt;args&gt;\n", 
            "+                                    &lt;arg value=&quot;{//m:item//m:id}&quot; xmlns:m=&quot;http://services.samples&quot;/&gt;\n", 
            "+                                    &lt;arg value=&quot;{//m:item//m:quantity}&quot; xmlns:m=&quot;http://services.samples&quot;/&gt;\n", 
            "+                                &lt;/args&gt;\n", 
            "+                            &lt;/ejb&gt;\n", 
            "+                            &lt;sequence key=&quot;collector&quot;/&gt;\n", 
            "+                        &lt;/sequence&gt;\n", 
            "+                    &lt;/target&gt;\n", 
            "+                &lt;/iterate&gt;\n", 
            "+            &lt;/inSequence&gt;\n", 
            "+        &lt;/target&gt;\n", 
            "+    &lt;/proxy&gt;\n", 
            "+\n", 
            "+    &lt;!-- Prepare the response once all addItem() calls are finished. --&gt;\n", 
            "+    &lt;sequence name=&quot;collector&quot;&gt;\n", 
            "+        &lt;aggregate&gt;\n", 
            "+            &lt;onComplete&gt;\n", 
            "+                &lt;ejb class=&quot;samples.ejb.ShoppingCart&quot; beanstalk=&quot;demo&quot; method=&quot;getItemCount&quot; sessionId=&quot;{get-property(&apos;SESSION_ID&apos;)}&quot; target=&quot;ITEM_COUNT&quot;/&gt;\n", 
            "+                &lt;ejb class=&quot;samples.ejb.ShoppingCart&quot; beanstalk=&quot;demo&quot; method=&quot;getTotal&quot; sessionId=&quot;{get-property(&apos;SESSION_ID&apos;)}&quot; target=&quot;TOTAL&quot; remove=&quot;true&quot;/&gt;\n", 
            "+                &lt;payloadFactory&gt;\n", 
            "+                    &lt;format&gt;\n", 
            "+                        &lt;buyAllResponse xmlns=&quot;&quot;&gt;\n", 
            "+                            &lt;itemCount&gt;$1&lt;/itemCount&gt;\n", 
            "+                            &lt;total&gt;$2&lt;/total&gt;\n", 
            "+                        &lt;/buyAllResponse&gt;\n", 
            "+                    &lt;/format&gt;\n", 
            "+                    &lt;args&gt;\n", 
            "+                        &lt;arg expression=&quot;get-property(&apos;ITEM_COUNT&apos;)&quot;/&gt;\n", 
            "+                        &lt;arg expression=&quot;get-property(&apos;TOTAL&apos;)&quot;/&gt;\n", 
            "+                    &lt;/args&gt;\n", 
            "+                &lt;/payloadFactory&gt;\n", 
            "+                &lt;property name=&quot;RESPONSE&quot; value=&quot;true&quot;/&gt;\n", 
            "+                &lt;header name=&quot;To&quot; action=&quot;remove&quot;/&gt;\n", 
            "+                &lt;send/&gt;\n", 
            "+            &lt;/onComplete&gt;\n", 
            "+        &lt;/aggregate&gt;\n", 
            "+    &lt;/sequence&gt;\n", 
            "+\n", 
            "+&lt;/definitions&gt;</div>\n", 
            "+            <subsection name=\"Objective\">\n", 
            "+                <p>\n", 
            "+                    Demonstrate the usage of the EJB mediator for invoking EJB Stateful\n", 
            "+                    Session Beans hosted on a remote EJB Container.\n", 
            "+                </p>\n", 
            "+            </subsection>\n", 
            "+            <subsection name=\"Pre-requisites\">\n", 
            "+                <p>\n", 
            "+                    <ul>\n", 
            "+                        <li>\n", 
            "+                            Follow steps 1 to 5 in <a href=\"sample470.html\">Sample 470</a> to host the EJBs\n", 
            "+                            in an EJB Container of your choice and to configure the <i>demo</i> beanstalk.\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            If the JNDI names assigned to the EJBs by your EJB Container differ from\n", 
            "+                            the JNDI names specified in the sample 471 configuration file\n", 
            "+                            (repository/conf/sample/synapse_sample_471.xml), edit the <i>jndiName</i>\n", 
            "+                            attribute of all &lt; ejb /&gt; mediator invocations in the\n", 
            "+                            <i>synapse_sample_471.xml</i> accordingly.\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            Start Synapse using the configuration numbered 471\n", 
            "+                            (repository/conf/sample/synapse_sample_471.xml):\n", 
            "+                            <div class=\"command\">\n", 
            "+                                Unix/Linux: sh synapse.sh -sample 471<br/>\n", 
            "+                                Windows: synapse.bat -sample 471\n", 
            "+                            </div>\n", 
            "+                        </li>\n", 
            "+                    </ul>\n", 
            "+                </p>\n", 
            "+            </subsection>\n", 
            "+            <subsection name=\"Executing the Client\">                \n", 
            "+                <p>\n", 
            "+                    Send the following request to http://localhost:8280/services/BuyAllProxy\n", 
            "+                    using a tool such at <a href=\"http://ws.apache.org/tcpmon/\">TCPMon</a> or curl.\n", 
            "+                </p>\n", 
            "+<div class=\"xmlConf\">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n", 
            "+  &lt;soapenv:Body&gt;\n", 
            "+    &lt;buyItems xmlns=&quot;http://services.samples&quot;&gt;\n", 
            "+        &lt;items&gt;\n", 
            "+            &lt;item&gt;\n", 
            "+                &lt;id&gt;2150&lt;/id&gt;\n", 
            "+                &lt;quantity&gt;1&lt;/quantity&gt;\n", 
            "+            &lt;/item&gt;\n", 
            "+            &lt;item&gt;\n", 
            "+                &lt;id&gt;1189&lt;/id&gt;\n", 
            "+                &lt;quantity&gt;2&lt;/quantity&gt;\n", 
            "+            &lt;/item&gt;\n", 
            "+            &lt;item&gt;\n", 
            "+                &lt;id&gt;890&lt;/id&gt;\n", 
            "+                &lt;quantity&gt;4&lt;/quantity&gt;\n", 
            "+            &lt;/item&gt;\n", 
            "+        &lt;/items&gt;\n", 
            "+    &lt;/buyItems&gt;\n", 
            "+  &lt;/soapenv:Body&gt;\n", 
            "+&lt;/soapenv:Envelope&gt;</div>\n", 
            "+\n", 
            "+                <p>\n", 
            "+                    Each instance of the <i>ShoppingCart</i> stateful session bean hosted on the remote EJB container\n", 
            "+                    maintains a state which keeps track of the number and the total price of the items\n", 
            "+                    added via its <i>addItem(String itemId, int count)</i> method. The <i>float getTotal()</i> and\n", 
            "+                    <i>int getItemCount()</i> methods are used to retrieve this state.\n", 
            "+                </p>\n", 
            "+                <p>\n", 
            "+                    When the <i>BuyAllProxy</i> receives the above request, it iterates over all &lt;item&gt; elements\n", 
            "+                    in the request and calls the <i>addItem()</i> method on the <i>ShoppingCart</i> bean,\n", 
            "+                    once per each &lt;item&gt;, using the EJB mediator. Since the <i>sessionId</i> used for these\n", 
            "+                    invocations is actually the message ID, each request works on a new <i>ShoppingCart</i> instance\n", 
            "+                    which is created at the first EJB mediator invocation in that request's flow.\n", 
            "+                </p>\n", 
            "+                <p>\n", 
            "+                    When all <i>addItem()</i> method calls are finished, <i>getItemCount()</i> and <i>getTotal()</i> methods\n", 
            "+                    are invoked on the same <i>ShoppingCart</i> instance within the <i>collector</i> sequence and\n", 
            "+                    results are stored in two message context properties named <i>ITEM_COUNT</i> and <i>TOTAL</i>.\n", 
            "+                    The last EJB call on the shopping cart sets the EJB mediator attribute <i>remove = \"true\"</i>\n", 
            "+                    instructing the current stateful bean stub to be removed from the beanstalk. This is because the\n", 
            "+                    same stateful bean instance will not be used again (each request uses a new bean instance). If the\n", 
            "+                    user does not explicitly remove the stub using this attribute, it will be removed automatically\n", 
            "+                    upon timeout as specified by the beanstalk configuration.\n", 
            "+                </p>\n", 
            "+                <p>\n", 
            "+                    Finally, the PayloadFactory mediator is used to build the response message which is sent back to the\n", 
            "+                    client.\n", 
            "+                </p>\n", 
            "+                <p>A sample response is shown below.</p>\n", 
            "+\n", 
            "+<div class=\"xmlConf\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n", 
            "+&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n", 
            "+  &lt;soapenv:Body&gt;\n", 
            "+    &lt;buyAllResponse&gt;\n", 
            "+      &lt;itemCount&gt;7&lt;/itemCount&gt;\n", 
            "+      &lt;total&gt;807.0&lt;/total&gt;\n", 
            "+    &lt;/buyAllResponse&gt;\n", 
            "+  &lt;/soapenv:Body&gt;\n", 
            "+&lt;/soapenv:Envelope&gt;</div>\n", 
            "+            </subsection>\n", 
            "+        </section>\n", 
            "+        <p><a href=\"../samples.html\">Back to Catalog</a></p>        \n", 
            "+    </body>\n", 
            "+</document>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/sample471.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/sample471.xml"
    }
  ], 
  "id": "1507688"
}