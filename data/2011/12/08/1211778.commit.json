{
  "when": "2011-12-08T03:05:30-05:00", 
  "message": "Log messages updated", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-45,7 +45,7", 
          "lines": [
            "                 currentLocation + \"repository/conf/sample/resources/mtom/asf-logo.gif\");\n", 
            "         log.info(\"Running test: MTOM optimization and request/response correlation \");\n", 
            "         result = client.sendUsingMTOM(filename, ep);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " \n"
          ]
        }, 
        {
          "locn": "-57,7 +57,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test:SwA optimization and request/response correlation \");\n", 
            "         result = client.sendUsingSWA(filename, ep);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample51.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample51.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Session-less load balancing between 3 endpoints\");\n", 
            "         result = client.sessionlessClient(addUrl, null, 100);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample52.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample52.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-41,7 +41,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Smart Client mode\");\n", 
            "         result = client.requestStandardQuote(addUrl, null, null, \"IBM\" ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample56.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample56.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-41,7 +41,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Weighted load balancing between 3 endpoints\");\n", 
            "         result = client.sessionlessClient(addUrl,null, 100);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample59.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample59.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: HTTP REST request \");\n", 
            "         result = client.requestRestQuote(null, trpUrl, null, \"IBM\");\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample50.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample50.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Smart Client mode\");\n", 
            "         result = client.requestStandardQuote(addUrl, trpUrl, null, \"IBM\" ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " \n"
          ]
        }, 
        {
          "locn": "-52,7 +52,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Using Synapse as a HTTP Proxy\");\n", 
            "         result = client.requestStandardQuote(addUrl, null, prxUrl, \"IBM\", null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample0.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample0.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-41,7 +41,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Dumb Client mode\");\n", 
            "         result = client.requestStandardQuote(null, trpUrl, null, \"IBM\" ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample1.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample1.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,9 +42,9", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: CBR with the Switch-case mediator, using message properties\");\n", 
            "         result = client.requestStandardQuote(addUrl, trpUrl, null, \"IBM\" ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "         result = client.requestStandardQuote(addUrl, trpUrl, null, \"MSFT\" ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample2.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample2.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Local Registry entry definitions, reusable endpoints and sequences\");\n", 
            "         result = client.requestStandardQuote(addUrl, trpUrl, null, \"IBM\" ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample3.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample3.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-41,7 +41,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Dumb Client mode  \");\n", 
            "         result = client.requestStandardQuote(null, trpUrl, null, null ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample6.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample6.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Introduction to static and dynamic registry resources, and using XSLT transformations  \");\n", 
            "         result = client.requestCustomQuote(addUrl, trpUrl, null, \"IBM\");\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample8.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample8.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Dynamic Sequences with Registry\");\n", 
            "         result = client.requestStandardQuote(addUrl, trpUrl, null, \"IBM\" ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample9.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample9.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-41,7 +41,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Dynamic EndPoints with Registry\");\n", 
            "         result = client.requestStandardQuote(null, trpUrl, null, \"IBM\", null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample10.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample10.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Local Registry entry definitions, reusable endpoints and sequences\");\n", 
            "         result = client.requestStandardQuote(addUrl, trpUrl, null, \"IBM\",null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample11.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample11.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: One way messaging / fireAndForget through Synapse\");\n", 
            "         result = client.placeOrder(addUrl, trpUrl, null, \"IBM\");\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample12.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample12.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Dual channel invocation through Synapse\");\n", 
            "         result = client.requestDualQuote(addUrl, trpUrl, null, \"IBM\");\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample13.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample13.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-41,7 +41,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Message Enrichment through Synapse\");\n", 
            "         result = client.requestStandardQuote(null, trpUrl, null, \"IBM\" ,null);\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample15.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample15.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,7", 
          "lines": [
            " \n", 
            "         log.info(\"Running test: Introduction to dynamic and static keys \");\n", 
            "         result = client.requestCustomQuote(addUrl, trpUrl, null, \"IBM\");\n", 
            "-        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample16.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample16.java"
    }
  ], 
  "id": "1211778"
}