{
  "when": "2013-10-11T17:50:39-04:00", 
  "message": "Retiring sandesha and RM related code - See http://osdir.com/ml/dev-synapse.apache.org/2013-09/msg00025.html for the mail thread", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-1,41 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n", 
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<!-- Reliable message exchange between the client and proxy services using WS-ReliableMessaging -->\n", 
            "-<definitions xmlns=\"http://ws.apache.org/ns/synapse\">\n", 
            "-\n", 
            "-    <proxy name=\"StockQuoteProxy\">\n", 
            "-        <target>\n", 
            "-            <inSequence>\n", 
            "-                <send>\n", 
            "-                    <endpoint>\n", 
            "-                        <address uri=\"http://localhost:9000/services/SimpleStockQuoteService\"/>\n", 
            "-                    </endpoint>\n", 
            "-                </send>\n", 
            "-            </inSequence>\n", 
            "-            <outSequence>\n", 
            "-                <send/>\n", 
            "-            </outSequence>\n", 
            "-        </target>\n", 
            "-        <publishWSDL uri=\"file:repository/conf/sample/resources/proxy/sample_proxy_1.wsdl\"/>\n", 
            "-        <enableRM/>\n", 
            "-    </proxy>\n", 
            "-\n", 
            "-</definitions>\n"
          ]
        }
      ], 
      "to": "java/repository/conf/sample/synapse_sample_201.xml", 
      "from": "java/repository/conf/sample/synapse_sample_201.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,41 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n", 
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<!-- Reliable message exchange between the client and proxy services using WS-ReliableMessaging -->\n", 
            "-<definitions xmlns=\"http://ws.apache.org/ns/synapse\">\n", 
            "-\n", 
            "-    <proxy name=\"StockQuoteProxy\">\n", 
            "-        <target>\n", 
            "-            <inSequence>\n", 
            "-                <send>\n", 
            "-                    <endpoint>\n", 
            "-                        <address uri=\"http://localhost:9000/services/SimpleStockQuoteService\"/>\n", 
            "-                    </endpoint>\n", 
            "-                </send>\n", 
            "-            </inSequence>\n", 
            "-            <outSequence>\n", 
            "-                <send/>\n", 
            "-            </outSequence>\n", 
            "-        </target>\n", 
            "-        <publishWSDL uri=\"file:repository/conf/sample/resources/proxy/sample_proxy_1.wsdl\"/>\n", 
            "-        <enableRM/>\n", 
            "-    </proxy>\n", 
            "-\n", 
            "-</definitions>\n"
          ]
        }
      ], 
      "to": "java/repository/conf/sample/synapse_sample_202.xml", 
      "from": "java/repository/conf/sample/synapse_sample_202.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,41 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n", 
            "-<!--\r\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\r\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\r\n", 
            "-  ~  distributed with this work for additional information\r\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\r\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\r\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\r\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\r\n", 
            "-  ~\r\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\r\n", 
            "-  ~\r\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\r\n", 
            "-  ~  software distributed under the License is distributed on an\r\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n", 
            "-  ~  KIND, either express or implied.  See the License for the\r\n", 
            "-  ~  specific language governing permissions and limitations\r\n", 
            "-  ~  under the License.\r\n", 
            "-  -->\r\n", 
            "-\r\n", 
            "-<!-- Reliable message exchange between Synapse and the back-end server using WS-ReliableMessaging -->\r\n", 
            "-<definitions xmlns=\"http://ws.apache.org/ns/synapse\">\r\n", 
            "-\r\n", 
            "-    <sequence name=\"main\">\r\n", 
            "-        <in>\r\n", 
            "-            <RMSequence single=\"true\" version=\"1.0\"/>\r\n", 
            "-            <send>\r\n", 
            "-                <endpoint name=\"reliable\">\r\n", 
            "-                    <address uri=\"http://localhost:9000/services/ReliableStockQuoteService\">\r\n", 
            "-                        <enableRM/>\r\n", 
            "-                        <enableAddressing/>\r\n", 
            "-                    </address>\r\n", 
            "-                </endpoint>\r\n", 
            "-            </send>\r\n", 
            "-        </in>\r\n", 
            "-        <out>\r\n", 
            "-            <send/>\r\n", 
            "-        </out>\r\n", 
            "-    </sequence>\r\n", 
            "-\r\n", 
            "-</definitions>\r\n"
          ]
        }
      ], 
      "to": "java/repository/conf/sample/synapse_sample_101.xml", 
      "from": "java/repository/conf/sample/synapse_sample_101.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,41 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n", 
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<!-- Reliable message exchange between Synapse and the back-end server using WS-ReliableMessaging -->\n", 
            "-<definitions xmlns=\"http://ws.apache.org/ns/synapse\">\n", 
            "-\n", 
            "-    <sequence name=\"main\">\n", 
            "-        <in>\n", 
            "-            <RMSequence single=\"true\" version=\"1.1\"/>\n", 
            "-            <send>\n", 
            "-                <endpoint name=\"reliable\">\n", 
            "-                    <address uri=\"http://localhost:9000/services/ReliableStockQuoteService\">\n", 
            "-                        <enableRM/>\n", 
            "-                        <enableAddressing/>\n", 
            "-                    </address>\n", 
            "-                </endpoint>\n", 
            "-            </send>\n", 
            "-        </in>\n", 
            "-        <out>\n", 
            "-            <send/>\n", 
            "-        </out>\n", 
            "-    </sequence>\n", 
            "-\n", 
            "-</definitions>\n"
          ]
        }
      ], 
      "to": "java/repository/conf/sample/synapse_sample_102.xml", 
      "from": "java/repository/conf/sample/synapse_sample_102.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,27 +0,0", 
          "lines": [
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"\n", 
            "-\t\txmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"\n", 
            "-\t    xmlns:wsrm=\"http://ws.apache.org/sandesha2/policy\" wsu:Id=\"RMPolicy\">\n", 
            "-\t        \n", 
            "-\t      <!-- Following policy value has been overrided from the default values.-->> \n", 
            "-\t      <wsrm:AcknowledgementInterval>3500</wsrm:AcknowledgementInterval>\n", 
            "-\t    \n", 
            "-</wsp:Policy>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/repository/conf/sample/resources/policy/sample_rm_policy_1.xml", 
      "from": "java/repository/conf/sample/resources/policy/sample_rm_policy_1.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,46 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n", 
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\"\n", 
            "-           targetNamespace=\"http://ws.apache.org/ns/synapse\"\n", 
            "-           xmlns=\"http://ws.apache.org/ns/synapse\">\n", 
            "-\n", 
            "-    <xs:element name=\"RMSequence\">\n", 
            "-        <xs:annotation>\n", 
            "-            <xs:documentation source=\"description\">\n", 
            "-                RMSequence mediator to process reliable messaging properties of the message\n", 
            "-            </xs:documentation>\n", 
            "-        </xs:annotation>\n", 
            "-        <xs:complexType>\n", 
            "-            <xs:attribute name=\"correlation\" type=\"xs:string\" use=\"optional\"/>\n", 
            "-            <xs:attribute name=\"last-message\" type=\"xs:string\" use=\"optional\"/>\n", 
            "-            <xs:attribute name=\"single\" type=\"xs:boolean\" default=\"true\" use=\"optional\"/>\n", 
            "-            <xs:attribute name=\"version\" default=\"1.0\" use=\"required\">\n", 
            "-                <xs:simpleType>\n", 
            "-                    <xs:restriction base=\"xs:double\">\n", 
            "-                        <xs:enumeration value=\"1.0\"/>\n", 
            "-                        <xs:enumeration value=\"1.1\"/>\n", 
            "-                    </xs:restriction>\n", 
            "-                </xs:simpleType>\n", 
            "-            </xs:attribute>\n", 
            "-        </xs:complexType>\n", 
            "-    </xs:element>\n", 
            "-\n", 
            "-</xs:schema>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/repository/schema/mediators/advanced/rm_sequence.xsd", 
      "from": "java/repository/schema/mediators/advanced/rm_sequence.xsd"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,45 +0,0", 
          "lines": [
            "-/*\n", 
            "- *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "- *  or more contributor license agreements.  See the NOTICE file\n", 
            "- *  distributed with this work for additional information\n", 
            "- *  regarding copyright ownership.  The ASF licenses this file\n", 
            "- *  to you under the Apache License, Version 2.0 (the\n", 
            "- *  \"License\"); you may not use this file except in compliance\n", 
            "- *  with the License.  You may obtain a copy of the License at\n", 
            "- *\n", 
            "- *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "- *\n", 
            "- *  Unless required by applicable law or agreed to in writing,\n", 
            "- *  software distributed under the License is distributed on an\n", 
            "- *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "- *  KIND, either express or implied.  See the License for the\n", 
            "- *  specific language governing permissions and limitations\n", 
            "- *  under the License.\n", 
            "- */\n", 
            "-\n", 
            "-package org.apache.synapse.config.xml;\n", 
            "-\n", 
            "-public class RMSequenceMediatorSerializationTest extends AbstractTestCase {\n", 
            "-\n", 
            "-    private RMSequenceMediatorFactory rmSequenceMediatorFactory;\n", 
            "-    private RMSequenceMediatorSerializer rmSequenceMediatorSerializer;\n", 
            "-\n", 
            "-    public RMSequenceMediatorSerializationTest() {\n", 
            "-        rmSequenceMediatorFactory = new RMSequenceMediatorFactory();\n", 
            "-        rmSequenceMediatorSerializer = new RMSequenceMediatorSerializer();\n", 
            "-    }\n", 
            "-\n", 
            "-    public void testRMSequenceSerializationTestScenarioOne() {\n", 
            "-        String inputXml = \"<RMSequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" \" +\n", 
            "-                          \"single=\\\"true\\\" version=\\\"1.0\\\"/>\";\n", 
            "-        assertTrue(serialization(inputXml, rmSequenceMediatorFactory, rmSequenceMediatorSerializer));\n", 
            "-        assertTrue(serialization(inputXml, rmSequenceMediatorSerializer));\n", 
            "-    }\n", 
            "-\n", 
            "-    public void testRMSequenceSerializationTestScenarioTwo() {\n", 
            "-        String inputXml = \"<RMSequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" \" +\n", 
            "-                          \"correlation=\\\"get-property('To')\\\" last-message=\\\"get-property('To')\\\" version=\\\"1.1\\\"/>\";\n", 
            "-        assertTrue(serialization(inputXml, rmSequenceMediatorFactory, rmSequenceMediatorSerializer));\n", 
            "-        assertTrue(serialization(inputXml, rmSequenceMediatorSerializer));\n", 
            "-    }\n", 
            "-}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/test/java/org/apache/synapse/config/xml/RMSequenceMediatorSerializationTest.java", 
      "from": "java/modules/core/src/test/java/org/apache/synapse/config/xml/RMSequenceMediatorSerializationTest.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,227 +0,0", 
          "lines": [
            "-/*\n", 
            "- *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "- *  or more contributor license agreements.  See the NOTICE file\n", 
            "- *  distributed with this work for additional information\n", 
            "- *  regarding copyright ownership.  The ASF licenses this file\n", 
            "- *  to you under the Apache License, Version 2.0 (the\n", 
            "- *  \"License\"); you may not use this file except in compliance\n", 
            "- *  with the License.  You may obtain a copy of the License at\n", 
            "- *\n", 
            "- *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "- *\n", 
            "- *  Unless required by applicable law or agreed to in writing,\n", 
            "- *  software distributed under the License is distributed on an\n", 
            "- *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "- *  KIND, either express or implied.  See the License for the\n", 
            "- *  specific language governing permissions and limitations\n", 
            "- *  under the License.\n", 
            "- */\n", 
            "-\n", 
            "-package org.apache.synapse.mediators.builtin;\n", 
            "-\n", 
            "-import org.apache.axiom.om.OMElement;\n", 
            "-import org.apache.axiom.util.UIDGenerator;\n", 
            "-import org.apache.sandesha2.client.SandeshaClientConstants;\n", 
            "-import org.apache.synapse.MessageContext;\n", 
            "-import org.apache.synapse.SynapseLog;\n", 
            "-import org.apache.synapse.config.Entry;\n", 
            "-import org.apache.synapse.config.xml.XMLConfigConstants;\n", 
            "-import org.apache.synapse.core.axis2.Axis2MessageContext;\n", 
            "-import org.apache.synapse.mediators.AbstractMediator;\n", 
            "-import org.apache.synapse.util.xpath.SynapseXPath;\n", 
            "-import org.jaxen.JaxenException;\n", 
            "-\n", 
            "-import java.util.Collections;\n", 
            "-import java.util.HashMap;\n", 
            "-import java.util.Map;\n", 
            "-\n", 
            "-public class RMSequenceMediator extends AbstractMediator {\n", 
            "-\n", 
            "-    private SynapseXPath correlation = null;\n", 
            "-    private SynapseXPath lastMessage = null;\n", 
            "-    private Boolean single = null;\n", 
            "-    private String version = null;\n", 
            "-\n", 
            "-    private static final String WSRM_SpecVersion_1_0 = \"Spec_2005_02\";\n", 
            "-    private static final String WSRM_SpecVersion_1_1 = \"Spec_2007_02\";\n", 
            "-    // set sequence expiry time to 5 minutes\n", 
            "-    private static final long SEQUENCE_EXPIRY_TIME = 300000;\n", 
            "-    private static final Map<String, Entry> sequenceMap =\n", 
            "-            Collections.synchronizedMap(new HashMap<String, Entry>());\n", 
            "-\n", 
            "-    public boolean mediate(MessageContext synCtx) {\n", 
            "-\n", 
            "-        SynapseLog synLog = getLog(synCtx);\n", 
            "-\n", 
            "-        if (synLog.isTraceOrDebugEnabled()) {\n", 
            "-            synLog.traceOrDebug(\"Start : RMSequence mediator\");\n", 
            "-\n", 
            "-            if (synLog.isTraceTraceEnabled()) {\n", 
            "-                synLog.traceTrace(\"Message : \" + synCtx.getEnvelope());\n", 
            "-            }\n", 
            "-        }\n", 
            "-\n", 
            "-        if (!(synCtx instanceof Axis2MessageContext)) {\n", 
            "-            synLog.traceOrDebug(\"Only axis2 message contexts are supported\");\n", 
            "-\n", 
            "-        } else {\n", 
            "-            Axis2MessageContext axis2MessageCtx = (Axis2MessageContext) synCtx;\n", 
            "-            org.apache.axis2.context.MessageContext orgMessageCtx =\n", 
            "-                axis2MessageCtx.getAxis2MessageContext();\n", 
            "-\n", 
            "-            cleanupSequenceMap();\n", 
            "-\n", 
            "-            String version = getVersionValue();\n", 
            "-            orgMessageCtx.getOptions().setProperty(\n", 
            "-                SandeshaClientConstants.RM_SPEC_VERSION, version);\n", 
            "-\n", 
            "-            // always we need to start a new sequence if there is an terminated sequence\n", 
            "-            orgMessageCtx.getOptions().setProperty(\n", 
            "-                        SandeshaClientConstants.AUTO_START_NEW_SEQUENCE, \"true\");\n", 
            "-\n", 
            "-            if (isSingle()) {\n", 
            "-                orgMessageCtx.getOptions().setProperty(\n", 
            "-                    SandeshaClientConstants.LAST_MESSAGE, \"true\");\n", 
            "-\n", 
            "-                if (synLog.isTraceOrDebugEnabled()) {\n", 
            "-                    synLog.traceOrDebug(\"Using WS-RM version \" + version);\n", 
            "-                }\n", 
            "-\n", 
            "-            } else {\n", 
            "-\n", 
            "-                String correlationValue = getCorrelationValue(synCtx);\n", 
            "-                boolean lastMessage = isLastMessage(synCtx);\n", 
            "-                String offeredSeqID = null;\n", 
            "-\n", 
            "-                if (!sequenceMap.containsKey(correlationValue)) {\n", 
            "-                    offeredSeqID = UIDGenerator.generateURNString();\n", 
            "-                    orgMessageCtx.getOptions().setProperty(\n", 
            "-                        SandeshaClientConstants.OFFERED_SEQUENCE_ID, offeredSeqID);\n", 
            "-                }\n", 
            "-\n", 
            "-                String sequenceID = retrieveSequenceID(correlationValue);\n", 
            "-                orgMessageCtx.getOptions().setProperty(\n", 
            "-                    SandeshaClientConstants.SEQUENCE_KEY, sequenceID);\n", 
            "-\n", 
            "-                if (lastMessage) {\n", 
            "-                    orgMessageCtx.getOptions().setProperty(\n", 
            "-                        SandeshaClientConstants.LAST_MESSAGE, \"true\");\n", 
            "-                    sequenceMap.remove(correlationValue);\n", 
            "-                }\n", 
            "-\n", 
            "-                if (synLog.isTraceOrDebugEnabled()) {\n", 
            "-                    synLog.traceOrDebug(\"Correlation value : \" + correlationValue +\n", 
            "-                            \" last message = \" + lastMessage + \" using sequence : \" + sequenceID +\n", 
            "-                            (offeredSeqID != null ? \" offering sequence : \" + offeredSeqID : \"\"));\n", 
            "-                }\n", 
            "-            }\n", 
            "-        }\n", 
            "-\n", 
            "-        synLog.traceOrDebug(\"End : RMSequence mediator\");\n", 
            "-        return true;\n", 
            "-    }\n", 
            "-\n", 
            "-    private String retrieveSequenceID(String correlationValue) {\n", 
            "-        String sequenceID;\n", 
            "-        if (!sequenceMap.containsKey(correlationValue)) {\n", 
            "-            sequenceID = UIDGenerator.generateURNString();\n", 
            "-            if (log.isDebugEnabled()) {\n", 
            "-                log.debug(\"setting sequenceID \" + sequenceID + \" for correlation \" + correlationValue);\n", 
            "-            }\n", 
            "-            Entry sequenceEntry = new Entry();\n", 
            "-            sequenceEntry.setValue(sequenceID);\n", 
            "-            sequenceEntry.setExpiryTime(System.currentTimeMillis() + SEQUENCE_EXPIRY_TIME);\n", 
            "-            sequenceMap.put(correlationValue, sequenceEntry);\n", 
            "-        } else {\n", 
            "-            sequenceID = (String) ((Entry) sequenceMap.get(correlationValue)).getValue();\n", 
            "-            if (log.isDebugEnabled()) {\n", 
            "-                log.debug(\"got sequenceID \" + sequenceID + \" for correlation \" + correlationValue);\n", 
            "-            }\n", 
            "-        }\n", 
            "-        return sequenceID;\n", 
            "-    }\n", 
            "-\n", 
            "-    private String getCorrelationValue(MessageContext smc) {\n", 
            "-        try {\n", 
            "-            OMElement node = (OMElement) getCorrelation().selectSingleNode(smc);\n", 
            "-            if (node != null) {\n", 
            "-                return node.getText();\n", 
            "-            } else {\n", 
            "-                handleException(\"XPath expression : \" + getCorrelation() +\n", 
            "-                        \" did not return any node\", smc);\n", 
            "-            }\n", 
            "-\n", 
            "-        } catch (JaxenException e) {\n", 
            "-            handleException(\"Error evaluating XPath expression to determine correlation : \" +\n", 
            "-                    getCorrelation(), e, smc);\n", 
            "-        }\n", 
            "-        return null; // never called\n", 
            "-    }\n", 
            "-\n", 
            "-    private String getVersionValue() {\n", 
            "-        if (XMLConfigConstants.SEQUENCE_VERSION_1_1.equals(getVersion())) {\n", 
            "-            return WSRM_SpecVersion_1_1;\n", 
            "-        } else {\n", 
            "-            return WSRM_SpecVersion_1_0;\n", 
            "-        }\n", 
            "-    }\n", 
            "-\n", 
            "-    private boolean isLastMessage(MessageContext smc) {\n", 
            "-        if (getLastMessage() == null) {\n", 
            "-            return false;\n", 
            "-        } else {\n", 
            "-            try {\n", 
            "-                return getLastMessage().booleanValueOf(smc);\n", 
            "-            } catch (JaxenException e) {\n", 
            "-                handleException(\"Error evaluating XPath expression to determine if last message : \" +\n", 
            "-                    getLastMessage(), e, smc);\n", 
            "-            }\n", 
            "-            return false;\n", 
            "-        }\n", 
            "-    }\n", 
            "-\n", 
            "-    private synchronized void cleanupSequenceMap() {\n", 
            "-        for (String key : sequenceMap.keySet()) {\n", 
            "-            Entry sequenceEntry = sequenceMap.get(key);\n", 
            "-            if (sequenceEntry.isExpired()) {\n", 
            "-                sequenceMap.remove(key);\n", 
            "-            }\n", 
            "-        }\n", 
            "-    }\n", 
            "-\n", 
            "-    public boolean isSingle() {\n", 
            "-        return getSingle() != null && getSingle();\n", 
            "-    }\n", 
            "-\n", 
            "-    public SynapseXPath getCorrelation() {\n", 
            "-        return correlation;\n", 
            "-    }\n", 
            "-\n", 
            "-    public void setCorrelation(SynapseXPath correlation) {\n", 
            "-        this.correlation = correlation;\n", 
            "-    }\n", 
            "-\n", 
            "-    public SynapseXPath getLastMessage() {\n", 
            "-        return lastMessage;\n", 
            "-    }\n", 
            "-\n", 
            "-    public void setLastMessage(SynapseXPath lastMessage) {\n", 
            "-        this.lastMessage = lastMessage;\n", 
            "-    }\n", 
            "-\n", 
            "-    public Boolean getSingle() {\n", 
            "-        return single;\n", 
            "-    }\n", 
            "-\n", 
            "-    public void setSingle(Boolean single) {\n", 
            "-        this.single = single;\n", 
            "-    }\n", 
            "-\n", 
            "-    public String getVersion() {\n", 
            "-        return version;\n", 
            "-    }\n", 
            "-\n", 
            "-    public void setVersion(String version) {\n", 
            "-        this.version = version;\n", 
            "-    }\n", 
            "-}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/RMSequenceMediator.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/RMSequenceMediator.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,151 +0,0", 
          "lines": [
            "-/*\n", 
            "- *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "- *  or more contributor license agreements.  See the NOTICE file\n", 
            "- *  distributed with this work for additional information\n", 
            "- *  regarding copyright ownership.  The ASF licenses this file\n", 
            "- *  to you under the Apache License, Version 2.0 (the\n", 
            "- *  \"License\"); you may not use this file except in compliance\n", 
            "- *  with the License.  You may obtain a copy of the License at\n", 
            "- *\n", 
            "- *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "- *\n", 
            "- *  Unless required by applicable law or agreed to in writing,\n", 
            "- *  software distributed under the License is distributed on an\n", 
            "- *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "- *  KIND, either express or implied.  See the License for the\n", 
            "- *  specific language governing permissions and limitations\n", 
            "- *  under the License.\n", 
            "- */\n", 
            "-\n", 
            "-package org.apache.synapse.config.xml;\n", 
            "-\n", 
            "-import org.apache.axiom.om.OMAttribute;\n", 
            "-import org.apache.axiom.om.OMElement;\n", 
            "-import org.apache.synapse.Mediator;\n", 
            "-import org.apache.synapse.SynapseException;\n", 
            "-import org.apache.synapse.mediators.builtin.RMSequenceMediator;\n", 
            "-import org.jaxen.JaxenException;\n", 
            "-\n", 
            "-import javax.xml.namespace.QName;\n", 
            "-import java.util.Properties;\n", 
            "-\n", 
            "-/**\n", 
            "- * Factory for {@link RMSequenceMediator} instances.\n", 
            "- * <p>\n", 
            "- * Configuration syntax:\n", 
            "- * <pre>\n", 
            "- * &lt;RMSequence (correlation=\"xpath\" [last-message=\"xpath\"]) | single=\"true\" [version=\"1.0|1.1\"]/&gt;\n", 
            "- * </pre>\n", 
            "- */\n", 
            "-public class RMSequenceMediatorFactory extends AbstractMediatorFactory {\n", 
            "-\n", 
            "-    private static final QName SEQUENCE_Q\n", 
            "-            = new QName(XMLConfigConstants.SYNAPSE_NAMESPACE, \"RMSequence\");\n", 
            "-    private static final QName ATT_CORR = new QName(\"correlation\");\n", 
            "-    private static final QName ATT_LASTMSG = new QName(\"last-message\");\n", 
            "-    private static final QName ATT_VERSION = new QName(\"version\");\n", 
            "-    private static final QName ATT_SINGLE = new QName(\"single\");\n", 
            "-\n", 
            "-    public Mediator createSpecificMediator(OMElement elem, Properties properties) {\n", 
            "-\n", 
            "-        RMSequenceMediator sequenceMediator = new RMSequenceMediator();\n", 
            "-        OMAttribute correlation = elem.getAttribute(ATT_CORR);\n", 
            "-        OMAttribute lastMessage = elem.getAttribute(ATT_LASTMSG);\n", 
            "-        OMAttribute single = elem.getAttribute(ATT_SINGLE);\n", 
            "-        OMAttribute version = elem.getAttribute(ATT_VERSION);\n", 
            "-\n", 
            "-        if (single == null && correlation == null) {\n", 
            "-            String msg = \"The 'single' attribute value of true or a 'correlation' attribute is \" +\n", 
            "-                \"required for the configuration of a RMSequence mediator\";\n", 
            "-            log.error(msg);\n", 
            "-            throw new SynapseException(msg);\n", 
            "-        }\n", 
            "-\n", 
            "-        if (correlation != null) {\n", 
            "-            if (correlation.getAttributeValue() != null &&\n", 
            "-                correlation.getAttributeValue().trim().length() == 0) {\n", 
            "-                String msg = \"Invalid attribute value specified for correlation\";\n", 
            "-                log.error(msg);\n", 
            "-                throw new SynapseException(msg);\n", 
            "-\n", 
            "-            } else {\n", 
            "-                try {\n", 
            "-                    sequenceMediator.setCorrelation(\n", 
            "-                        SynapseXPathFactory.getSynapseXPath(elem, ATT_CORR));\n", 
            "-                } catch (JaxenException e) {\n", 
            "-                    String msg = \"Invalid XPath expression for attribute correlation : \"\n", 
            "-                        + correlation.getAttributeValue();\n", 
            "-                    log.error(msg);\n", 
            "-                    throw new SynapseException(msg);\n", 
            "-                }\n", 
            "-            }\n", 
            "-        }\n", 
            "-\n", 
            "-        if (single != null) {\n", 
            "-            sequenceMediator.setSingle(Boolean.valueOf(single.getAttributeValue()));\n", 
            "-        }\n", 
            "-\n", 
            "-        if (sequenceMediator.isSingle() && sequenceMediator.getCorrelation() != null) {\n", 
            "-            String msg = \"Invalid RMSequence mediator. A RMSequence can't have both a \"\n", 
            "-                + \"single attribute value of true and a correlation attribute specified.\";\n", 
            "-            log.error(msg);\n", 
            "-            throw new SynapseException(msg);\n", 
            "-\n", 
            "-        } else if (!sequenceMediator.isSingle() && sequenceMediator.getCorrelation() == null) {\n", 
            "-            String msg = \"Invalid RMSequence mediator. A RMSequence must have a \"\n", 
            "-                + \"single attribute value of true or a correlation attribute specified.\";\n", 
            "-            log.error(msg);\n", 
            "-            throw new SynapseException(msg);\n", 
            "-        }\n", 
            "-\n", 
            "-        if (lastMessage != null) {\n", 
            "-            if (lastMessage.getAttributeValue() != null &&\n", 
            "-                lastMessage.getAttributeValue().trim().length() == 0) {\n", 
            "-                String msg = \"Invalid attribute value specified for last-message\";\n", 
            "-                log.error(msg);\n", 
            "-                throw new SynapseException(msg);\n", 
            "-\n", 
            "-            } else {\n", 
            "-                try {\n", 
            "-                    sequenceMediator.setLastMessage(\n", 
            "-                        SynapseXPathFactory.getSynapseXPath(elem, ATT_LASTMSG));\n", 
            "-                } catch (JaxenException e) {\n", 
            "-                    String msg = \"Invalid XPath expression for attribute last-message : \"\n", 
            "-                        + lastMessage.getAttributeValue();\n", 
            "-                    log.error(msg);\n", 
            "-                    throw new SynapseException(msg);\n", 
            "-                }\n", 
            "-            }\n", 
            "-        }\n", 
            "-\n", 
            "-        if (sequenceMediator.isSingle() && sequenceMediator.getLastMessage() != null) {\n", 
            "-            String msg = \"Invalid RMSequence mediator. A RMSequence can't have both a \"\n", 
            "-                + \"single attribute value of true and a last-message attribute specified.\";\n", 
            "-            log.error(msg);\n", 
            "-            throw new SynapseException(msg);\n", 
            "-        }\n", 
            "-\n", 
            "-        if (version != null) {\n", 
            "-            if (!XMLConfigConstants.SEQUENCE_VERSION_1_0.equals(version.getAttributeValue()) &&\n", 
            "-                !XMLConfigConstants.SEQUENCE_VERSION_1_1.equals(version.getAttributeValue())) {\n", 
            "-                String msg = \"Only '\" + XMLConfigConstants.SEQUENCE_VERSION_1_0 + \"' or '\" +\n", 
            "-                    XMLConfigConstants.SEQUENCE_VERSION_1_1\n", 
            "-                    + \"' values are allowed for attribute version for a RMSequence mediator\"\n", 
            "-                    + \", Unsupported version \" + version.getAttributeValue();\n", 
            "-                log.error(msg);\n", 
            "-                throw new SynapseException(msg);\n", 
            "-            }\n", 
            "-            sequenceMediator.setVersion(version.getAttributeValue());\n", 
            "-        }\n", 
            "-\n", 
            "-        // after successfully creating the mediator\n", 
            "-        // set its common attributes such as tracing etc\n", 
            "-        processAuditStatus(sequenceMediator, elem);\n", 
            "-\n", 
            "-        return sequenceMediator;\n", 
            "-    }\n", 
            "-\n", 
            "-    public QName getTagQName() {\n", 
            "-        return SEQUENCE_Q;\n", 
            "-    }\n", 
            "-}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/RMSequenceMediatorFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/RMSequenceMediatorFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,77 +0,0", 
          "lines": [
            "-/*\n", 
            "- *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "- *  or more contributor license agreements.  See the NOTICE file\n", 
            "- *  distributed with this work for additional information\n", 
            "- *  regarding copyright ownership.  The ASF licenses this file\n", 
            "- *  to you under the Apache License, Version 2.0 (the\n", 
            "- *  \"License\"); you may not use this file except in compliance\n", 
            "- *  with the License.  You may obtain a copy of the License at\n", 
            "- *\n", 
            "- *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "- *\n", 
            "- *  Unless required by applicable law or agreed to in writing,\n", 
            "- *  software distributed under the License is distributed on an\n", 
            "- *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "- *  KIND, either express or implied.  See the License for the\n", 
            "- *  specific language governing permissions and limitations\n", 
            "- *  under the License.\n", 
            "- */\n", 
            "-\n", 
            "-package org.apache.synapse.config.xml;\n", 
            "-\n", 
            "-import org.apache.axiom.om.OMElement;\n", 
            "-import org.apache.synapse.Mediator;\n", 
            "-import org.apache.synapse.mediators.builtin.RMSequenceMediator;\n", 
            "-\n", 
            "-/**\n", 
            "- * Serializer for {@link RMSequenceMediator} instances.\n", 
            "- * \n", 
            "- * @see RMSequenceMediatorFactory\n", 
            "- */\n", 
            "-public class RMSequenceMediatorSerializer extends AbstractMediatorSerializer {\n", 
            "-\n", 
            "-    public OMElement serializeSpecificMediator(Mediator m) {\n", 
            "-\n", 
            "-        if (!(m instanceof RMSequenceMediator)) {\n", 
            "-            handleException(\"Unsupported mediator passed in for serialization : \" + m.getType());\n", 
            "-        }\n", 
            "-\n", 
            "-        RMSequenceMediator mediator = (RMSequenceMediator) m;\n", 
            "-        OMElement sequence = fac.createOMElement(\"RMSequence\", synNS);\n", 
            "-        saveTracingState(sequence, mediator);\n", 
            "-        \n", 
            "-        if(mediator.isSingle() && mediator.getCorrelation() != null) {\n", 
            "-            handleException(\"Invalid RMSequence mediator. A RMSequence can't have both a \" \n", 
            "-                    + \"single attribute value of true and a correlation attribute specified.\");\n", 
            "-        }\n", 
            "-        if(mediator.isSingle() && mediator.getLastMessage() != null) {\n", 
            "-            handleException(\"Invalid RMSequence mediator. A RMSequence can't have both a \" \n", 
            "-                    + \"single attribute value of true and a last-message attribute specified.\");\n", 
            "-        }\n", 
            "-        \n", 
            "-        if (mediator.isSingle()) {\n", 
            "-            sequence.addAttribute(fac.createOMAttribute(\"single\", nullNS, String.valueOf(mediator.isSingle())));\n", 
            "-        } else if (mediator.getCorrelation() != null) {\n", 
            "-            SynapseXPathSerializer.serializeXPath(\n", 
            "-                mediator.getCorrelation(), sequence, \"correlation\");\n", 
            "-        } else {\n", 
            "-            handleException(\"Invalid RMSequence mediator. Specify a single message sequence \" \n", 
            "-                    + \"or a correlation attribute.\");\n", 
            "-        }\n", 
            "-        \n", 
            "-        if (mediator.getLastMessage() != null) {\n", 
            "-            SynapseXPathSerializer.serializeXPath(\n", 
            "-                mediator.getLastMessage(), sequence, \"last-message\");\n", 
            "-        }\n", 
            "-        \n", 
            "-        if (mediator.getVersion() != null) {\n", 
            "-            sequence.addAttribute(fac.createOMAttribute(\"version\", nullNS, mediator.getVersion()));\n", 
            "-        }\n", 
            "-\n", 
            "-        return sequence;\n", 
            "-    }\n", 
            "-\n", 
            "-    public String getMediatorClassName() {\n", 
            "-        return RMSequenceMediator.class.getName();\n", 
            "-    }\n", 
            "-}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/RMSequenceMediatorSerializer.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/RMSequenceMediatorSerializer.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,70 +0,0", 
          "lines": [
            "-<!--\r\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\r\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\r\n", 
            "-  ~  distributed with this work for additional information\r\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\r\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\r\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\r\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\r\n", 
            "-  ~\r\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\r\n", 
            "-  ~\r\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\r\n", 
            "-  ~  software distributed under the License is distributed on an\r\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n", 
            "-  ~  KIND, either express or implied.  See the License for the\r\n", 
            "-  ~  specific language governing permissions and limitations\r\n", 
            "-  ~  under the License.\r\n", 
            "-  -->\r\n", 
            "-\r\n", 
            "-<project default=\"build-service\">\r\n", 
            "-\r\n", 
            "-    <property name=\"synapse.home\" value=\"../../../..\"/>\r\n", 
            "-    <property name=\"temp.dir\" value=\"temp\"/>\r\n", 
            "-    <property name=\"classes\" value=\"${temp.dir}/classes\"/>\r\n", 
            "-    <property name=\"src\" value=\"src\"/>\r\n", 
            "-    <property name=\"services\" value=\"../../repository/services\"/>\r\n", 
            "-\r\n", 
            "-    <path id=\"synapse.class.path\">\r\n", 
            "-        <pathelement path=\"${java.class.path}\"/>\r\n", 
            "-        <fileset dir=\"${synapse.home}\">\r\n", 
            "-            <include name=\"lib/*.jar\"/>\r\n", 
            "-            <include name=\"webapp/WEB-INF/lib/*.jar\"/>\r\n", 
            "-        </fileset>\r\n", 
            "-    </path>\r\n", 
            "-\r\n", 
            "-    <target name=\"init\" depends=\"clean\">\r\n", 
            "-        <mkdir dir=\"${temp.dir}\"/>\r\n", 
            "-        <mkdir dir=\"${classes}\"/>\r\n", 
            "-        <mkdir dir=\"${services}\"/>\r\n", 
            "-    </target>\r\n", 
            "-\r\n", 
            "-    <target name=\"clean\">\r\n", 
            "-        <delete dir=\"${temp.dir}\"/>\r\n", 
            "-    </target>\r\n", 
            "-\r\n", 
            "-    <target name=\"compile-all\" depends=\"init\">\r\n", 
            "-        <javac debug=\"on\" destdir=\"${classes}\">\r\n", 
            "-            <src path=\"${src}\"/>\r\n", 
            "-            <classpath refid=\"synapse.class.path\"/>\r\n", 
            "-        </javac>\r\n", 
            "-    </target>\r\n", 
            "-\r\n", 
            "-    <target name=\"build-service\" depends=\"compile-all\">\r\n", 
            "-        <property name=\"RSQ.dir\" value=\"${temp.dir}/ReliableStockQuoteService\"/>\r\n", 
            "-        <mkdir dir=\"${RSQ.dir}\"/>\r\n", 
            "-\r\n", 
            "-        <mkdir dir=\"${RSQ.dir}/META-INF\"/>\r\n", 
            "-        <copy file=\"conf/services.xml\" tofile=\"${RSQ.dir}/META-INF/services.xml\"/>\r\n", 
            "-        <copy toDir=\"${RSQ.dir}\">\r\n", 
            "-            <fileset dir=\"${classes}\">\r\n", 
            "-                <include name=\"**/*.class\"/>\r\n", 
            "-            </fileset>\r\n", 
            "-        </copy>\r\n", 
            "-\r\n", 
            "-        <jar destfile=\"${services}/ReliableStockQuoteService.aar\">\r\n", 
            "-            <fileset dir=\"${RSQ.dir}\"/>\r\n", 
            "-        </jar>\r\n", 
            "-    </target>\r\n", 
            "-\r\n", 
            "-</project>\r\n"
          ]
        }
      ], 
      "to": "java/modules/samples/services/ReliableStockQuoteService/build.xml", 
      "from": "java/modules/samples/services/ReliableStockQuoteService/build.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,60 +0,0", 
          "lines": [
            "-<!--\r\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\r\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\r\n", 
            "-  ~  distributed with this work for additional information\r\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\r\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\r\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\r\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\r\n", 
            "-  ~\r\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\r\n", 
            "-  ~\r\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\r\n", 
            "-  ~  software distributed under the License is distributed on an\r\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n", 
            "-  ~  KIND, either express or implied.  See the License for the\r\n", 
            "-  ~  specific language governing permissions and limitations\r\n", 
            "-  ~  under the License.\r\n", 
            "-  -->\r\n", 
            "-\r\n", 
            "-<serviceGroup>\r\n", 
            "-    <service name=\"ReliableStockQuoteService\">\r\n", 
            "-        \r\n", 
            "-        <module ref=\"sandesha2\"/>\r\n", 
            "-        \r\n", 
            "-        <schema> \r\n", 
            "-            <mapping package=\"samples.services\" namespace=\"http://services.samples\"/> \r\n", 
            "-        </schema>\r\n", 
            "-         \r\n", 
            "-        <messageReceivers>\r\n", 
            "-            <messageReceiver mep=\"http://www.w3.org/ns/wsdl/in-only\"\r\n", 
            "-                             class=\"org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver\" />\r\n", 
            "-            <messageReceiver mep=\"http://www.w3.org/ns/wsdl/in-out\"\r\n", 
            "-                             class=\"org.apache.axis2.rpc.receivers.RPCMessageReceiver\" />\r\n", 
            "-        </messageReceivers>\r\n", 
            "-        <parameter locked=\"false\" name=\"ServiceClass\">samples.services.ReliableStockQuoteService</parameter>\r\n", 
            "-        <operation name=\"placeOrder\">\r\n", 
            "-            <messageReceiver class=\"org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver\"/>\r\n", 
            "-            <actionMapping>urn:placeOrder</actionMapping>\r\n", 
            "-        </operation>\r\n", 
            "-        <operation name=\"getQuote\">\r\n", 
            "-            <messageReceiver class=\"org.apache.axis2.rpc.receivers.RPCMessageReceiver\"/>\r\n", 
            "-            <actionMapping>urn:getQuote</actionMapping>\r\n", 
            "-        </operation>\r\n", 
            "-        <supported-policy-namespaces namespaces=\"http://ws.apache.org/sandesha2/policy\" />\r\n", 
            "-        \r\n", 
            "-        <wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" \r\n", 
            "-            xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"\r\n", 
            "-            xmlns:wsrm=\"http://ws.apache.org/sandesha2/policy\" wsu:Id=\"RMPolicy\">\r\n", 
            "-                \r\n", 
            "-            <!-- Following policy value has been overrided from the default values.-->> \r\n", 
            "-            <wsrm:AcknowledgementInterval>3500</wsrm:AcknowledgementInterval>\r\n", 
            "-            <wsrm:RetransmissionInterval>6000</wsrm:RetransmissionInterval>\r\n", 
            "-            <wsrm:InactivityTimeout>1</wsrm:InactivityTimeout>\r\n", 
            "-            <wsrm:InactivityTimeoutMeasure>minutes</wsrm:InactivityTimeoutMeasure>\r\n", 
            "-            <wsrm:InvokeInOrder>true</wsrm:InvokeInOrder>\r\n", 
            "-           \r\n", 
            "-        </wsp:Policy>\r\n", 
            "-        \r\n", 
            "-    </service>\r\n", 
            "-</serviceGroup>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/samples/services/ReliableStockQuoteService/conf/services.xml", 
      "from": "java/modules/samples/services/ReliableStockQuoteService/conf/services.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,49 +0,0", 
          "lines": [
            "-/*\r\n", 
            "- *  Licensed to the Apache Software Foundation (ASF) under one\r\n", 
            "- *  or more contributor license agreements.  See the NOTICE file\r\n", 
            "- *  distributed with this work for additional information\r\n", 
            "- *  regarding copyright ownership.  The ASF licenses this file\r\n", 
            "- *  to you under the Apache License, Version 2.0 (the\r\n", 
            "- *  \"License\"); you may not use this file except in compliance\r\n", 
            "- *  with the License.  You may obtain a copy of the License at\r\n", 
            "- *\r\n", 
            "- *   http://www.apache.org/licenses/LICENSE-2.0\r\n", 
            "- *\r\n", 
            "- *  Unless required by applicable law or agreed to in writing,\r\n", 
            "- *  software distributed under the License is distributed on an\r\n", 
            "- *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n", 
            "- *  KIND, either express or implied.  See the License for the\r\n", 
            "- *  specific language governing permissions and limitations\r\n", 
            "- *  under the License.\r\n", 
            "- */\r\n", 
            "-package samples.services;\r\n", 
            "-\r\n", 
            "-public class PlaceOrder {\r\n", 
            "-    String symbol;\r\n", 
            "-    int quantity;\r\n", 
            "-    double price;\r\n", 
            "-\r\n", 
            "-    public String getSymbol() {\r\n", 
            "-        return symbol;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setSymbol(String symbol) {\r\n", 
            "-        this.symbol = symbol;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public int getQuantity() {\r\n", 
            "-        return quantity;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setQuantity(int quantity) {\r\n", 
            "-        this.quantity = quantity;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getPrice() {\r\n", 
            "-        return price;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setPrice(double price) {\r\n", 
            "-        this.price = price;\r\n", 
            "-    }\r\n", 
            "-}\r\n"
          ]
        }
      ], 
      "to": "java/modules/samples/services/ReliableStockQuoteService/src/samples/services/PlaceOrder.java", 
      "from": "java/modules/samples/services/ReliableStockQuoteService/src/samples/services/PlaceOrder.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,37 +0,0", 
          "lines": [
            "-/*\r\n", 
            "- *  Licensed to the Apache Software Foundation (ASF) under one\r\n", 
            "- *  or more contributor license agreements.  See the NOTICE file\r\n", 
            "- *  distributed with this work for additional information\r\n", 
            "- *  regarding copyright ownership.  The ASF licenses this file\r\n", 
            "- *  to you under the Apache License, Version 2.0 (the\r\n", 
            "- *  \"License\"); you may not use this file except in compliance\r\n", 
            "- *  with the License.  You may obtain a copy of the License at\r\n", 
            "- *\r\n", 
            "- *   http://www.apache.org/licenses/LICENSE-2.0\r\n", 
            "- *\r\n", 
            "- *  Unless required by applicable law or agreed to in writing,\r\n", 
            "- *  software distributed under the License is distributed on an\r\n", 
            "- *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n", 
            "- *  KIND, either express or implied.  See the License for the\r\n", 
            "- *  specific language governing permissions and limitations\r\n", 
            "- *  under the License.\r\n", 
            "- */\r\n", 
            "-package samples.services;\r\n", 
            "-import java.util.Date;\r\n", 
            "-\r\n", 
            "-public class ReliableStockQuoteService {\r\n", 
            "-\r\n", 
            "-    // in-out\r\n", 
            "-    public GetQuoteResponse getQuote(GetQuote request) {\r\n", 
            "-        System.out.println(new Date() + \" \" + this.getClass().getName() +\r\n", 
            "-            \" :: Generating quote for : \" + request.getSymbol());\r\n", 
            "-        return new GetQuoteResponse(request.getSymbol());\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    // in only\r\n", 
            "-    public void placeOrder(PlaceOrder order) {\r\n", 
            "-        System.out.println(new Date() + \" \" + this.getClass().getName() +\r\n", 
            "-            \"  :: Accepted order for : \" + order.getQuantity() +\r\n", 
            "-            \" stocks of \" + order.getSymbol() + \" at $ \" + order.getPrice());\r\n", 
            "-    }\r\n", 
            "-}\r\n"
          ]
        }
      ], 
      "to": "java/modules/samples/services/ReliableStockQuoteService/src/samples/services/ReliableStockQuoteService.java", 
      "from": "java/modules/samples/services/ReliableStockQuoteService/src/samples/services/ReliableStockQuoteService.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,177 +0,0", 
          "lines": [
            "-/*\r\n", 
            "- *  Licensed to the Apache Software Foundation (ASF) under one\r\n", 
            "- *  or more contributor license agreements.  See the NOTICE file\r\n", 
            "- *  distributed with this work for additional information\r\n", 
            "- *  regarding copyright ownership.  The ASF licenses this file\r\n", 
            "- *  to you under the Apache License, Version 2.0 (the\r\n", 
            "- *  \"License\"); you may not use this file except in compliance\r\n", 
            "- *  with the License.  You may obtain a copy of the License at\r\n", 
            "- *\r\n", 
            "- *   http://www.apache.org/licenses/LICENSE-2.0\r\n", 
            "- *\r\n", 
            "- *  Unless required by applicable law or agreed to in writing,\r\n", 
            "- *  software distributed under the License is distributed on an\r\n", 
            "- *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n", 
            "- *  KIND, either express or implied.  See the License for the\r\n", 
            "- *  specific language governing permissions and limitations\r\n", 
            "- *  under the License.\r\n", 
            "- */\r\n", 
            "-package samples.services;\r\n", 
            "-\r\n", 
            "-import java.util.Date;\r\n", 
            "-\r\n", 
            "-public class GetQuoteResponse {\r\n", 
            "-    String symbol;\r\n", 
            "-    double last;\r\n", 
            "-    String lastTradeTimestamp;\r\n", 
            "-    double change;\r\n", 
            "-    double open;\r\n", 
            "-    double high;\r\n", 
            "-    double low;\r\n", 
            "-    int volume;\r\n", 
            "-    double marketCap;\r\n", 
            "-    double prevClose;\r\n", 
            "-    double percentageChange;\r\n", 
            "-    double earnings;\r\n", 
            "-    double peRatio;\r\n", 
            "-    String name;\r\n", 
            "-\r\n", 
            "-    public GetQuoteResponse() {\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public GetQuoteResponse(String symbol) {\r\n", 
            "-        this.symbol = symbol;\r\n", 
            "-        this.last = getRandom(100, 0.9, true);\r\n", 
            "-        this.lastTradeTimestamp = new Date().toString();\r\n", 
            "-        this.change = getRandom(3, 0.5, false);\r\n", 
            "-        this.open = getRandom(last, 0.05, false);\r\n", 
            "-        this.high = getRandom(last, 0.05, false);\r\n", 
            "-        this.low = getRandom(last, 0.05, false);\r\n", 
            "-        this.volume = (int) getRandom(10000, 1.0, true);\r\n", 
            "-        this.marketCap = getRandom(10E6, 5.0, false);\r\n", 
            "-        this.prevClose = getRandom(last, 0.15, false);\r\n", 
            "-        this.percentageChange = change / prevClose * 100;\r\n", 
            "-        this.earnings = getRandom(10, 0.4, false);\r\n", 
            "-        this.peRatio = getRandom(20, 0.30, false);\r\n", 
            "-        this.name = symbol + \" Company\";\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public String getSymbol() {\r\n", 
            "-        return symbol;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setSymbol(String symbol) {\r\n", 
            "-        this.symbol = symbol;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getLast() {\r\n", 
            "-        return last;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setLast(double last) {\r\n", 
            "-        this.last = last;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public String getLastTradeTimestamp() {\r\n", 
            "-        return lastTradeTimestamp;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setLastTradeTimestamp(String lastTradeTimestamp) {\r\n", 
            "-        this.lastTradeTimestamp = lastTradeTimestamp;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getChange() {\r\n", 
            "-        return change;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setChange(double change) {\r\n", 
            "-        this.change = change;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getOpen() {\r\n", 
            "-        return open;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setOpen(double open) {\r\n", 
            "-        this.open = open;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getHigh() {\r\n", 
            "-        return high;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setHigh(double high) {\r\n", 
            "-        this.high = high;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getLow() {\r\n", 
            "-        return low;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setLow(double low) {\r\n", 
            "-        this.low = low;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public int getVolume() {\r\n", 
            "-        return volume;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setVolume(int volume) {\r\n", 
            "-        this.volume = volume;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getMarketCap() {\r\n", 
            "-        return marketCap;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setMarketCap(double marketCap) {\r\n", 
            "-        this.marketCap = marketCap;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getPrevClose() {\r\n", 
            "-        return prevClose;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setPrevClose(double prevClose) {\r\n", 
            "-        this.prevClose = prevClose;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getPercentageChange() {\r\n", 
            "-        return percentageChange;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setPercentageChange(double percentageChange) {\r\n", 
            "-        this.percentageChange = percentageChange;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getEarnings() {\r\n", 
            "-        return earnings;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setEarnings(double earnings) {\r\n", 
            "-        this.earnings = earnings;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public double getPeRatio() {\r\n", 
            "-        return peRatio;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setPeRatio(double peRatio) {\r\n", 
            "-        this.peRatio = peRatio;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public String getName() {\r\n", 
            "-        return name;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setName(String name) {\r\n", 
            "-        this.name = name;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    private static double getRandom(double base, double varience, boolean onlypositive) {\r\n", 
            "-        double rand = Math.random();\r\n", 
            "-        return (base + ((rand > 0.5 ? 1 : -1) * varience * base * rand))\r\n", 
            "-            * (onlypositive ? 1 : (rand > 0.5 ? 1 : -1));\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-}\r\n"
          ]
        }
      ], 
      "to": "java/modules/samples/services/ReliableStockQuoteService/src/samples/services/GetQuoteResponse.java", 
      "from": "java/modules/samples/services/ReliableStockQuoteService/src/samples/services/GetQuoteResponse.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,38 +0,0", 
          "lines": [
            "-/*\r\n", 
            "- *  Licensed to the Apache Software Foundation (ASF) under one\r\n", 
            "- *  or more contributor license agreements.  See the NOTICE file\r\n", 
            "- *  distributed with this work for additional information\r\n", 
            "- *  regarding copyright ownership.  The ASF licenses this file\r\n", 
            "- *  to you under the Apache License, Version 2.0 (the\r\n", 
            "- *  \"License\"); you may not use this file except in compliance\r\n", 
            "- *  with the License.  You may obtain a copy of the License at\r\n", 
            "- *\r\n", 
            "- *   http://www.apache.org/licenses/LICENSE-2.0\r\n", 
            "- *\r\n", 
            "- *  Unless required by applicable law or agreed to in writing,\r\n", 
            "- *  software distributed under the License is distributed on an\r\n", 
            "- *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n", 
            "- *  KIND, either express or implied.  See the License for the\r\n", 
            "- *  specific language governing permissions and limitations\r\n", 
            "- *  under the License.\r\n", 
            "- */\r\n", 
            "-package samples.services;\r\n", 
            "-\r\n", 
            "-public class GetQuote {\r\n", 
            "-    String symbol;\r\n", 
            "-\r\n", 
            "-    public GetQuote() {\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public GetQuote(String symbol) {\r\n", 
            "-        this.symbol = symbol;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public String getSymbol() {\r\n", 
            "-        return symbol;\r\n", 
            "-    }\r\n", 
            "-\r\n", 
            "-    public void setSymbol(String symbol) {\r\n", 
            "-        this.symbol = symbol;\r\n", 
            "-    }\r\n", 
            "-}\r\n"
          ]
        }
      ], 
      "to": "java/modules/samples/services/ReliableStockQuoteService/src/samples/services/GetQuote.java", 
      "from": "java/modules/samples/services/ReliableStockQuoteService/src/samples/services/GetQuote.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,228 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n", 
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<document>\n", 
            "-    <properties>\n", 
            "-        <title>Apache Synapse - Sample 101</title>\n", 
            "-    </properties>\n", 
            "-    <body>\n", 
            "-        <section name=\"Sample 101: Using WS-ReliableMessaging for Outgoing Messages\">\n", 
            "-            <div class=\"xmlConf\">&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"&gt;\n", 
            "-\n", 
            "-    &lt;sequence name=\"main\"&gt;\n", 
            "-        &lt;in&gt;\n", 
            "-            &lt;RMSequence single=\"true\" version=\"1.0\"/&gt;\n", 
            "-            &lt;send&gt;\n", 
            "-                &lt;endpoint name=\"reliable\"&gt;\n", 
            "-                    &lt;address uri=\"http://localhost:9000/services/ReliableStockQuoteService\"&gt;\n", 
            "-                        &lt;enableRM/&gt;\n", 
            "-                        &lt;enableAddressing/&gt;\n", 
            "-                    &lt;/address&gt;\n", 
            "-                &lt;/endpoint&gt;\n", 
            "-            &lt;/send&gt;\n", 
            "-        &lt;/in&gt;\n", 
            "-        &lt;out&gt;\n", 
            "-            &lt;send/&gt;\n", 
            "-        &lt;/out&gt;\n", 
            "-    &lt;/sequence&gt;\n", 
            "-\n", 
            "-&lt;/definitions&gt;</div>\n", 
            "-            <subsection name=\"Objective\">\n", 
            "-                <p>\n", 
            "-                    Demonstrate the ability of Synapse to exchange messages with an endpoint\n", 
            "-                    reliably, using WS-ReliableMessaging\n", 
            "-                </p>\n", 
            "-            </subsection>\n", 
            "-            <subsection name=\"Pre-requisites\">\n", 
            "-                <p>\n", 
            "-                    <ul>\n", 
            "-                        <li>\n", 
            "-                            Deploy the ReliableStockQuoteService in the sample Axis2 server and start Axis2\n", 
            "-                        </li>\n", 
            "-                        <li>\n", 
            "-                            Start Synapse using the configuration numbered 101 (repository/conf/sample/synapse_sample_101.xml)\n", 
            "-                            <div class=\"command\">\n", 
            "-                                Unix/Linux: sh synapse.sh -sample 101<br/>\n", 
            "-                                Windows: synapse.bat -sample 101\n", 
            "-                            </div>\n", 
            "-                        </li>\n", 
            "-                    </ul>\n", 
            "-                </p>\n", 
            "-            </subsection>\n", 
            "-            <subsection name=\"Executing the Client\">\n", 
            "-                <p>\n", 
            "-                    In the above configuration, WS-RM is engaged on the endpoint using the\n", 
            "-                    &lt;enableRM/&gt; tag. It is possible to engage WS-RM to both Address and WSDL\n", 
            "-                    endpoints using this tag. In addition to the RM enabled endpoint, RMSequence\n", 
            "-                    mediator is specified before the send mediator. This mediator is used to specify\n", 
            "-                    the set of messages to be sent using a single RM sequence. In this sample it is\n", 
            "-                    specified as single message per sequence. It also specifies the version of the\n", 
            "-                    WS-RM to be used. Refer to the Synapse configuration language documentation for\n", 
            "-                    more information about the RMSequence mediator. RM related SOAP headers are\n", 
            "-                    removed form the message in the out mediator as WS-RM message exchange takes\n", 
            "-                    place only between the Synapse and the server. Now run the sample client using\n", 
            "-                    the following command.\n", 
            "-                </p>\n", 
            "-                <div class=\"command\">ant stockquote -Dsymbol=IBM -Dmode=quote -Daddurl=http://localhost:8280</div>\n", 
            "-                <p>\n", 
            "-                    You can observe the client output displaying the quote price for IBM as follows:\n", 
            "-                </p>\n", 
            "-                <div class=\"consoleOutput\">Standard :: Stock price = $95.26454380258552</div>\n", 
            "-                <p>\n", 
            "-                    There is no difference to be observed between the normal message exchange and\n", 
            "-                    WS-RM enabled message exchange as far as client and server outputs are considered.\n", 
            "-                    But if you look at the wire level messages, you would observe additional WS-RM\n", 
            "-                    messages and WS-RM headers. Synapse, the initiator of the RM sequence, first try\n", 
            "-                    to create a sequence by sending a message with CreateSequence element.\n", 
            "-                </p>\n", 
            "-                <div class=\"consoleOutput\">...\n", 
            "-&lt;soapenv:Body&gt;\n", 
            "-   &lt;wsrm:CreateSequence xmlns:wsrm=&quot;http://schemas.xmlsoap.org/ws/2005/02/rm&quot;&gt;\n", 
            "-      &lt;wsrm:AcksTo&gt;\n", 
            "-         &lt;wsa:Address&gt;http://www.w3.org/2005/08/addressing/anonymous&lt;/wsa:Address&gt;\n", 
            "-      &lt;/wsrm:AcksTo&gt;\n", 
            "-      &lt;wsrm:Offer&gt;\n", 
            "-         &lt;wsrm:Identifier&gt;urn:uuid:546F6F33FB7D8BBE351179807372769&lt;/wsrm:Identifier&gt;\n", 
            "-      &lt;/wsrm:Offer&gt;\n", 
            "-   &lt;/wsrm:CreateSequence&gt;\n", 
            "-&lt;/soapenv:Body&gt;\n", 
            "-...</div>\n", 
            "-                <p>\n", 
            "-                    Sample Axis2 server responds to CreateSequence request with the following\n", 
            "-                    message:\n", 
            "-                </p>\n", 
            "-                <div class=\"consoleOutput\">...\n", 
            "-&lt;soapenv:Body&gt;\n", 
            "-   &lt;wsrm:CreateSequenceResponse xmlns:wsrm=&quot;http://schemas.xmlsoap.org/ws/2005/02/rm&quot;&gt;\n", 
            "-      &lt;wsrm:Identifier&gt;urn:uuid:879853A6871A66641C1179807373270&lt;/wsrm:Identifier&gt;\n", 
            "-      &lt;wsrm:Accept&gt;\n", 
            "-         &lt;wsrm:AcksTo&gt;\n", 
            "-            &lt;wsa:Address&gt;http://localhost:9000/services/ReliableStockQuoteService&lt;/wsa:Address&gt;\n", 
            "-         &lt;/wsrm:AcksTo&gt;\n", 
            "-      &lt;/wsrm:Accept&gt;\n", 
            "-   &lt;/wsrm:CreateSequenceResponse&gt;\n", 
            "-&lt;/soapenv:Body&gt;\n", 
            "-...</div>\n", 
            "-                <p>\n", 
            "-                    Once the sequence is established, Synapse sends the request to the server with\n", 
            "-                    the pre-negotiated sequence ID.\n", 
            "-                </p>\n", 
            "-                <div class=\"consoleOutput\">&lt;soapenv:Envelope xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;\n", 
            "-                  xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n", 
            "-    &lt;soapenv:Header&gt;\n", 
            "-        &lt;wsa:To&gt;http://localhost:9000/services/ReliableStockQuoteService&lt;/wsa:To&gt;\n", 
            "-        &lt;wsa:MessageID&gt;urn:uuid:DB9A5257B637DDA38B1179807372560712002-1515891720&lt;/wsa:MessageID&gt;\n", 
            "-        &lt;wsa:Action&gt;urn:getQuote&lt;/wsa:Action&gt;\n", 
            "-        &lt;wsrm:Sequence xmlns:wsrm=&quot;http://schemas.xmlsoap.org/ws/2005/02/rm&quot;\n", 
            "-                       soapenv:mustUnderstand=&quot;1&quot;&gt;\n", 
            "-            &lt;wsrm:Identifier&gt;urn:uuid:879853A6871A66641C1179807373270&lt;/wsrm:Identifier&gt;\n", 
            "-            &lt;wsrm:MessageNumber&gt;1&lt;/wsrm:MessageNumber&gt;\n", 
            "-            &lt;wsrm:LastMessage/&gt;\n", 
            "-        &lt;/wsrm:Sequence&gt;\n", 
            "-    &lt;/soapenv:Header&gt;\n", 
            "-    &lt;soapenv:Body&gt;\n", 
            "-        &lt;m0:getQuote xmlns:m0=&quot;http://services.samples&quot;&gt;\n", 
            "-            &lt;m0:request&gt;\n", 
            "-                &lt;m0:symbol&gt;IBM&lt;/m0:symbol&gt;\n", 
            "-            &lt;/m0:request&gt;\n", 
            "-        &lt;/m0:getQuote&gt;\n", 
            "-    &lt;/soapenv:Body&gt;\n", 
            "-&lt;/soapenv:Envelope&gt;</div>\n", 
            "-                <p>\n", 
            "-                    Synapse keeps on sending the above message till the server responds with a valid\n", 
            "-                    response message with 200 OK HTTP header. If the server is not ready with a\n", 
            "-                    response, it will respond with 202 Accepted HTTP header for all requests. Once\n", 
            "-                    the server is ready with a response it will send the response message with\n", 
            "-                    sequence ID as follows.\n", 
            "-                </p>\n", 
            "-                <div class=\"consoleOutput\">&lt;soapenv:Envelope xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;\n", 
            "-                  xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n", 
            "-    &lt;soapenv:Header&gt;\n", 
            "-        &lt;wsa:MessageID&gt;urn:uuid:879853A6871A66641C1179807373804&lt;/wsa:MessageID&gt;\n", 
            "-        &lt;wsa:Action&gt;http://services.samples/ReliableStockQuoteServicePortType/getQuoteResponse\n", 
            "-        &lt;/wsa:Action&gt;\n", 
            "-        &lt;wsa:RelatesTo&gt;urn:uuid:DB9A5257B637DDA38B1179807372560712002-1515891720&lt;/wsa:RelatesTo&gt;\n", 
            "-        &lt;wsrm:Sequence xmlns:wsrm=&quot;http://schemas.xmlsoap.org/ws/2005/02/rm&quot;\n", 
            "-                       soapenv:mustUnderstand=&quot;1&quot;&gt;\n", 
            "-            &lt;wsrm:Identifier&gt;urn:uuid:546F6F33FB7D8BBE351179807372769&lt;/wsrm:Identifier&gt;\n", 
            "-            &lt;wsrm:MessageNumber&gt;1&lt;/wsrm:MessageNumber&gt;\n", 
            "-            &lt;wsrm:LastMessage/&gt;\n", 
            "-        &lt;/wsrm:Sequence&gt;\n", 
            "-        &lt;wsrm:SequenceAcknowledgement xmlns:wsrm=&quot;http://schemas.xmlsoap.org/ws/2005/02/rm&quot;\n", 
            "-                                      soapenv:mustUnderstand=&quot;1&quot;&gt;\n", 
            "-            &lt;wsrm:Identifier&gt;urn:uuid:879853A6871A66641C1179807373270&lt;/wsrm:Identifier&gt;\n", 
            "-            &lt;wsrm:AcknowledgementRange Lower=&quot;1&quot; Upper=&quot;1&quot;/&gt;\n", 
            "-        &lt;/wsrm:SequenceAcknowledgement&gt;\n", 
            "-    &lt;/soapenv:Header&gt;\n", 
            "-    &lt;soapenv:Body&gt;\n", 
            "-        &lt;ns:getQuoteResponse xmlns:ns=&quot;http://services.samples&quot;&gt;\n", 
            "-...</div>\n", 
            "-                <p>\n", 
            "-                    Now both Synapse and the server are done with the actual message exchange. Then\n", 
            "-                    Synapse sends a request to terminate the sequence as follows:\n", 
            "-                </p>\n", 
            "-                <div class=\"consoleOutput\">&lt;soapenv:Envelope xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;\n", 
            "-                  xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n", 
            "-    &lt;soapenv:Header&gt;\n", 
            "-        &lt;wsa:To&gt;http://localhost:9000/services/ReliableStockQuoteService&lt;/wsa:To&gt;\n", 
            "-        &lt;wsa:MessageID&gt;urn:uuid:546F6F33FB7D8BBE351179807379591&lt;/wsa:MessageID&gt;\n", 
            "-        &lt;wsa:Action&gt;http://schemas.xmlsoap.org/ws/2005/02/rm/TerminateSequence&lt;/wsa:Action&gt;\n", 
            "-        &lt;wsrm:SequenceAcknowledgement xmlns:wsrm=&quot;http://schemas.xmlsoap.org/ws/2005/02/rm&quot;\n", 
            "-                                      soapenv:mustUnderstand=&quot;1&quot;&gt;\n", 
            "-            &lt;wsrm:Identifier&gt;urn:uuid:546F6F33FB7D8BBE351179807372769&lt;/wsrm:Identifier&gt;\n", 
            "-            &lt;wsrm:AcknowledgementRange Lower=&quot;1&quot; Upper=&quot;1&quot;/&gt;\n", 
            "-        &lt;/wsrm:SequenceAcknowledgement&gt;\n", 
            "-    &lt;/soapenv:Header&gt;\n", 
            "-    &lt;soapenv:Body&gt;\n", 
            "-        &lt;wsrm:TerminateSequence xmlns:wsrm=&quot;http://schemas.xmlsoap.org/ws/2005/02/rm&quot;&gt;\n", 
            "-            &lt;wsrm:Identifier&gt;urn:uuid:879853A6871A66641C1179807373270&lt;/wsrm:Identifier&gt;\n", 
            "-        &lt;/wsrm:TerminateSequence&gt;\n", 
            "-    &lt;/soapenv:Body&gt;\n", 
            "-&lt;/soapenv:Envelope&gt;</div>\n", 
            "-                <p>\n", 
            "-                    Server responds to the sequence termination message, accepting to terminate the\n", 
            "-                    sequence as follows.\n", 
            "-                </p>\n", 
            "-                <div class=\"consoleOutput\">&lt;soapenv:Envelope xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;\n", 
            "-                  xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n", 
            "-    &lt;soapenv:Header&gt;\n", 
            "-        &lt;wsa:ReplyTo&gt;\n", 
            "-            &lt;wsa:Address&gt;http://localhost:9000/services/ReliableStockQuoteService&lt;/wsa:Address&gt;\n", 
            "-        &lt;/wsa:ReplyTo&gt;\n", 
            "-        &lt;wsa:MessageID&gt;urn:uuid:879853A6871A66641C1179807380190&lt;/wsa:MessageID&gt;\n", 
            "-        &lt;wsa:Action&gt;http://schemas.xmlsoap.org/ws/2005/02/rm/TerminateSequence&lt;/wsa:Action&gt;\n", 
            "-    &lt;/soapenv:Header&gt;\n", 
            "-    &lt;soapenv:Body&gt;\n", 
            "-        &lt;wsrm:TerminateSequence xmlns:wsrm=&quot;http://schemas.xmlsoap.org/ws/2005/02/rm&quot;&gt;\n", 
            "-            &lt;wsrm:Identifier&gt;urn:uuid:546F6F33FB7D8BBE351179807372769&lt;/wsrm:Identifier&gt;\n", 
            "-        &lt;/wsrm:TerminateSequence&gt;\n", 
            "-    &lt;/soapenv:Body&gt;\n", 
            "-&lt;/soapenv:Envelope&gt;</div>\n", 
            "-                <p>\n", 
            "-                    Note that although each of above messages are separate SOAP messages, in most\n", 
            "-                    cases they will be exchanged in a single socket connection as HTTP Keep-Alive\n", 
            "-                    header is being used.\n", 
            "-                </p>\n", 
            "-\n", 
            "-            </subsection>\n", 
            "-        </section>\n", 
            "-        <p><a href=\"../samples.html\">Back to Catalog</a></p>        \n", 
            "-    </body>\n", 
            "-</document>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/sample101.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/sample101.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,74 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n", 
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<document>\n", 
            "-    <properties>\n", 
            "-        <title>Apache Synapse - Sample 102</title>\n", 
            "-    </properties>\n", 
            "-    <body>\n", 
            "-        <section name=\"Sample 102:Reliable message exchange between Synapse and the back-end server using WS-ReliableMessaging 1.1 \">\n", 
            "-            <div class=\"xmlConf\">&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"&gt;\n", 
            "-\n", 
            "-    &lt;sequence name=\"main\"&gt;\n", 
            "-        &lt;in&gt;\n", 
            "-            &lt;RMSequence single=\"true\" version=\"1.1\"/&gt;\n", 
            "-            &lt;send&gt;\n", 
            "-                &lt;endpoint name=\"reliable\"&gt;\n", 
            "-                    &lt;address uri=\"http://localhost:9000/services/ReliableStockQuoteService\"&gt;\n", 
            "-                        &lt;enableRM/&gt;\n", 
            "-                        &lt;enableAddressing/&gt;\n", 
            "-                    &lt;/address&gt;\n", 
            "-                &lt;/endpoint&gt;\n", 
            "-            &lt;/send&gt;\n", 
            "-        &lt;/in&gt;\n", 
            "-        &lt;out&gt;\n", 
            "-            &lt;send/&gt;\n", 
            "-        &lt;/out&gt;\n", 
            "-    &lt;/sequence&gt;\n", 
            "-\n", 
            "-&lt;/definitions&gt;</div>\n", 
            "-            <subsection name=\"Objective\">\n", 
            "-                <p>\n", 
            "-               \t \tDemonstrate the message exchange between Synapse and the server using WS-ReliableMessaging (WS-RM) - 1.1\n", 
            "-\t\t\t    </p>\n", 
            "-            </subsection>\n", 
            "-            <subsection name=\"Pre-requisites\">\n", 
            "-                <p>\n", 
            "-                    <ul>\n", 
            "-                        <li>\n", 
            "-                            Deploy the SimpleStockQuoteService in the sample Axis2 server and start Axis2\n", 
            "-                        </li>\n", 
            "-                        <li>\n", 
            "-                            Start Synapse using the configuration numbered 102 (repository/conf/sample/synapse_sample_102.xml)\n", 
            "-                            <div class=\"command\">\n", 
            "-                                Unix/Linux: sh synapse.sh -sample 102<br/>\n", 
            "-                                Windows: synapse.bat -sample 102\n", 
            "-                            </div>\n", 
            "-                        </li>\n", 
            "-                    </ul>\n", 
            "-                </p>\n", 
            "-            </subsection>\n", 
            "-            <subsection name=\"Executing the Client\">\n", 
            "-             \t<p>This sample is as same as the previous one except it uses WS-RM 1.1 version where as the previous sample is using the RM version 1.0</p>\n", 
            "-             </subsection>\n", 
            "-        </section>\n", 
            "-        <p><a href=\"../samples.html\">Back to Catalog</a></p>        \n", 
            "-    </body>\n", 
            "-</document>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/sample102.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/sample102.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,89 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n", 
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<document>\n", 
            "-    <properties>\n", 
            "-        <title>Apache Synapse - Sample 201</title>\n", 
            "-    </properties>\n", 
            "-    <body>\n", 
            "-        <section name=\"Sample 201: Reliable Communication Between the Client and Proxy Services Using WS-ReliableMessaging\">\n", 
            "-            <div class=\"xmlConf\">&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"&gt;\n", 
            "-\n", 
            "-    &lt;proxy name=\"StockQuoteProxy\"&gt;\n", 
            "-        &lt;target&gt;\n", 
            "-            &lt;inSequence&gt;\n", 
            "-                &lt;send&gt;\n", 
            "-                    &lt;endpoint&gt;\n", 
            "-                        &lt;address uri=\"http://localhost:9000/services/SimpleStockQuoteService\"/&gt;\n", 
            "-                    &lt;/endpoint&gt;\n", 
            "-                &lt;/send&gt;\n", 
            "-            &lt;/inSequence&gt;\n", 
            "-            &lt;outSequence&gt;\n", 
            "-                &lt;send/&gt;\n", 
            "-            &lt;/outSequence&gt;\n", 
            "-        &lt;/target&gt;\n", 
            "-        &lt;publishWSDL uri=\"file:repository/conf/sample/resources/proxy/sample_proxy_1.wsdl\"/&gt;\n", 
            "-        &lt;enableRM/&gt;\n", 
            "-    &lt;/proxy&gt;\n", 
            "-\n", 
            "-&lt;/definitions&gt;</div>\n", 
            "-            <subsection name=\"Objective\">\n", 
            "-                <p>\n", 
            "-                    Show case how to engage WS-ReliableMessaging on proxy services so that the\n", 
            "-                    communication between client and the proxy service is reliable\n", 
            "-                </p>\n", 
            "-            </subsection>\n", 
            "-            <subsection name=\"Pre-requisites\">\n", 
            "-                <p>\n", 
            "-                    <ul>\n", 
            "-                        <li>\n", 
            "-                            Deploy the SimpleStockQuoteService in the sample Axis2 server and start Axis2\n", 
            "-                        </li>\n", 
            "-                        <li>\n", 
            "-                            Start Synapse using the configuration numbered 201 (repository/conf/sample/synapse_sample_201.xml)\n", 
            "-                            <div class=\"command\">\n", 
            "-                                Unix/Linux: sh synapse.sh -sample 201<br/>\n", 
            "-                                Windows: synapse.bat -sample 201\n", 
            "-                            </div>\n", 
            "-                        </li>\n", 
            "-                    </ul>\n", 
            "-                </p>\n", 
            "-            </subsection>\n", 
            "-            <subsection name=\"Executing the Client\">\n", 
            "-                <p>\n", 
            "-                    In the above configuration, a proxy service is created with WS-RM enabled using\n", 
            "-                    the &lt;enableRM/&gt; tag. Therefore, this proxy service is capable of\n", 
            "-                    communicating with a WS-RM client. It also removes the WS-RM headers in the\n", 
            "-                    inSequence before the message is sent to the backend server. This is required as\n", 
            "-                    the reliable messaging is applicable only between the client and Synapse. Now\n", 
            "-                    start the client with WS-RM as follows:\n", 
            "-                </p>\n", 
            "-                <div class=\"command\">ant stockquote -Dsymbol=IBM -Dmode=quote -Daddurl=http://localhost:8280/services/StockQuoteProxy -Dwsrm=true</div>\n", 
            "-                <p>\n", 
            "-                    In this case, client sends a WS-RM enabled request to Synapse where Synapse sends\n", 
            "-                    normal requests to the server. This can be observed by examining the wire level\n", 
            "-                    messages between the client and Synapse. These messages would be similar to the\n", 
            "-                    wire level messages shown in <a href=\"sample101.html\">sample 101</a>.\n", 
            "-                </p>                \n", 
            "-            </subsection>\n", 
            "-        </section>\n", 
            "-        <p><a href=\"../samples.html\">Back to Catalog</a></p>        \n", 
            "-    </body>\n", 
            "-</document>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/sample201.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/sample201.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-1,78 +0,0", 
          "lines": [
            "-<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n", 
            "-<!--\n", 
            "-  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "-  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "-  ~  distributed with this work for additional information\n", 
            "-  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "-  ~  to you under the Apache License, Version 2.0 (the\n", 
            "-  ~  \"License\"); you may not use this file except in compliance\n", 
            "-  ~  with the License.  You may obtain a copy of the License at\n", 
            "-  ~\n", 
            "-  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "-  ~\n", 
            "-  ~  Unless required by applicable law or agreed to in writing,\n", 
            "-  ~  software distributed under the License is distributed on an\n", 
            "-  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "-  ~  KIND, either express or implied.  See the License for the\n", 
            "-  ~  specific language governing permissions and limitations\n", 
            "-  ~  under the License.\n", 
            "-  -->\n", 
            "-\n", 
            "-<document>\n", 
            "-    <properties>\n", 
            "-        <title>Apache Synapse - Sample 202</title>\n", 
            "-    </properties>\n", 
            "-    <body>\n", 
            "-        <section name=\"Sample 202: \">\n", 
            "-            <div class=\"xmlConf\">&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"&gt;\n", 
            "-\n", 
            "-    &lt;proxy name=\"StockQuoteProxy\"&gt;\n", 
            "-        &lt;target&gt;\n", 
            "-            &lt;inSequence&gt;\n", 
            "-                &lt;send&gt;\n", 
            "-                    &lt;endpoint&gt;\n", 
            "-                        &lt;address uri=\"http://localhost:9000/services/SimpleStockQuoteService\"/&gt;\n", 
            "-                    &lt;/endpoint&gt;\n", 
            "-                &lt;/send&gt;\n", 
            "-            &lt;/inSequence&gt;\n", 
            "-            &lt;outSequence&gt;\n", 
            "-                &lt;send/&gt;\n", 
            "-            &lt;/outSequence&gt;\n", 
            "-        &lt;/target&gt;\n", 
            "-        &lt;publishWSDL uri=\"file:repository/conf/sample/resources/proxy/sample_proxy_1.wsdl\"/&gt;\n", 
            "-        &lt;enableRM/&gt;\n", 
            "-    &lt;/proxy&gt;\n", 
            "-\n", 
            "-&lt;/definitions&gt;</div>\n", 
            "-            <subsection name=\"Objective\">\n", 
            "-                <p>\n", 
            "-\n", 
            "-                </p>\n", 
            "-            </subsection>\n", 
            "-            <subsection name=\"Pre-requisites\">\n", 
            "-                <p>\n", 
            "-                    <ul>\n", 
            "-                        <li>\n", 
            "-                            Deploy the SimpleStockQuoteService in the sample Axis2 server and start Axis2\n", 
            "-                        </li>\n", 
            "-                        <li>\n", 
            "-                            Start Synapse using the configuration numbered 202 (repository/conf/sample/synapse_sample_202.xml)\n", 
            "-                            <div class=\"command\">\n", 
            "-                                Unix/Linux: sh synapse.sh -sample 202<br/>\n", 
            "-                                Windows: synapse.bat -sample 202\n", 
            "-                            </div>\n", 
            "-                        </li>\n", 
            "-                    </ul>\n", 
            "-                </p>\n", 
            "-            </subsection>\n", 
            "-            <subsection name=\"Executing the Client\">\n", 
            "-                <div class=\"command\">ant stockquote -Daddurl=http://localhost:9000/services/SimpleStockQuoteService -Dtrpurl=http://localhost:8280/</div>\n", 
            "-\n", 
            "-                <div class=\"consoleOutput\">Sat Nov 18 21:01:23 IST 2006 SimpleStockQuoteService :: Generating quote for : IBM</div>\n", 
            "-\n", 
            "-                <div class=\"consoleOutput\">Standard :: Stock price = $95.26454380258552</div>\n", 
            "-            </subsection>\n", 
            "-        </section>\n", 
            "-        <p><a href=\"../samples.html\">Back to Catalog</a></p>        \n", 
            "-    </body>\n", 
            "-</document>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/sample202.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/sample202.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-737,7 +737,6", 
          "lines": [
            "                 <div class=\"xmlConf\">&lt;address uri=\"<em>endpoint address</em>\" [format=\"soap11|soap12|pox|get\"] [optimize=\"mtom|swa\"]\n", 
            "          [encoding=\"<em>charset encoding</em>\"]\n", 
            "          [statistics=\"enable|disable\"] [trace=\"enable|disable\"]&gt;\n", 
            "-    &lt;enableRM [policy=\"<em>key</em>\"]/&gt;?\n", 
            "     &lt;enableSec [policy=\"<em>key</em>\"]/&gt;?\n", 
            "     &lt;enableAddressing [version=\"final|submission\"] [separateListener=\"true|false\"]/&gt;?\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-764,9 +763,9", 
          "lines": [
            "                     attributes of the endpoint directly in the configuration. The 'uri' attribute\n", 
            "                     of the address element contains the EPR of the target endpoint. Message format\n", 
            "                     for the endpoint and the method to optimize attachments can be specified in the\n", 
            "-                    'format' and 'optimize' attributes respectively. Reliable messaging and security\n", 
            "+                    'format' and 'optimize' attributes respectively. Security\n", 
            "                     policies for the endpoint can be specified in the policy attribute of the\n", 
            "-                    'enableRM' and 'enableSec' elements respectively. WS-Addressing can be engaged\n", 
            "+                    'enableSec' element. WS-Addressing can be engaged\n", 
            "                     for the messages sent to the endpoint by using the 'enableAddressing' element.\n", 
            "                 </p>\n", 
            "                 <p>\n"
          ]
        }, 
        {
          "locn": "-844,7 +843,7", 
          "lines": [
            "                     Default endpoint is an endpoint defined for adding QoS and other configurations\n", 
            "                     to the endpoint which is resolved from the 'To' address of the message context.\n", 
            "                     All the configurations such as message format for the endpoint, the method to\n", 
            "-                    optimize attachments, reliable messaging, security policies for the endpoint\n", 
            "+                    optimize attachments, and security policies for the endpoint\n", 
            "                     can be specified as in the case of Address Endpoint. This endpoint differs from\n", 
            "                     the address endpoint only in the 'uri' attribute which will not be present in\n", 
            "                     this endpoint. Following section describes the configuration of a default\n"
          ]
        }, 
        {
          "locn": "-853,7 +852,6", 
          "lines": [
            "                 <div class=\"xmlConf\">&lt;default [format=\"soap11|soap12|pox|get\"] [optimize=\"mtom|swa\"]\n", 
            "          [encoding=\"<em>charset encoding</em>\"]\n", 
            "          [statistics=\"enable|disable\"] [trace=\"enable|disable\"]&gt;\n", 
            "-    &lt;enableRM [policy=\"<em>key</em>\"]/&gt;?\n", 
            "     &lt;enableSec [policy=\"<em>key</em>\"]/&gt;?\n", 
            "     &lt;enableAddressing [version=\"final|submission\"] [separateListener=\"true|false\"]/&gt;?\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-882,13 +880,12", 
          "lines": [
            "                     WSDL document can be specified either as a URI or as an inline definition within\n", 
            "                     the configuration. The service and port name containing the target EPR has to be\n", 
            "                     specified with the 'service' and 'port' (or 'endpoint') attributes respectively.\n", 
            "-                    Elements like 'enableRM', 'enableSec', 'enableAddressing', 'suspendOnFailure' and\n", 
            "+                    Elements like 'enableSec', 'enableAddressing', 'suspendOnFailure' and\n", 
            "                     'timeout' are same as for an Address endpoint.\n", 
            "                 </p>\n", 
            "                 <div class=\"xmlConf\">&lt;wsdl [uri=\"wsdl-uri\"] service=\"qname\" port/endpoint=\"qname\"&gt;\n", 
            "     &lt;wsdl:definition&gt;...&lt;/wsdl:definition&gt;?\n", 
            "     &lt;wsdl20:description&gt;...&lt;/wsdl20:description&gt;?\n", 
            "-    &lt;enableRM [policy=\"key\"]/&gt;?\n", 
            "     &lt;enableSec [policy=\"key\"]/&gt;?\n", 
            "     &lt;enableAddressing/&gt;?\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-1035,7 +1032,6", 
          "lines": [
            "     &lt;/publishWSDL&gt;?\n", 
            "     &lt;enableAddressing/&gt;?\n", 
            "     &lt;enableSec/&gt;?\n", 
            "-    &lt;enableRM/&gt;?\n", 
            "     &lt;policy key=\"string\" [type=\"(in | out)\"]/&gt;? // optional service or message level policies such as (e.g. WS-Security and/or WS-RM policies)\n", 
            "     &lt;parameter name=\"string\"&gt;  // optional service parameters such as (e.g. transport.jms.ConnectionFactory)\n", 
            "         string | xml\n"
          ]
        }, 
        {
          "locn": "-1084,7 +1080,7", 
          "lines": [
            "                 elements (e.g. the JMS destination etc). If the proxy service should enable\n", 
            "                 WS-Reliable Messaging or Security, the appropriate modules should be engaged, and\n", 
            "                 specified service level policies will apply. To engage the required modules, one may\n", 
            "-                use the 'enableSec', 'enableRM' and 'enableAddressing' elements.\n", 
            "+                use the 'enableSec', and 'enableAddressing' elements.\n", 
            "             </p>\n", 
            "             <p>\n", 
            "                 A dynamic proxy may be defined by specifying the properties of the proxy as dynamic\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/config.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/config.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-98,15 +98,6", 
          "lines": [
            "             <type>mar</type>\n", 
            "         </dependency>\n", 
            "         <dependency>\n", 
            "-            <groupId>org.apache.sandesha2</groupId>\n", 
            "-            <artifactId>sandesha2</artifactId>\n", 
            "-            <type>mar</type>\n", 
            "-        </dependency>\n", 
            "-        <dependency>\n", 
            "-            <groupId>org.apache.sandesha2</groupId>\n", 
            "-            <artifactId>sandesha2-policy</artifactId>\n", 
            "-        </dependency>\n", 
            "-        <dependency>\n", 
            "             <groupId>org.apache.axis2</groupId>\n", 
            "             <artifactId>addressing</artifactId>\n", 
            "             <type>mar</type>\n"
          ]
        }
      ], 
      "to": "java/modules/distribution/pom.xml", 
      "from": "java/modules/distribution/pom.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-425,15 +425,6", 
          "lines": [
            " \n", 
            "         final MessageContext mc = axis2Request.getMsgContext();\n", 
            " \n", 
            "-        // if the request message is a sandesha messag we ignore the\n", 
            "-        // exception handling\n", 
            "-        // we cannot use the declared sandesha2 constant since\n", 
            "-        // nhttp transport shouldn't take a sandesha2 dependency\n", 
            "-        String done = (String) mc.getProperty(\"Sandesha2AppProcessingDone\");\n", 
            "-\t\tif (JavaUtils.isTrueExplicitly(done)) {\n", 
            "-\t\t\treturn;\n", 
            "-\t\t}\n", 
            "-\n", 
            "         if (mc.getAxisOperation() != null &&\n", 
            "                 mc.getAxisOperation().getMessageReceiver() != null) {\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ClientHandler.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ClientHandler.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-167,31 +167,6", 
          "lines": [
            "                                     <fileset dir=\"${SSQ3.dir}\"/>\n", 
            "                                 </jar>\n", 
            " \n", 
            "-                                <property name=\"src4\" value=\"../samples/services/ReliableStockQuoteService/src\"/>\n", 
            "-                                <delete dir=\"${temp.dir}\"/>\n", 
            "-                                <mkdir dir=\"${temp.dir}\"/>\n", 
            "-                                <mkdir dir=\"${classes}\"/>\n", 
            "-                                <javac debug=\"on\" destdir=\"${classes}\" fork=\"true\" includeantruntime=\"false\">\n", 
            "-                                    <src path=\"${src4}\"/>\n", 
            "-                                    <classpath refid=\"maven.compile.classpath\"/>\n", 
            "-                                </javac>\n", 
            "-                                <property name=\"RSQ.dir\" value=\"${temp.dir}/ReliableStockQuoteService\"/>\n", 
            "-                                <mkdir dir=\"${RSQ.dir}\"/>\n", 
            "-\n", 
            "-                                <mkdir dir=\"${RSQ.dir}/META-INF\"/>\n", 
            "-                                <copy file=\"${src4}/../conf/services.xml\" tofile=\"${RSQ.dir}/META-INF/services.xml\"/>\n", 
            "-                                <!--<copy file=\"${src4}/../wsdl/ReliableStockQuoteService.wsdl\"-->\n", 
            "-                                <!--tofile=\"${RSQ.dir}/META-INF/service.wsdl\"/>-->\n", 
            "-                                <copy toDir=\"${RSQ.dir}\">\n", 
            "-                                    <fileset dir=\"${classes}\">\n", 
            "-                                        <include name=\"**/*.class\"/>\n", 
            "-                                    </fileset>\n", 
            "-                                </copy>\n", 
            "-\n", 
            "-                                <jar destfile=\"${services}/ReliableStockQuoteService.aar\">\n", 
            "-                                    <fileset dir=\"${RSQ.dir}\"/>\n", 
            "-                                </jar>\n", 
            "-\n", 
            "                                 <property name=\"src5\" value=\"../samples/services/LoadbalanceFailoverService/src\"/>\n", 
            "                                 <delete dir=\"${temp.dir}\"/>\n", 
            "                                 <mkdir dir=\"${temp.dir}\"/>\n"
          ]
        }, 
        {
          "locn": "-270,14 +245,6", 
          "lines": [
            "                                     </outputDirectory>\n", 
            "                                 </artifactItem>\n", 
            "                                 <artifactItem>\n", 
            "-                                    <groupId>org.apache.sandesha2</groupId>\n", 
            "-                                    <artifactId>sandesha2</artifactId>\n", 
            "-                                    <version>${sandesha2.version}</version>\n", 
            "-                                    <type>mar</type>\n", 
            "-                                    <outputDirectory>target/test_repos/axis2Server/modules\n", 
            "-                                    </outputDirectory>\n", 
            "-                                </artifactItem>\n", 
            "-                                <artifactItem>\n", 
            "                                     <groupId>org.apache.axis2</groupId>\n", 
            "                                     <artifactId>addressing</artifactId>\n", 
            "                                     <version>${addressing.version}</version>\n"
          ]
        }, 
        {
          "locn": "-309,15 +276,6", 
          "lines": [
            "                                     <outputDirectory>target/test_repos/synapse/modules\n", 
            "                                     </outputDirectory>\n", 
            "                                 </artifactItem>\n", 
            "-                                <artifactItem>\n", 
            "-                                    <groupId>org.apache.sandesha2</groupId>\n", 
            "-                                    <artifactId>sandesha2</artifactId>\n", 
            "-                                    <version>${sandesha2.version}</version>\n", 
            "-                                    <type>mar</type>\n", 
            "-                                    <outputDirectory>target/test_repos/synapse/modules\n", 
            "-                                    </outputDirectory>\n", 
            "-                                </artifactItem>\n", 
            "-\n", 
            "                             </artifactItems>\n", 
            "                         </configuration>\n", 
            "                     </execution>\n"
          ]
        }, 
        {
          "locn": "-393,11 +351,6", 
          "lines": [
            "             </exclusions>\n", 
            "         </dependency>\n", 
            "         <dependency>\n", 
            "-            <groupId>org.apache.sandesha2</groupId>\n", 
            "-            <artifactId>sandesha2-core</artifactId>\n", 
            "-            <scope>test</scope>\n", 
            "-        </dependency>\n", 
            "-        <dependency>\n", 
            "             <groupId>org.apache.axis2</groupId>\n", 
            "             <artifactId>axis2-transport-base</artifactId>\n", 
            "             <scope>test</scope>\n"
          ]
        }
      ], 
      "to": "java/modules/integration/pom.xml", 
      "from": "java/modules/integration/pom.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-60,7 +60,6", 
          "lines": [
            "             </xs:element>\n", 
            "             <xs:element name=\"enableAddressing\" minOccurs=\"0\" maxOccurs=\"1\"/>\n", 
            "             <xs:element name=\"enableSec\" minOccurs=\"0\" maxOccurs=\"1\"/>\n", 
            "-            <xs:element name=\"enableRM\" minOccurs=\"0\" maxOccurs=\"1\"/>\n", 
            "             <xs:element name=\"policy\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n", 
            "                 <xs:complexType>\n", 
            "                     <xs:attribute name=\"key\" type=\"xs:string\" use=\"required\"/>\n"
          ]
        }
      ], 
      "to": "java/repository/schema/proxy.xsd", 
      "from": "java/repository/schema/proxy.xsd"
    }, 
    {
      "chunks": [
        {
          "locn": "-38,7 +38,6", 
          "lines": [
            "     <xs:include schemaLocation=\"transformation/xslt.xsd\"/>\n", 
            "     <xs:include schemaLocation=\"transformation/xquery.xsd\"/>\n", 
            "     <xs:include schemaLocation=\"transformation/rewrite.xsd\"/>\n", 
            "-    <xs:include schemaLocation=\"advanced/rm_sequence.xsd\"/>\n", 
            "     <xs:include schemaLocation=\"advanced/db_mediators.xsd\"/>\n", 
            "     <xs:include schemaLocation=\"advanced/cache.xsd\"/>\n", 
            "     <xs:include schemaLocation=\"advanced/event.xsd\"/>\n"
          ]
        }, 
        {
          "locn": "-77,7 +76,6", 
          "lines": [
            "             <xs:element ref=\"validate\"/>\n", 
            "             <xs:element ref=\"filter\"/>\n", 
            "             <xs:element ref=\"switch\"/>\n", 
            "-            <xs:element ref=\"RMSequence\"/>\n", 
            "             <xs:element ref=\"makefault\"/>\n", 
            "             <xs:element ref=\"script\"/>\n", 
            "             <xs:element ref=\"xslt\"/>\n"
          ]
        }
      ], 
      "to": "java/repository/schema/mediators/mediators.xsd", 
      "from": "java/repository/schema/mediators/mediators.xsd"
    }, 
    {
      "chunks": [
        {
          "locn": "-216,11 +216,6", 
          "lines": [
            "             </xs:documentation>\n", 
            "         </xs:annotation>\n", 
            "         <xs:all>\n", 
            "-            <xs:element name=\"enableRM\" minOccurs=\"0\" maxOccurs=\"1\">\n", 
            "-                <xs:complexType>\n", 
            "-                    <xs:attribute name=\"policy\" type=\"xs:string\" use=\"optional\"/>\n", 
            "-                </xs:complexType>\n", 
            "-            </xs:element>\n", 
            "             <xs:element name=\"enableSec\" minOccurs=\"0\" maxOccurs=\"1\">\n", 
            "                 <xs:complexType>\n", 
            "                     <xs:attribute name=\"policy\" type=\"xs:string\" use=\"required\"/>\n"
          ]
        }
      ], 
      "to": "java/repository/schema/endpoint.xsd", 
      "from": "java/repository/schema/endpoint.xsd"
    }, 
    {
      "chunks": [
        {
          "locn": "-26,7 +26,6", 
          "lines": [
            " import org.apache.axis2.engine.AxisConfiguration;\n", 
            " import org.apache.axis2.handlers.AbstractHandler;\n", 
            " import org.apache.axis2.wsdl.WSDLConstants;\n", 
            "-import org.apache.sandesha2.Sandesha2Constants;\n", 
            " import org.apache.synapse.SynapseConstants;\n", 
            " import org.apache.synapse.config.SynapseConfiguration;\n", 
            " import org.apache.synapse.core.axis2.ProxyService;\n"
          ]
        }, 
        {
          "locn": "-84,12 +83,6", 
          "lines": [
            "                     outMessage.getProperty(RelayConstants.FORCE_RESPONSE_EARLY_BUILD))) {\n", 
            "                 return buildMessage(messageContext);\n", 
            "             }\n", 
            "-\n", 
            "-            AxisOperation operation = messageContext.getAxisOperation();\n", 
            "-            if (operation != null && operation.getName().getLocalPart().\n", 
            "-                    startsWith(Sandesha2Constants.SANDESHA_OP_PREFIX)) {\n", 
            "-                return buildMessage(messageContext);\n", 
            "-            }\n", 
            "         }\n", 
            " \n", 
            "         return InvocationResponse.CONTINUE;\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/relay/ServiceRequestEarlyBuilder.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/relay/ServiceRequestEarlyBuilder.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-33,7 +33,6", 
          "lines": [
            " import org.apache.axis2.wsdl.WSDLConstants;\n", 
            " import org.apache.commons.logging.Log;\n", 
            " import org.apache.commons.logging.LogFactory;\n", 
            "-import org.apache.sandesha2.client.SandeshaClientConstants;\n", 
            " import org.apache.synapse.FaultHandler;\n", 
            " import org.apache.synapse.SynapseConstants;\n", 
            " import org.apache.synapse.SynapseException;\n"
          ]
        }, 
        {
          "locn": "-199,7 +198,7", 
          "lines": [
            "                     messageID = relatesTo.getValue();\n", 
            "                 }\n", 
            "             }\n", 
            "-        } else if (messageCtx.getProperty(SandeshaClientConstants.SEQUENCE_KEY) == null) {\n", 
            "+        } else {\n", 
            "             messageID = (String) messageCtx.getProperty(SynapseConstants.RELATES_TO_FOR_POX);\n", 
            "         }\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseCallbackReceiver.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseCallbackReceiver.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-146,7 +146,7", 
          "lines": [
            " \n", 
            "         AxisService anonymousService = AnonymousServiceFactory.getAnonymousService(null,\n", 
            "                 configurationContext.getAxisConfiguration(), endpointDefinition.isAddressingOn(),\n", 
            "-                false, endpointDefinition.isSecurityOn(), false);\n", 
            "+                endpointDefinition.isSecurityOn(), false);\n", 
            "         anonymousService.getParent().addParameter(SynapseConstants.HIDDEN_SERVICE_PARAM, \"true\");\n", 
            "         ServiceGroupContext serviceGroupContext = new ServiceGroupContext(configurationContext, (AxisServiceGroup) anonymousService.getParent());\n", 
            "         ServiceContext serviceCtx = serviceGroupContext.getServiceContext(anonymousService);\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2BlockingClient.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2BlockingClient.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,9 +42,7", 
          "lines": [
            "     private static final String NONE            = \"__NONE__\";\n", 
            "     private static final String ADDR_ONLY       = \"__ADDR_ONLY__\";\n", 
            "     private static final String SEC_ONLY        = \"__SEC_ONLY__\";\n", 
            "-    private static final String RM_AND_ADDR     = \"__RM_AND_ADDR__\";\n", 
            "     private static final String SEC_AND_ADDR    = \"__SEC_AND_ADDR__\";\n", 
            "-    private static final String RM_SEC_AND_ADDR = \"__RM_SEC_AND_ADDR__\";\n", 
            " \n", 
            "     public static final String OUT_IN_OPERATION   = \"anonOutInOp\";\n", 
            "     public static final String OUT_ONLY_OPERATION = \"anonOutonlyOp\";\n"
          ]
        }, 
        {
          "locn": "-57,14 +55,13", 
          "lines": [
            "      * @param synCfg   Synapse configuration\n", 
            "      * @param axisCfg  Axis2 configuration\n", 
            "      * @param wsAddrOn whether addressing is on or not\n", 
            "-     * @param wsRMOn   whether RM is on ot not\n", 
            "      * @param wsSecOn  whether security is on or not\n", 
            "      * @return An Axis service for the requested QoS\n", 
            "      */\n", 
            "     public static AxisService getAnonymousService(SynapseConfiguration synCfg,\n", 
            "                                                   AxisConfiguration axisCfg, boolean wsAddrOn,\n", 
            "-                                                  boolean wsRMOn, boolean wsSecOn) {\n", 
            "-        return getAnonymousService(synCfg, axisCfg, wsAddrOn, wsRMOn, wsSecOn, true);\n", 
            "+                                                  boolean wsSecOn) {\n", 
            "+        return getAnonymousService(synCfg, axisCfg, wsAddrOn, wsSecOn, true);\n", 
            "     }\n", 
            " \n", 
            " \n"
          ]
        }, 
        {
          "locn": "-74,7 +71,6", 
          "lines": [
            "      * @param synCfg Synapse configuration\n", 
            "      * @param axisCfg Axis2 configuration\n", 
            "      * @param wsAddrOn whether addressing is on or not\n", 
            "-     * @param wsRMOn whether RM is on ot not\n", 
            "      * @param wsSecOn whether security is on or not\n", 
            "      * @param setCallback whether to register a synapse callback receiver or not\n", 
            "      * @return An Axis service for the requested QoS\n"
          ]
        }, 
        {
          "locn": "-81,7 +77,7", 
          "lines": [
            "      */\n", 
            "     public static AxisService getAnonymousService(SynapseConfiguration synCfg,\n", 
            "                                                   AxisConfiguration axisCfg, boolean wsAddrOn,\n", 
            "-                                                  boolean wsRMOn, boolean wsSecOn, boolean setCallback) {\n", 
            "+                                                  boolean wsSecOn, boolean setCallback) {\n", 
            " \n", 
            "         // if non of addressing, security and rm is engaged then checkbit is 0\n", 
            "         int checkbit = 0;\n"
          ]
        }, 
        {
          "locn": "-89,8 +85,6", 
          "lines": [
            "         if (wsAddrOn) { checkbit += 1; }\n", 
            "         // if security is on increase the checkbit by 2\n", 
            "         if (wsSecOn) { checkbit += 2; }\n", 
            "-        // if reliable messaging is on increase the checkbit by 4\n", 
            "-        if (wsRMOn) { checkbit += 4; }\n", 
            " \n", 
            "         String servicekey;\n", 
            "         switch (checkbit) {\n"
          ]
        }, 
        {
          "locn": "-106,18 +100,6", 
          "lines": [
            "             case 3 :\n", 
            "                 servicekey = SEC_AND_ADDR;\n", 
            "                 break;\n", 
            "-            case 4 :\n", 
            "-                servicekey = RM_AND_ADDR;\n", 
            "-                break;\n", 
            "-            case 5 :\n", 
            "-                servicekey = RM_AND_ADDR;\n", 
            "-                break;\n", 
            "-            case 6:\n", 
            "-                servicekey = RM_SEC_AND_ADDR;\n", 
            "-                break;\n", 
            "-            case 7:\n", 
            "-                servicekey = RM_SEC_AND_ADDR;\n", 
            "-                break;\n", 
            "             default :\n", 
            "                 servicekey = NONE;\n", 
            "                 break;\n"
          ]
        }, 
        {
          "locn": "-139,11 +121,6", 
          "lines": [
            "                     if (wsAddrOn) {\n", 
            "                         service.engageModule(axisCfg.getModule(\n", 
            "                             SynapseConstants.ADDRESSING_MODULE_NAME), axisCfg);\n", 
            "-\n", 
            "-                        if (wsRMOn) {\n", 
            "-                            service.engageModule(axisCfg.getModule(\n", 
            "-                                SynapseConstants.RM_MODULE_NAME), axisCfg);\n", 
            "-                        }\n", 
            "                     }\n", 
            "                     // if WS-A is off, WS-RM should be too\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/AnonymousServiceFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/AnonymousServiceFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-75,7 +75,6", 
          "lines": [
            "  *       <resource location=\"...\" key=\"...\"/>*\n", 
            "  *    </publishWSDL>?\n", 
            "  *    <enableSec/>?\n", 
            "- *    <enableRM/>?\n", 
            "  *    <policy key=\"string\" [type=(\"in\" |\"out\")] [operationName=\"string\"]\n", 
            "  *      [operationNamespace=\"string\"]>?\n", 
            "  *       // optional service parameters\n"
          ]
        }, 
        {
          "locn": "-184,10 +183,6", 
          "lines": [
            "      */\n", 
            "     private boolean wsAddrEnabled = false;\n", 
            "     /**\n", 
            "-     * Should WS RM be engaged on this service\n", 
            "-     */\n", 
            "-    private boolean wsRMEnabled = false;\n", 
            "-    /**\n", 
            "      * Should WS Sec be engaged on this service\n", 
            "      */\n", 
            "     private boolean wsSecEnabled = false;\n"
          ]
        }, 
        {
          "locn": "-605,17 +600,6", 
          "lines": [
            "             }\n", 
            "         }\n", 
            " \n", 
            "-        // should RM be engaged on this service?\n", 
            "-        if (wsRMEnabled) {\n", 
            "-            auditInfo(\"WS-Reliable messaging is enabled for service : \" + name);\n", 
            "-            try {\n", 
            "-                proxyService.engageModule(axisCfg.getModule(\n", 
            "-                    SynapseConstants.RM_MODULE_NAME), axisCfg);\n", 
            "-            } catch (AxisFault axisFault) {\n", 
            "-                handleException(\"Error loading WS RM module on proxy service : \" + name, axisFault);\n", 
            "-            }\n", 
            "-        }\n", 
            "-\n", 
            "         // should Security be engaged on this service?\n", 
            "         if (wsSecEnabled) {\n", 
            "             auditInfo(\"WS-Security is enabled for service : \" + name);\n"
          ]
        }, 
        {
          "locn": "-628,7 +612,7", 
          "lines": [
            "             }\n", 
            "         }\n", 
            " \n", 
            "-        moduleEngaged = wsSecEnabled || wsRMEnabled || wsAddrEnabled;\n", 
            "+        moduleEngaged = wsSecEnabled || wsAddrEnabled;\n", 
            "         wsdlPublished = wsdlFound;\n", 
            " \n", 
            "         auditInfo(\"Successfully created the Axis2 service for Proxy service : \" + name);\n"
          ]
        }, 
        {
          "locn": "-874,14 +858,6", 
          "lines": [
            "         this.wsAddrEnabled = wsAddrEnabled;\n", 
            "     }\n", 
            " \n", 
            "-    public boolean isWsRMEnabled() {\n", 
            "-        return wsRMEnabled;\n", 
            "-    }\n", 
            "-\n", 
            "-    public void setWsRMEnabled(boolean wsRMEnabled) {\n", 
            "-        this.wsRMEnabled = wsRMEnabled;\n", 
            "-    }\n", 
            "-\n", 
            "     public boolean isWsSecEnabled() {\n", 
            "         return wsSecEnabled;\n", 
            "     }\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/ProxyService.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/ProxyService.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-19,7 +19,6", 
          "lines": [
            " \n", 
            " package org.apache.synapse.core.axis2;\n", 
            " \n", 
            "-import org.apache.axiom.om.OMElement;\n", 
            " import org.apache.axis2.AxisFault;\n", 
            " import org.apache.axis2.Constants;\n", 
            " import org.apache.axis2.addressing.AddressingConstants;\n"
          ]
        }, 
        {
          "locn": "-26,7 +25,6", 
          "lines": [
            " import org.apache.axis2.addressing.EndpointReference;\n", 
            " import org.apache.axis2.client.OperationClient;\n", 
            " import org.apache.axis2.client.Options;\n", 
            "-import org.apache.axis2.client.ServiceClient;\n", 
            " import org.apache.axis2.context.ConfigurationContext;\n", 
            " import org.apache.axis2.context.MessageContext;\n", 
            " import org.apache.axis2.context.ServiceContext;\n"
          ]
        }, 
        {
          "locn": "-39,11 +37,6", 
          "lines": [
            " import org.apache.axis2.wsdl.WSDLConstants;\n", 
            " import org.apache.commons.logging.Log;\n", 
            " import org.apache.commons.logging.LogFactory;\n", 
            "-import org.apache.sandesha2.Sandesha2Constants;\n", 
            "-import org.apache.sandesha2.client.SandeshaClient;\n", 
            "-import org.apache.sandesha2.client.SandeshaClientConstants;\n", 
            "-import org.apache.sandesha2.policy.SandeshaPolicyBean;\n", 
            "-import org.apache.sandesha2.policy.builders.RMAssertionBuilder;\n", 
            " import org.apache.synapse.SynapseConstants;\n", 
            " import org.apache.synapse.endpoints.EndpointDefinition;\n", 
            " import org.apache.synapse.rest.RESTConstants;\n"
          ]
        }, 
        {
          "locn": "-81,8 +74,6", 
          "lines": [
            "         String wsSecPolicyKey = null;\n", 
            "         String inboundWsSecPolicyKey = null;\n", 
            "         String outboundWsSecPolicyKey = null;\n", 
            "-        boolean wsRMEnabled = false;\n", 
            "-        String wsRMPolicyKey = null;\n", 
            "         boolean wsAddressingEnabled = false;\n", 
            "         String wsAddressingVersion = null;\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-92,9 +83,7", 
          "lines": [
            "             wsSecPolicyKey = endpoint.getWsSecPolicyKey();\n", 
            "             inboundWsSecPolicyKey = endpoint.getInboundWsSecPolicyKey();\n", 
            "             outboundWsSecPolicyKey = endpoint.getOutboundWsSecPolicyKey();\n", 
            "-            wsRMEnabled = endpoint.isReliableMessagingOn();\n", 
            "-            wsRMPolicyKey = endpoint.getWsRMPolicyKey();\n", 
            "-            wsAddressingEnabled = endpoint.isAddressingOn() || wsRMEnabled;\n", 
            "+            wsAddressingEnabled = endpoint.isAddressingOn();\n", 
            "             wsAddressingVersion = endpoint.getAddressingVersion();\n", 
            "         }\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-109,7 +98,6", 
          "lines": [
            "             log.debug(\n", 
            "                 \"Sending [add = \" + wsAddressingEnabled +\n", 
            "                 \"] [sec = \" + wsSecurityEnabled +\n", 
            "-                \"] [rm = \" + wsRMEnabled +\n", 
            "                 (endpoint != null ?\n", 
            "                     \"] [mtom = \" + endpoint.isUseMTOM() +\n", 
            "                     \"] [swa = \" + endpoint.isUseSwa() +\n"
          ]
        }, 
        {
          "locn": "-329,7 +317,7", 
          "lines": [
            " \n", 
            "         AxisService anonymousService =\n", 
            "             AnonymousServiceFactory.getAnonymousService(synapseOutMessageContext.getConfiguration(),\n", 
            "-                    axisCfg, wsAddressingEnabled, wsRMEnabled, wsSecurityEnabled);\n", 
            "+                    axisCfg, wsAddressingEnabled, wsSecurityEnabled);\n", 
            "         // mark the anon services created to be used in the client side of synapse as hidden\n", 
            "         // from the server side of synapse point of view\n", 
            "         anonymousService.getParent().addParameter(SynapseConstants.HIDDEN_SERVICE_PARAM, \"true\");\n"
          ]
        }, 
        {
          "locn": "-349,20 +337,6", 
          "lines": [
            " \n", 
            "         Options clientOptions = MessageHelper.cloneOptions(originalInMsgCtx.getOptions());\n", 
            "         clientOptions.setUseSeparateListener(separateListener);\n", 
            "-        // if RM is requested,\n", 
            "-        if (wsRMEnabled) {\n", 
            "-            // if a WS-RM policy is specified, use it\n", 
            "-            if (wsRMPolicyKey != null) {\n", 
            "-                Object property = synapseOutMessageContext.getEntry(wsRMPolicyKey);\n", 
            "-                if (property instanceof OMElement) {\n", 
            "-                    OMElement policyOMElement = (OMElement) property;\n", 
            "-                    RMAssertionBuilder builder = new RMAssertionBuilder();\n", 
            "-                    SandeshaPolicyBean sandeshaPolicyBean = (SandeshaPolicyBean) builder.build(policyOMElement, null);\n", 
            "-                    Parameter policyParam = new Parameter(Sandesha2Constants.SANDESHA_PROPERTY_BEAN, sandeshaPolicyBean);\n", 
            "-                    anonymousService.addParameter(policyParam);\n", 
            "-                }\n", 
            "-            }\n", 
            "-        }\n", 
            " \n", 
            "         // if security is enabled,\n", 
            "         if (wsSecurityEnabled) {\n"
          ]
        }, 
        {
          "locn": "-416,7 +390,7", 
          "lines": [
            " \n", 
            "         // this is a temporary fix for converting messages from HTTP 1.1 chunking to HTTP 1.0.\n", 
            "         // Without this HTTP transport can block & become unresponsive because we are streaming\n", 
            "-        // HTTP 1.1 messages and HTTP 1.0 require the whole message to caculate the content length\n", 
            "+        // HTTP 1.1 messages and HTTP 1.0 require the whole message to calculate the content length\n", 
            "         if (originalInMsgCtx.isPropertyTrue(NhttpConstants.FORCE_HTTP_1_0)) {\n", 
            "             synapseOutMessageContext.getEnvelope().toString();\n", 
            "         }\n"
          ]
        }, 
        {
          "locn": "-436,19 +410,6", 
          "lines": [
            "         }\n", 
            " \n", 
            "         mepClient.execute(true);\n", 
            "-        if (wsRMEnabled) {\n", 
            "-            Object rm11 = clientOptions.getProperty(SandeshaClientConstants.RM_SPEC_VERSION);\n", 
            "-            if ((rm11 != null) && rm11.equals(Sandesha2Constants.SPEC_VERSIONS.v1_1)){\n", 
            "-                ServiceClient serviceClient = new ServiceClient(\n", 
            "-                        axisOutMsgCtx.getConfigurationContext(), axisOutMsgCtx.getAxisService());\n", 
            "-                serviceClient.setTargetEPR(\n", 
            "-                        new EndpointReference(endpoint.getAddress(synapseOutMessageContext)));\n", 
            "-                serviceClient.setOptions(clientOptions);\n", 
            "-                serviceClient.getOptions().setTo(\n", 
            "-                        new EndpointReference(endpoint.getAddress(synapseOutMessageContext)));\n", 
            "-                SandeshaClient.terminateSequence(serviceClient);\n", 
            "-            }\n", 
            "-        }\n", 
            "    }\n", 
            " \n", 
            "     private static MessageContext cloneForSend(MessageContext ori, String preserveAddressing)\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2FlexibleMEPClient.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2FlexibleMEPClient.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-51,8 +51,6", 
          "lines": [
            "     public static final QName SYNAPSE_OPERATION_NAME = new QName(\"mediate\");\n", 
            " \n", 
            "     //- names of modules to be engaged at runtime -\n", 
            "-    /** The Name of the WS-RM module */\n", 
            "-    public static final String RM_MODULE_NAME = \"sandesha2\";\n", 
            "     /** The Name of the WS-A Addressing module */\n", 
            "     public static final String ADDRESSING_MODULE_NAME = \"addressing\";\n", 
            "     /** The Name of the WS-Security module */\n"
          ]
        }, 
        {
          "locn": "-97,10 +95,8", 
          "lines": [
            "     public static final String RAMPART_POLICY = \"rampartPolicy\";\n", 
            "     /** The Axis2 client options property name for the Rampart in message policy */\n", 
            "     public static final String RAMPART_IN_POLICY = \"rampartInPolicy\";\n", 
            "-    /** The Axis2 client options property name for the Rampart out messsage policy */\n", 
            "+    /** The Axis2 client options property name for the Rampart out message policy */\n", 
            "     public static final String RAMPART_OUT_POLICY = \"rampartOutPolicy\";\n", 
            "-    /** The Axis2 client options property name for the Sandesha policy */\n", 
            "-\tpublic static final String SANDESHA_POLICY = \"sandeshaPolicy\";\n", 
            "     /** ServerManager MBean category and id */\n", 
            "     public static final String SERVER_MANAGER_MBEAN = \"ServerManager\";\n", 
            "     public static final String RECEIVING_SEQUENCE = \"RECEIVING_SEQUENCE\";\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/SynapseConstants.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/SynapseConstants.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-219,8 +219,7", 
          "lines": [
            " \n", 
            "         contentAware = definition != null &&\n", 
            "                 ((definition.getFormat() != null && !definition.getFormat().equals(SynapseConstants.FORMAT_REST)) ||\n", 
            "-                definition.isSecurityOn() || definition.isReliableMessagingOn() ||\n", 
            "-                definition.isAddressingOn());\n", 
            "+                definition.isSecurityOn() || definition.isAddressingOn());\n", 
            "     }\n", 
            " \n", 
            "     public boolean readyToSend() {\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/endpoints/AbstractEndpoint.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/endpoints/AbstractEndpoint.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-43,10 +43,6", 
          "lines": [
            "      */\n", 
            "     private String address = null;\n", 
            "     /**\n", 
            "-     * Should messages be sent in an WS-RM Sequence ?\n", 
            "-     */\n", 
            "-    private boolean reliableMessagingOn = false;\n", 
            "-    /**\n", 
            "      * Should messages be sent using WS-A?\n", 
            "      */\n", 
            "     private boolean addressingOn = false;\n"
          ]
        }, 
        {
          "locn": "-59,10 +55,6", 
          "lines": [
            "      */\n", 
            "     private boolean securityOn = false;\n", 
            "     /**\n", 
            "-     * The \"key\" for any WS-RM Policy overrides to be used\n", 
            "-     */\n", 
            "-    private String wsRMPolicyKey = null;\n", 
            "-    /**\n", 
            "      * The \"key\" for any Rampart Security Policy to be used\n", 
            "      */\n", 
            "     private String wsSecPolicyKey = null;\n"
          ]
        }, 
        {
          "locn": "-220,24 +212,6", 
          "lines": [
            "     }\n", 
            " \n", 
            "     /**\n", 
            "-     * Is RM turned on on this endpoint?\n", 
            "-     *\n", 
            "-     * @return true if on\n", 
            "-     */\n", 
            "-    public boolean isReliableMessagingOn() {\n", 
            "-        return reliableMessagingOn;\n", 
            "-    }\n", 
            "-\n", 
            "-    /**\n", 
            "-     * Request that RM be turned on/off on this endpoint\n", 
            "-     *\n", 
            "-     * @param reliableMessagingOn a boolean flag indicating RM is on or not\n", 
            "-     */\n", 
            "-    public void setReliableMessagingOn(boolean reliableMessagingOn) {\n", 
            "-        this.reliableMessagingOn = reliableMessagingOn;\n", 
            "-    }\n", 
            "-\n", 
            "-    /**\n", 
            "      * Is WS-A turned on on this endpoint?\n", 
            "      *\n", 
            "      * @return true if on\n"
          ]
        }, 
        {
          "locn": "-348,24 +322,6", 
          "lines": [
            "         this.outboundWsSecPolicyKey = outboundWsSecPolicyKey;\n", 
            "     }\n", 
            " \n", 
            "-    /**\n", 
            "-     * Get the WS-RM configuration policys' 'key' to be used\n", 
            "-     *\n", 
            "-     * @return the WS-RM configuration policys' 'key' to be used\n", 
            "-     */\n", 
            "-    public String getWsRMPolicyKey() {\n", 
            "-        return wsRMPolicyKey;\n", 
            "-    }\n", 
            "-\n", 
            "-    /**\n", 
            "-     * Set the WS-RM configuration policys' 'key' to be used\n", 
            "-     *\n", 
            "-     * @param wsRMPolicyKey the WS-RM configuration policys' 'key' to be used\n", 
            "-     */\n", 
            "-    public void setWsRMPolicyKey(String wsRMPolicyKey) {\n", 
            "-        this.wsRMPolicyKey = wsRMPolicyKey;\n", 
            "-    }\n", 
            "-\n", 
            "     public void setUseSeparateListener(boolean b) {\n", 
            "         this.useSeparateListener = b;\n", 
            "     }\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/endpoints/EndpointDefinition.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/endpoints/EndpointDefinition.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-56,7 +56,6", 
          "lines": [
            "  *    &lt;/publishWSDL&gt;?\n", 
            "  *    &lt;enableAddressing/&gt;?\n", 
            "  *    &lt;enableSec/&gt;?\n", 
            "- *    &lt;enableRM/&gt;?\n", 
            "  *    &lt;policy key=\"string\"/&gt;?\n", 
            "  *    &lt;policy key=\"string\" type=(in | out)/&gt;?\n", 
            "  *       // optional service parameters\n"
          ]
        }, 
        {
          "locn": "-352,11 +351,6", 
          "lines": [
            "         }\n", 
            " \n", 
            "         if (elem.getFirstChildWithName(\n", 
            "-                new QName(XMLConfigConstants.SYNAPSE_NAMESPACE, \"enableRM\")) != null) {\n", 
            "-            proxy.setWsRMEnabled(true);\n", 
            "-        }\n", 
            "-\n", 
            "-        if (elem.getFirstChildWithName(\n", 
            "                 new QName(XMLConfigConstants.SYNAPSE_NAMESPACE, \"enableSec\")) != null) {\n", 
            "             proxy.setWsSecEnabled(true);\n", 
            "         }\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/ProxyServiceFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/ProxyServiceFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,6", 
          "lines": [
            "  *            [statistics=\"enable|disable\"] [trace=\"enable|disable\"]&gt;\n", 
            "  *     .. extensibility ..\n", 
            "  *\n", 
            "- *     &lt;enableRM [policy=\"<em>key</em>\"]/&gt;?\n", 
            "  *     &lt;enableSec [policy=\"<em>key</em>\"]/&gt;?\n", 
            "  *     &lt;enableAddressing [version=\"final|submission\"] [separateListener=\"true|false\"]/&gt;?\n", 
            "  *\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/AddressEndpointFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/AddressEndpointFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-52,7 +52,6", 
          "lines": [
            "  *     &lt;wsdl:definition&gt;...&lt;/wsdl:definition&gt;?\n", 
            "  *     &lt;wsdl20:description&gt;...&lt;/wsdl20:description&gt;?\n", 
            "  *\n", 
            "- *     &lt;enableRM [policy=\"<em>key</em>\"]/&gt;?\n", 
            "  *     &lt;enableSec [policy=\"<em>key</em>\"]/&gt;?\n", 
            "  *     &lt;enableAddressing [version=\"final|submission\"] [separateListener=\"true|false\"]/&gt;?\n", 
            "  *\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/WSDLEndpointFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/WSDLEndpointFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,7 +42,6", 
          "lines": [
            "  *          [statistics=\"enable|disable\"] [trace=\"enable|disable\"]&gt;\n", 
            "  *     .. extensibility ..\n", 
            "  *\n", 
            "- *     &lt;enableRM [policy=\"<em>key</em>\"]/&gt;?\n", 
            "  *     &lt;enableSec [policy=\"<em>key</em>\"]/&gt;?\n", 
            "  *     &lt;enableAddressing [version=\"final|submission\"] [separateListener=\"true|false\"]/&gt;?\n", 
            "  *\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/DefaultEndpointFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/DefaultEndpointFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-31,7 +31,8", 
          "lines": [
            " import javax.xml.namespace.QName;\n", 
            " import java.util.StringTokenizer;\n", 
            " \n", 
            "-public class EndpointDefinitionFactory implements DefinitionFactory{\n", 
            "+public class EndpointDefinitionFactory implements DefinitionFactory {\n", 
            "+\n", 
            "     public static final Log log = LogFactory.getLog(EndpointDefinitionFactory.class);\n", 
            " \n", 
            "     /**\n"
          ]
        }, 
        {
          "locn": "-126,19 +127,6", 
          "lines": [
            "             }\n", 
            "         }\n", 
            " \n", 
            "-        OMElement wsRm = elem.getFirstChildWithName(\n", 
            "-                new QName(XMLConfigConstants.SYNAPSE_NAMESPACE, \"enableRM\"));\n", 
            "-        if (wsRm != null) {\n", 
            "-\n", 
            "-            definition.setReliableMessagingOn(true);\n", 
            "-\n", 
            "-            OMAttribute policy\n", 
            "-                    = wsRm.getAttribute(new QName(XMLConfigConstants.NULL_NAMESPACE, \"policy\"));\n", 
            "-            if (policy != null) {\n", 
            "-                definition.setWsRMPolicyKey(policy.getAttributeValue());\n", 
            "-            }\n", 
            "-        }\n", 
            "-\n", 
            "         // set the timeout configuration\n", 
            "         OMElement timeout = elem.getFirstChildWithName(\n", 
            "                 new QName(XMLConfigConstants.SYNAPSE_NAMESPACE, \"timeout\"));\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/EndpointDefinitionFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/EndpointDefinitionFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-77,16 +77,6", 
          "lines": [
            "             element.addChild(addressing);\n", 
            "         }\n", 
            " \n", 
            "-        if (endpointDefinition.isReliableMessagingOn()) {\n", 
            "-            OMElement rm = fac.createOMElement(\"enableRM\", SynapseConstants.SYNAPSE_OMNAMESPACE);\n", 
            "-\n", 
            "-            if (endpointDefinition.getWsRMPolicyKey() != null) {\n", 
            "-                rm.addAttribute(fac.createOMAttribute(\n", 
            "-                        \"policy\", null, endpointDefinition.getWsRMPolicyKey()));\n", 
            "-            }\n", 
            "-            element.addChild(rm);\n", 
            "-        }\n", 
            "-\n", 
            "         if (endpointDefinition.isSecurityOn()) {\n", 
            "             OMElement sec = fac.createOMElement(\"enableSec\", SynapseConstants.SYNAPSE_OMNAMESPACE);\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/EndpointDefinitionSerializer.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/EndpointDefinitionSerializer.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-209,9 +209,6", 
          "lines": [
            "         if (service.isWsAddrEnabled()) {\n", 
            "             proxy.addChild(fac.createOMElement(\"enableAddressing\", synNS));\n", 
            "         }\n", 
            "-        if (service.isWsRMEnabled()) {\n", 
            "-            proxy.addChild(fac.createOMElement(\"enableRM\", synNS));\n", 
            "-        }\n", 
            "         if (service.isWsSecEnabled()) {\n", 
            "             proxy.addChild(fac.createOMElement(\"enableSec\", synNS));\n", 
            "         }        \n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/ProxyServiceSerializer.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/ProxyServiceSerializer.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-60,7 +60,6", 
          "lines": [
            "         SwitchMediatorFactory.class,\n", 
            "         InMediatorFactory.class,\n", 
            "         OutMediatorFactory.class,\n", 
            "-        RMSequenceMediatorFactory.class,\n", 
            "         ClassMediatorFactory.class,\n", 
            "         ValidateMediatorFactory.class,\n", 
            "         XSLTMediatorFactory.class,\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/MediatorFactoryFinder.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/MediatorFactoryFinder.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-47,7 +47,6", 
          "lines": [
            "         SwitchMediatorSerializer.class,\n", 
            "         InMediatorSerializer.class,\n", 
            "         OutMediatorSerializer.class,\n", 
            "-        RMSequenceMediatorSerializer.class,     \n", 
            "         ClassMediatorSerializer.class,\n", 
            "         ValidateMediatorSerializer.class,\n", 
            "         XSLTMediatorSerializer.class,\n"
          ]
        }, 
        {
          "locn": "-134,7 +133,7", 
          "lines": [
            "     /**\n", 
            "      * This method will return the serializer Map registered with the Finder\n", 
            "      * \n", 
            "-     * @return Map of serilaizers already registered with the Finder\n", 
            "+     * @return Map of serializers already registered with the Finder\n", 
            "      */\n", 
            "     public Map<String, MediatorSerializer> getSerializerMap() {\n", 
            "         return serializerMap;\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/MediatorSerializerFinder.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/MediatorSerializerFinder.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-277,10 +277,6", 
          "lines": [
            "             <artifactId>wso2eventing-api</artifactId>\n", 
            "         </dependency>\n", 
            "         <dependency>\n", 
            "-            <groupId>org.apache.sandesha2</groupId>\n", 
            "-            <artifactId>sandesha2-core</artifactId>\n", 
            "-        </dependency>\n", 
            "-        <dependency>\n", 
            "             <groupId>org.wso2.caching</groupId>\n", 
            "             <artifactId>wso2caching-core</artifactId>\n", 
            "         </dependency>\n"
          ]
        }, 
        {
          "locn": "-331,6 +327,14", 
          "lines": [
            "             <groupId>org.apache.ws.commons.axiom</groupId>\n", 
            "             <artifactId>axiom-dom</artifactId>\n", 
            "         </dependency>\n", 
            "+        <dependency>\n", 
            "+            <groupId>org.apache.neethi</groupId>\n", 
            "+            <artifactId>neethi</artifactId>\n", 
            "+        </dependency>\n", 
            "+        <dependency>\n", 
            "+            <groupId>org.apache.axis2</groupId>\n", 
            "+            <artifactId>axis2-adb</artifactId>\n", 
            "+        </dependency>\n", 
            " \t    <dependency>\n", 
            " \t        <!-- Required for validate mediator tests on JDK 5 -->\n", 
            "             <groupId>xerces</groupId>\n"
          ]
        }
      ], 
      "to": "java/modules/core/pom.xml", 
      "from": "java/modules/core/pom.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-113,13 +113,6", 
          "lines": [
            "                                     <outputDirectory>target/temp/lib</outputDirectory>\n", 
            "                                 </artifactItem>\n", 
            "                                 <artifactItem>\n", 
            "-                                    <groupId>org.apache.sandesha2</groupId>\n", 
            "-                                    <artifactId>sandesha2</artifactId>\n", 
            "-                                    <version>${sandesha2.version}</version>\n", 
            "-                                    <type>mar</type>\n", 
            "-                                    <outputDirectory>target/temp/lib</outputDirectory>\n", 
            "-                                </artifactItem>\n", 
            "-                                <artifactItem>\n", 
            "                                     <groupId>org.apache.rampart</groupId>\n", 
            "                                     <artifactId>rampart</artifactId>\n", 
            "                                     <version>${rampart.version}</version>\n"
          ]
        }, 
        {
          "locn": "-208,7 +201,6", 
          "lines": [
            "                             <includes>\n", 
            "                                 <include>addressing-${addressing.version}.mar</include>\n", 
            "                                 <include>rampart-${rampart.version}.mar</include>\n", 
            "-                                <include>sandesha2-${sandesha2.version}.mar</include>\n", 
            "                             </includes>\n", 
            "                         </resource>\n", 
            "                         <resource>\n"
          ]
        }
      ], 
      "to": "java/modules/war/pom.xml", 
      "from": "java/modules/war/pom.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-300,17 +300,6", 
          "lines": [
            "                                             </outputDirectory>\n", 
            "                                         </artifactItem>\n", 
            "                                         <artifactItem>\n", 
            "-                                            <groupId>org.apache.sandesha2</groupId>\n", 
            "-                                            <artifactId>sandesha2</artifactId>\n", 
            "-                                            <version>${sandesha2.version}</version>\n", 
            "-                                            <type>mar</type>\n", 
            "-                                            <overWrite>true</overWrite>\n", 
            "-                                            <outputDirectory>target/test_repos/axis2Server/modules\n", 
            "-                                            </outputDirectory>\n", 
            "-                                        </artifactItem>\n", 
            "-\n", 
            "-\n", 
            "-                                        <artifactItem>\n", 
            "                                             <groupId>org.apache.axis2</groupId>\n", 
            "                                             <artifactId>addressing</artifactId>\n", 
            "                                             <version>${addressing.version}</version>\n"
          ]
        }, 
        {
          "locn": "-329,15 +318,6", 
          "lines": [
            "                                             </outputDirectory>\n", 
            "                                         </artifactItem>\n", 
            "                                         <artifactItem>\n", 
            "-                                            <groupId>org.apache.sandesha2</groupId>\n", 
            "-                                            <artifactId>sandesha2</artifactId>\n", 
            "-                                            <version>${sandesha2.version}</version>\n", 
            "-                                            <type>mar</type>\n", 
            "-                                            <overWrite>true</overWrite>\n", 
            "-                                            <outputDirectory>target/test_repos/synapse/modules\n", 
            "-                                            </outputDirectory>\n", 
            "-                                        </artifactItem>\n", 
            "-                                        <artifactItem>\n", 
            "                                             <groupId>org.apache.synapse</groupId>\n", 
            "                                             <artifactId>synapse</artifactId>\n", 
            "                                             <version>${synapse.version}</version>\n"
          ]
        }
      ], 
      "to": "java/modules/samples/pom.xml", 
      "from": "java/modules/samples/pom.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-22,7 +22,6", 
          "lines": [
            " import org.apache.axiom.om.OMElement;\n", 
            " import org.apache.axiom.om.OMXMLBuilderFactory;\n", 
            " import org.apache.axiom.soap.SOAP12Constants;\n", 
            "-import org.apache.axiom.util.UIDGenerator;\n", 
            " import org.apache.axis2.Constants;\n", 
            " import org.apache.axis2.addressing.EndpointReference;\n", 
            " import org.apache.axis2.client.Options;\n"
          ]
        }, 
        {
          "locn": "-34,9 +33,6", 
          "lines": [
            " import org.apache.neethi.Policy;\n", 
            " import org.apache.neethi.PolicyEngine;\n", 
            " import org.apache.rampart.RampartMessageData;\n", 
            "-import org.apache.sandesha2.client.SandeshaClientConstants;\n", 
            "-import org.apache.sandesha2.client.SandeshaClient;\n", 
            "-import org.apache.sandesha2.Sandesha2Constants;\n", 
            " import samples.common.StockQuoteHandler;\n", 
            " \n", 
            " import java.io.File;\n"
          ]
        }, 
        {
          "locn": "-117,8 +113,6", 
          "lines": [
            "         String repo = getProperty(\"repository\", \"client_repo\");\n", 
            "         String svcPolicy = getProperty(\"policy\", null);\n", 
            "         String rest = getProperty(\"rest\", null);\n", 
            "-        String wsrm = getProperty(\"wsrm\", null);\n", 
            "-        String wsrm11 = getProperty(\"wsrm11\", null);\n", 
            "         String itr = getProperty(\"itr\", \"1\");\n", 
            "         int iterations = 1;\n", 
            "         boolean infinite = false;\n"
          ]
        }, 
        {
          "locn": "-139,7 +133,7", 
          "lines": [
            " \n", 
            "         double price = 0;\n", 
            "         int quantity = 0;\n", 
            "-        ConfigurationContext configContext = null;\n", 
            "+        ConfigurationContext configContext;\n", 
            " \n", 
            "         Options options = new Options();\n", 
            "         OMElement payload = null;\n"
          ]
        }, 
        {
          "locn": "-212,15 +206,6", 
          "lines": [
            "             System.out.println(\"Sending as REST\");\n", 
            "             options.setProperty(Constants.Configuration.ENABLE_REST, Constants.VALUE_TRUE);\n", 
            "         }\n", 
            "-        if (Boolean.parseBoolean(wsrm) || Boolean.parseBoolean(wsrm11)) {\n", 
            "-            System.out.println(\"Using WS-RM\");\n", 
            "-            serviceClient.engageModule(\"sandesha2\");\n", 
            "-            if (Boolean.parseBoolean(wsrm11)){\n", 
            "-               options.setProperty(SandeshaClientConstants.RM_SPEC_VERSION, Sandesha2Constants.SPEC_VERSIONS.v1_1);\n", 
            "-            }\n", 
            "-            options.setProperty(SandeshaClientConstants.LAST_MESSAGE, Constants.VALUE_TRUE);\n", 
            "-            options.setProperty(SandeshaClientConstants.OFFERED_SEQUENCE_ID, UIDGenerator.generateURNString());\n", 
            "-        }\n", 
            " \n", 
            "         if (\"soap12\".equals(soapVer)) {\n", 
            "             options.setSoapVersionURI(SOAP12Constants. SOAP_ENVELOPE_NAMESPACE_URI);\n"
          ]
        }, 
        {
          "locn": "-246,17 +231,6", 
          "lines": [
            "                 InnerStruct.RESULT = serviceClient.sendReceive(payload);\n", 
            "                 i++;\n", 
            "                 printResult();\n", 
            "-                if (Boolean.parseBoolean(wsrm) || Boolean.parseBoolean(wsrm11)) {\n", 
            "-                    // give some time for RM to terminate normally\n", 
            "-                    if (Boolean.parseBoolean(wsrm11)){\n", 
            "-                        SandeshaClient.terminateSequence(serviceClient);\n", 
            "-                    }\n", 
            "-                    Thread.sleep(5000);\n", 
            "-                    if (configContext != null) {\n", 
            "-                        configContext.getListenerManager().stop();\n", 
            "-                    }\n", 
            "-                    serviceClient.cleanup();\n", 
            "-                }\n", 
            "             }\n", 
            "         }\n", 
            "     }\n"
          ]
        }, 
        {
          "locn": "-280,10 +254,10", 
          "lines": [
            "         }\n", 
            "     }\n", 
            " \n", 
            "-    private static double getRandom(double base, double varience, boolean onlypositive) {\n", 
            "+    private static double getRandom(double base, double variance, boolean onlyPositive) {\n", 
            "         double rand = Math.random();\n", 
            "-        return (base + ((rand > 0.5 ? 1 : -1) * varience * base * rand))\n", 
            "-                * (onlypositive ? 1 : (rand > 0.5 ? 1 : -1));\n", 
            "+        return (base + ((rand > 0.5 ? 1 : -1) * variance * base * rand))\n", 
            "+                * (onlyPositive ? 1 : (rand > 0.5 ? 1 : -1));\n", 
            "     }\n", 
            " \n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/samples/src/main/java/samples/userguide/StockQuoteClient.java", 
      "from": "java/modules/samples/src/main/java/samples/userguide/StockQuoteClient.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-73,7 +73,6", 
          "lines": [
            "                 <p>\n", 
            "                     <ul>\n", 
            "                         <li><a href=\"samples/sample100.html\">Sample 100: Using WS-Security for outgoing messages</a></li>\n", 
            "-                        <li><a href=\"samples/sample101.html\">Sample 101: Using WS-ReliableMessaging for outgoing messages</a></li>\n", 
            "                     </ul>\n", 
            "                 </p>\n", 
            "             </subsection>\n"
          ]
        }, 
        {
          "locn": "-96,7 +95,6", 
          "lines": [
            "                 <p>\n", 
            "                     <ul>\n", 
            "                         <li><a href=\"samples/sample200.html\">Sample 200: Engaging WS-Security on proxy services</a></li>\n", 
            "-                        <li><a href=\"samples/sample201.html\">Sample 201: Reliable communication between the client and proxy services using WS-ReliableMessaging</a></li>\n", 
            "                     </ul>\n", 
            "                 </p>\n", 
            "             </subsection>\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-182,7 +182,6", 
          "lines": [
            "                 <exclude>org.apache.synapse:synapse-documentation:zip:docs</exclude>\r\n", 
            "                 <exclude>org.apache.axis2:addressing:mar</exclude>\r\n", 
            "                 <exclude>org.apache.rampart:rampart:mar</exclude>\r\n", 
            "-                <exclude>org.apache.sandesha2:sandesha2:mar</exclude>\r\n", 
            "                 <exclude>javax.servlet:servlet-api:jar</exclude>\r\n", 
            "                 <exclude>xml-apis:xml-apis:jar</exclude>\r\n", 
            "                 <exclude>xerces:xercesImpl:jar</exclude>\r\n"
          ]
        }, 
        {
          "locn": "-245,7 +244,6", 
          "lines": [
            "             <includes>\r\n", 
            "                 <include>org.apache.axis2:addressing:mar</include>\r\n", 
            "                 <include>org.apache.rampart:rampart:mar</include>\r\n", 
            "-                <include>org.apache.sandesha2:sandesha2:mar</include>\r\n", 
            "             </includes>\r\n", 
            "             <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>\r\n", 
            "         </dependencySet>\r\n"
          ]
        }, 
        {
          "locn": "-256,7 +254,6", 
          "lines": [
            "             <includes>\r\n", 
            "                 <include>org.apache.axis2:addressing:mar</include>\r\n", 
            "                 <include>org.apache.rampart:rampart:mar</include>\r\n", 
            "-                <include>org.apache.sandesha2:sandesha2:mar</include>\r\n", 
            "             </includes>\r\n", 
            "             <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>\r\n", 
            "         </dependencySet>\r\n"
          ]
        }, 
        {
          "locn": "-267,7 +264,6", 
          "lines": [
            "             <includes>\r\n", 
            "                 <include>org.apache.axis2:addressing:mar</include>\r\n", 
            "                 <include>org.apache.rampart:rampart:mar</include>\r\n", 
            "-                <include>org.apache.sandesha2:sandesha2:mar</include>\r\n", 
            "             </includes>\r\n", 
            "             <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>\r\n", 
            "         </dependencySet>\r\n"
          ]
        }
      ], 
      "to": "java/modules/distribution/src/main/assembly/bin.xml", 
      "from": "java/modules/distribution/src/main/assembly/bin.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-194,7 +194,6", 
          "lines": [
            " \n", 
            "         //QoS\n", 
            "         sampleClassRepo.put(\"100\", Sample100.class);\n", 
            "-        sampleClassRepo.put(\"101\", Sample101.class);\n", 
            " \n", 
            "         //Proxy Service\n", 
            "         sampleClassRepo.put(\"150\", Sample150.class);\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-562,6 +562,11", 
          "lines": [
            "                 </exclusions>\n", 
            "                 <type>mar</type>\n", 
            "             </dependency>\n", 
            "+            <dependency>\n", 
            "+                <groupId>org.apache.neethi</groupId>\n", 
            "+                <artifactId>neethi</artifactId>\n", 
            "+                <version>${neethi.version}</version>\n", 
            "+            </dependency>\n", 
            " \n", 
            "             <!-- Apache Axiom -->\n", 
            "             <dependency>\n"
          ]
        }, 
        {
          "locn": "-587,36 +592,6", 
          "lines": [
            "                 <version>${xml_schema.version}</version>\n", 
            "             </dependency>\n", 
            " \n", 
            "-            <!-- Apache Sandesha -->\n", 
            "-            <dependency>\n", 
            "-                <groupId>org.apache.sandesha2</groupId>\n", 
            "-                <artifactId>sandesha2-core</artifactId>\n", 
            "-                <version>${sandesha2.version}</version>\n", 
            "-            </dependency>\n", 
            "-            <dependency>\n", 
            "-                <groupId>org.apache.sandesha2</groupId>\n", 
            "-                <artifactId>sandesha2</artifactId>\n", 
            "-                <version>${sandesha2.version}</version>\n", 
            "-                <exclusions>\n", 
            "-                    <exclusion>\n", 
            "-                        <groupId>org.apache.axis2</groupId>\n", 
            "-                        <artifactId>axis2</artifactId>\n", 
            "-                    </exclusion>\n", 
            "-                </exclusions>\n", 
            "-                <type>mar</type>\n", 
            "-            </dependency>\n", 
            "-            <dependency>\n", 
            "-                <groupId>org.apache.sandesha2</groupId>\n", 
            "-                <artifactId>sandesha2-policy</artifactId>\n", 
            "-                <version>${sandesha2.version}</version>\n", 
            "-                <exclusions>\n", 
            "-                    <exclusion>\n", 
            "-                        <groupId>org.apache.axis2</groupId>\n", 
            "-                        <artifactId>axis2</artifactId>\n", 
            "-                    </exclusion>\n", 
            "-                </exclusions>\n", 
            "-            </dependency>\n", 
            "-\n", 
            "             <!-- Apache Commons -->\n", 
            "             <dependency>\n", 
            "                 <groupId>commons-dbcp</groupId>\n"
          ]
        }, 
        {
          "locn": "-1095,10 +1070,10", 
          "lines": [
            "         <xml_schema.version>1.4.3</xml_schema.version>\n", 
            "         <wsdl4j.version>1.6.2</wsdl4j.version>\n", 
            " \n", 
            "-        <!-- addressing, rampart -->\n", 
            "+        <!-- addressing, rampart, neethi -->\n", 
            "         <addressing.version>${axis2.version}</addressing.version>\n", 
            "         <rampart.version>1.7.0-SNAPSHOT</rampart.version>\n", 
            "-        <sandesha2.version>1.7.0-SNAPSHOT</sandesha2.version>\n", 
            "+        <neethi.version>3.0.3-SNAPSHOT</neethi.version>\n", 
            "         <jruby.version>1.3.0</jruby.version>\n", 
            "         <bcprov.jdk15.version>140</bcprov.jdk15.version>\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/pom.xml", 
      "from": "java/pom.xml"
    }
  ], 
  "id": "1531437"
}