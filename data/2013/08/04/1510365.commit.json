{
  "when": "2013-08-04T22:47:13-04:00", 
  "message": "Added a serialization test case for APIs with handlers", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-115,7 +115,7", 
          "lines": [
            "         assertTrue(!observer.tracker.get(type).contains(name));\n", 
            "     }\n", 
            " \n", 
            "-    private class SimpleSynapseObserver implements SynapseObserver {\n", 
            "+    private class SimpleSynapseObserver extends AbstractSynapseObserver {\n", 
            " \n", 
            "         private Map<Integer, Set<String>> tracker = new HashMap<Integer, Set<String>>();\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/core/src/test/java/org/apache/synapse/config/SynapseObserverTest.java", 
      "from": "java/modules/core/src/test/java/org/apache/synapse/config/SynapseObserverTest.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-78,4 +78,19", 
          "lines": [
            "         OMElement out = APISerializer.serializeAPI(api);\n", 
            "         assertXMLEqual(xml, out.toString());\n", 
            "     }\n", 
            "+\n", 
            "+    public void testAPISerialization6() throws Exception {\n", 
            "+        String xml = \"<api name=\\\"test\\\" context=\\\"/dictionary\\\" hostname=\\\"apache.org\\\" port=\\\"8243\\\"\" +\n", 
            "+                \" xmlns=\\\"http://ws.apache.org/ns/synapse\\\"><resource url-mapping=\\\"/admin/view/*\\\" \" +\n", 
            "+                \"><inSequence><log/><send/></inSequence><outSequence><log/><send/></outSequence></resource>\" +\n", 
            "+                \"<resource url-mapping=\\\"/admin/*\\\"><inSequence><log/><send/></inSequence><outSequence>\" +\n", 
            "+                \"<log/><send/></outSequence></resource><resource uri-template=\\\"/{char}/{word}\\\">\" +\n", 
            "+                \"<inSequence><send/></inSequence><faultSequence><log level=\\\"full\\\"/></faultSequence>\" +\n", 
            "+                \"</resource><handlers><handler class=\\\"org.apache.synapse.config.xml.rest.TestHandler\\\"/>\" +\n", 
            "+                \"</handlers></api>\";\n", 
            "+        OMElement om = AXIOMUtil.stringToOM(xml);\n", 
            "+        API api = APIFactory.createAPI(om);\n", 
            "+        OMElement out = APISerializer.serializeAPI(api);\n", 
            "+        assertXMLEqual(xml, out.toString());\n", 
            "+    }\n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/test/java/org/apache/synapse/config/xml/rest/APISerializationTest.java", 
      "from": "java/modules/core/src/test/java/org/apache/synapse/config/xml/rest/APISerializationTest.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,34", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+\n", 
            "+package org.apache.synapse.config.xml.rest;\n", 
            "+\n", 
            "+import org.apache.synapse.MessageContext;\n", 
            "+import org.apache.synapse.rest.Handler;\n", 
            "+\n", 
            "+public class TestHandler implements Handler {\n", 
            "+\n", 
            "+    public boolean handleRequest(MessageContext messageContext) {\n", 
            "+        return true;\n", 
            "+    }\n", 
            "+\n", 
            "+    public boolean handleResponse(MessageContext messageContext) {\n", 
            "+        return true;\n", 
            "+    }\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/test/java/org/apache/synapse/config/xml/rest/TestHandler.java", 
      "from": "java/modules/core/src/test/java/org/apache/synapse/config/xml/rest/TestHandler.java"
    }
  ], 
  "id": "1510365"
}