{
  "when": "2013-07-18T14:25:03-04:00", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-288,35 +288,40", 
          "lines": [
            "                         if (entry.getMoveAfterMoveFailure() != null) {\n", 
            "                             isFailedRecord = isFailedRecord(child, entry);\n", 
            "                         }\n", 
            "-                        if (log.isDebugEnabled()) {\n", 
            "-                            log.debug(\"Matching file : \" + child.getName().getBaseName());\n", 
            "-                        }\n", 
            "-                        if ((entry.getFileNamePattern() != null) && (\n", 
            "-                                child.getName().getBaseName().matches(entry.getFileNamePattern()))\n", 
            "-                                && (!entry.isFileLockingEnabled() || (entry.isFileLockingEnabled()\n", 
            "-                                && VFSUtils.acquireLock(fsManager, child))) &&\n", 
            "-                                !isFailedRecord) {\n", 
            "-                            try {\n", 
            "-                                if (log.isDebugEnabled()) {\n", 
            "-                                    log.debug(\"Processing file :\" + child);\n", 
            "-                                }\n", 
            "-                                processFile(entry, child);\n", 
            "-                                successCount++;\n", 
            "-                                // tell moveOrDeleteAfterProcessing() file was success\n", 
            "-                                entry.setLastPollState(PollTableEntry.SUCCSESSFUL);\n", 
            "-                                metrics.incrementMessagesReceived();\n", 
            " \n", 
            "-                            } catch (Exception e) {\n", 
            "-                                logException(\"Error processing File URI : \" + child.getName(), e);\n", 
            "-                                failCount++;\n", 
            "-                                // tell moveOrDeleteAfterProcessing() file failed\n", 
            "-                                entry.setLastPollState(PollTableEntry.FAILED);\n", 
            "-                                metrics.incrementFaultsReceiving();\n", 
            "+                        if (entry.getFileNamePattern() != null &&\n", 
            "+                                child.getName().getBaseName().matches(entry.getFileNamePattern())){\n", 
            "+                            //child's file name matches the file name pattern\n", 
            "+                            //now we try to get the lock and process\n", 
            "+                            if (log.isDebugEnabled()) {\n", 
            "+                                log.debug(\"Matching file : \" + child.getName().getBaseName());\n", 
            "                             }\n", 
            " \n", 
            "-                              try {\n", 
            "+                            if ((!entry.isFileLockingEnabled()\n", 
            "+                                    || (entry.isFileLockingEnabled() && VFSUtils.acquireLock(fsManager, child)))\n", 
            "+                                    && !isFailedRecord){\n", 
            "+                                //process the file\n", 
            "+                                try {\n", 
            "+                                    if (log.isDebugEnabled()) {\n", 
            "+                                        log.debug(\"Processing file :\" + child);\n", 
            "+                                    }\n", 
            "+                                    processFile(entry, child);\n", 
            "+                                    successCount++;\n", 
            "+                                    // tell moveOrDeleteAfterProcessing() file was success\n", 
            "+                                    entry.setLastPollState(PollTableEntry.SUCCSESSFUL);\n", 
            "+                                    metrics.incrementMessagesReceived();\n", 
            "+\n", 
            "+                                } catch (Exception e) {\n", 
            "+                                    logException(\"Error processing File URI : \" + child.getName(), e);\n", 
            "+                                    failCount++;\n", 
            "+                                    // tell moveOrDeleteAfterProcessing() file failed\n", 
            "+                                    entry.setLastPollState(PollTableEntry.FAILED);\n", 
            "+                                    metrics.incrementFaultsReceiving();\n", 
            "+                                }\n", 
            "+\n", 
            "+                                try {\n", 
            "                                     moveOrDeleteAfterProcessing(entry, child);\n", 
            "-                              } catch (AxisFault axisFault) {\n", 
            "+                                } catch (AxisFault axisFault) {\n", 
            "                                     logException(\"File object '\" + child.getURL().toString() +\n", 
            "                                             \"'cloud not be moved\", axisFault);\n", 
            "                                     failCount++;\n"
          ]
        }, 
        {
          "locn": "-324,17 +329,22", 
          "lines": [
            "                                     String timeStamp =\n", 
            "                                             VFSUtils.getSystemTime(entry.getFailedRecordTimestampFormat());\n", 
            "                                     addFailedRecord(entry, child, timeStamp);\n", 
            "-                              }\n", 
            "-                              if (entry.isFileLockingEnabled()) {\n", 
            "-                                VFSUtils.releaseLock(fsManager, child);\n", 
            "+                                } finally {\n", 
            "+                                    // if there is a failure or not we'll try to release the lock\n", 
            "+                                    if (entry.isFileLockingEnabled()) {\n", 
            "+                                        VFSUtils.releaseLock(fsManager, child);\n", 
            "+                                    }\n", 
            "+                                }\n", 
            "                             }\n", 
            "-                        } else if (!(!entry.isFileLockingEnabled() || (entry.isFileLockingEnabled()\n", 
            "-                                && VFSUtils.acquireLock(fsManager, fileObject))) &&\n", 
            "-                                log.isDebugEnabled()) {\n", 
            "-                            log.debug(\"Couldn't get the lock for processing the file : \"\n", 
            "-                                    + child.getName());\n", 
            "+                        } else if (entry.getFileNamePattern()!= null &&\n", 
            "+                                !child.getName().getBaseName().matches(entry.getFileNamePattern())){\n", 
            "+                            //child's file name does not match the file name pattern\n", 
            "+                            if (log.isDebugEnabled()) {\n", 
            "+                                log.debug(\"Non-Matching file : \" + child.getName().getBaseName());\n", 
            "+                            }\n", 
            "                         } else if(isFailedRecord){\n", 
            "-                              if (entry.isFileLockingEnabled()) {\n", 
            "+                            //it is a failed record\n", 
            "+                            if (entry.isFileLockingEnabled()) {\n", 
            "                                 VFSUtils.releaseLock(fsManager, child);\n", 
            "                                 VFSUtils.releaseLock(fsManager, fileObject);\n", 
            "                             }\n"
          ]
        }, 
        {
          "locn": "-348,7 +358,6", 
          "lines": [
            "                                         \"process\");\n", 
            "                             }\n", 
            "                         }\n", 
            "-\n", 
            "                     }\n", 
            " \n", 
            "                     if (failCount == 0 && successCount > 0) {\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportListener.java", 
      "from": "java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportListener.java"
    }
  ], 
  "id": "1504582"
}