{
  "when": "2013-08-12T02:48:54-04:00", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-244,7 +244,6", 
          "lines": [
            "         }\n", 
            "     }\n", 
            " \n", 
            "-\n", 
            "     public InvocationResponse invoke(MessageContext msgContext) throws AxisFault {\n", 
            "         // remove unwanted HTTP headers (if any from the current message)\n", 
            "         PassThroughTransportUtils.removeUnwantedHeaders(msgContext,\n"
          ]
        }, 
        {
          "locn": "-390,17 +389,16", 
          "lines": [
            "                             msgContext);\n", 
            " \t\t\t\t\tOMOutputFormat format = PassThroughTransportUtils.getOMOutputFormat(msgContext);\n", 
            " \t\t\t\t\tformatter.writeTo(msgContext, format, _out, false);\n", 
            "-\t\t\t\t\ttry {\n", 
            "-                        long messageSize = setStreamAsTempData(formatter,msgContext,format);\n", 
            "+                    try {\n", 
            "+                        long messageSize = setStreamAsTempData(formatter, msgContext, format);\n", 
            "                         msgContext.setProperty(\n", 
            "                                 PassThroughConstants.PASS_THROUGH_MESSAGE_LENGTH, messageSize);\n", 
            "                         formatter.writeTo(msgContext, format, out, false);\n", 
            "                     } catch (IOException e) {\n", 
            "-                    \t handleException(\"IO error while building message\", e);\n", 
            "+                    \t handleException(\"I/O error while serializing message\", e);\n", 
            "                     }\n", 
            "                 \tpipe.setSerializationComplete(true);\n", 
            " \t\t\t\t} else {\n", 
            "-\t\t\t\t\t\n", 
            " \t\t\t\t\tif ((disableChunking == null || !\"true\".equals(disableChunking)) ||\n", 
            " \t\t\t\t\t    (forceHttp10 == null || !\"true\".equals(forceHttp10))) {\n", 
            " \t\t\t\t\t\tMessageFormatter formatter =  MessageProcessorSelector.getMessageFormatter(\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpSender.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpSender.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-264,7 +264,10", 
          "lines": [
            "     }\n", 
            " \n", 
            "     public void destroy() {\n", 
            "-        log.info(\"Destroying pass-through \" + namePrefix + \" listener\");\n", 
            "+        if (log.isDebugEnabled()) {\n", 
            "+            log.debug(\"Destroying pass-through \" + namePrefix + \" listener\");\n", 
            "+        }\n", 
            "+        ioReactor = null;\n", 
            "         sourceConfiguration.getConfigurationContext().\n", 
            "                 getAxisConfiguration().getObserversList().remove(axisObserver);\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpListener.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpListener.java"
    }
  ], 
  "id": "1513052"
}