{
  "when": "2011-12-20T05:31:15-05:00", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-297,6 +297,160", 
          "lines": [
            "                     interface to suit the actual registry being used.\n", 
            "                 </p>\n", 
            "             </subsection>\n", 
            "+            <subsection name=\"APIs\">\n", 
            "+                <p>\n", 
            "+                    An API is similar to a web application deployed in Synapse. It provides a\n", 
            "+                    convenient approach for filtering and processing HTTP traffic (specially RESTful\n", 
            "+                    invocations) through the service bus.  Each API is anchored at a user defined\n", 
            "+                    URL context (eg: /ws) and can handle all the HTTP requests that\n", 
            "+                    fall within that context. Each API is also comprised of one or more resources.\n", 
            "+                    Resources contain the mediation logic for processing requests and responses.\n", 
            "+                    Resources can also be associated with a set of HTTP methods and header values.\n", 
            "+                    For an example one may define an API with two resources, where one resources is\n", 
            "+                    used to handle GET requests and the other is used to handle POST requests.\n", 
            "+                    Similarly an API can be defined with separate resources for handling XML and JSON\n", 
            "+                    content (by looking at the Content-type HTTP header).\n", 
            "+                </p>\n", 
            "+                <p>\n", 
            "+                    Resources bare a strong resemblance to proxy services. Similar to proxy services,\n", 
            "+                    a resource can also define an 'in sequence', an 'out sequence' and a 'fault\n", 
            "+                    sequence'. Just like in the case of proxy services, the 'in sequence' is used\n", 
            "+                    to process incoming requests and the 'out sequence' is used to mediate responses.\n", 
            "+                </p>\n", 
            "+                <p>\n", 
            "+                    APIs provide a powerful framework using which comprehensive REST APIs can be\n", 
            "+                    constructed on existing systems. For an example a set of SOAP services can be\n", 
            "+                    hidden behind an API defined in Synapse. Clients can access the API in Synapse\n", 
            "+                    by making pure RESTful invocations over HTTP. Synapse takes care of transforming\n", 
            "+                    the requests and routing them to appropriate back-end services which may or may\n", 
            "+                    not be based on REST.\n", 
            "+                </p>\n", 
            "+            </subsection>\n", 
            "         </section>\n", 
            "+        <section name=\"Synapse Configuration Files\">\n", 
            "+            <p>\n", 
            "+                All the XML files pertaining to the Synapse configuration are available in the\n", 
            "+                repository/conf/synapse-config directory of the Synapse installation. This file\n", 
            "+                hierarchy consists of two files named synapse.xml and registry.xml. In addition to\n", 
            "+                that, following sub-directories can be found in the synapse-config directory.\n", 
            "+            </p>\n", 
            "+            <ul>\n", 
            "+                <li>api</li>\n", 
            "+                <li>endpoints</li>\n", 
            "+                <li>events</li>\n", 
            "+                <li>local-entries</li>\n", 
            "+                <li>priority-executors</li>\n", 
            "+                <li>proxy-services</li>\n", 
            "+                <li>sequences</li>\n", 
            "+                <li>tasks</li>\n", 
            "+                <li>templates</li>\n", 
            "+            </ul>\n", 
            "+            <p>\n", 
            "+                Each of these sub-directories can contain zero or more configuration items. For\n", 
            "+                an example the 'endpoints' directory may contain zero or more endpoint definitions\n", 
            "+                and the 'sequences' directory may contain zero or more sequence definitions. The\n", 
            "+                registry adapter is defined in the top level registry.xml file. The synapse.xml file\n", 
            "+                is there mainly for backward compatibility reasons. It can be used to define any\n", 
            "+                type of configuration items. One may define few endpoints in the 'endpoints' directory\n", 
            "+                and a few endpoints in the synapse.xml file. However it is recommended to stick to\n", 
            "+                a single, consistent way of defining configuration elements. So you should either\n", 
            "+                define everything in synapse.xml file, or not use it at all.\n", 
            "+            </p>\n", 
            "+            <p>\n", 
            "+                The following tree diagram shows the high-level view of the resulting file\n", 
            "+                hierarchy.\n", 
            "+            </p>\n", 
            "+            <div class=\"consoleOutput\">synapse-config\n", 
            "+            |-- api\n", 
            "+            |-- endpoints\n", 
            "+            |   `-- foo.xml\n", 
            "+            |-- events\n", 
            "+            |   `-- event1.xml\n", 
            "+            |-- local-entries\n", 
            "+            |   `-- bar.xml\n", 
            "+            |-- priority-executors\n", 
            "+            |-- proxy-services\n", 
            "+            |   |-- proxy1.xml\n", 
            "+            |   |-- proxy2.xml\n", 
            "+            |   `-- proxy3.xml\n", 
            "+            |-- registry.xml\n", 
            "+            |-- sequences\n", 
            "+            |   |-- custom-logger.xml\n", 
            "+            |   |-- fault.xml\n", 
            "+            |   `-- main.xml\n", 
            "+            |-- synapse.xml\n", 
            "+            |-- tasks\n", 
            "+            |   `-- task1.xml</div>\n", 
            "+            `-- templates\n", 
            "+        </section>\n", 
            "+        <section name=\"Configuration Syntax\">\n", 
            "+            <p>\n", 
            "+                As stated earlier, the synapse.xml file can be used to define all kinds of artifacts.\n", 
            "+                All these different configuration items should be wrapped in a top level 'definitions'\n", 
            "+                element. A configuration defined in the synapse.xml file looks like this at the\n", 
            "+                high level.\n", 
            "+            </p>\n", 
            "+            <div class=\"xmlConf\">&lt;definitions&gt;\n", 
            "+   &lt;<a href=\"#registry\">registry</a> provider=\"string\"&gt;...&lt;/registry&gt;?\n", 
            "+   &lt;<a href=\"#localEntry\">localEntry</a> key=\"string\"&gt;...&lt;/localEntry&gt;?\n", 
            "+   &lt;<a href=\"#sequence\">sequence</a> name=\"string\"&gt;...&lt;/sequence&gt;?\n", 
            "+   &lt;<a href=\"#endpoint\">endpoint</a> name=\"string\"&gt;...&lt;/endpoint&gt;?\n", 
            "+   &lt;<a href=\"#proxy\">proxy</a> name=\"string\" ...&gt;...&lt;/proxy&gt;?\n", 
            "+   &lt;<a href=\"#task\">task</a> name=\"string\" ...&gt;...&lt;/task&gt;?\n", 
            "+   &lt;<a href=\"#eventsource\">eventSource</a> name=\"string\" ...&gt;...&lt;/eventSource&gt;?\n", 
            "+   &lt;<a href=\"#executor\">executor</a> name=\"string\" ...&gt;...&lt;/executor&gt;?\n", 
            "+   &lt;<a href=\"#store\">messageStore</a> name=\"string\" ...&gt;...&lt;/messageStore&gt;?\n", 
            "+&lt;/definitions&gt;</div>\n", 
            "+            <p>\n", 
            "+                The registry adapter definition is defined under the &lt;registry&gt; element. Similarly\n", 
            "+                &lt;endpoint&gt;, &lt;sequence&gt;, &lt;proxy&gt;, &lt;localEntry&gt;, &lt;eventSource\n", 
            "+                and &lt;executor&gt; elements are used to define other functional components.\n", 
            "+            </p>\n", 
            "+            <p>\n", 
            "+                As pointed out earlier, the synapse.xml file is there in the synapse-config directory\n", 
            "+                for backwards compatibility reasons. Any artifact defined in this file can be\n", 
            "+                defined separately in its own XML file. The registry can be defined in the registry.xml\n", 
            "+                and other artifacts can be defined in the corresponding sub-directories of the synapse-config\n", 
            "+                directory. However the XML syntax used to configure these artifacts are always the same.\n", 
            "+                Next few sections of this document explains the XML syntax for defining various\n", 
            "+                types of components in the Synapse configuration.\n", 
            "+            </p>\n", 
            "+        </section>\n", 
            "+        <section name=\"Registry\" id=\"registry\">\n", 
            "+            <p>\n", 
            "+                The &lt;registry&gt; element is used to define the registry adapter used by the\n", 
            "+                Synapse runtime. The registry provider specifies an implementation class for the\n", 
            "+                registry being used, and optionally a number of configuration parameters as may be\n", 
            "+                required by the particular registry implementation. An outline configuration is given\n", 
            "+                below.\n", 
            "+            </p>\n", 
            "+            <div class=\"xmlConf\">&lt;registry provider=\"string\"/&gt;\n", 
            "+    &lt;parameter name=\"string\"&gt;text | xml&lt;/parameter&gt;*\n", 
            "+&lt;/registry&gt;</div>\n", 
            "+            <p>\n", 
            "+                Registry entries loaded from a remote registry may be cached as governed by the\n", 
            "+                registry, and reloaded after the cache periods expires if a newer version is found.\n", 
            "+                Hence it is possible to define configuration elements such as (dynamic) sequences and\n", 
            "+                endpoints, as well as resources such as XSLT's, scripts or XSDs in the registry, and\n", 
            "+                update the configuration as these are allowed to dynamically change over time.\n", 
            "+            </p>\n", 
            "+            <p>\n", 
            "+                Synapse ships with a built-in URL based registry implementation called the\n", 
            "+                'SimpleURLRegistry' and this can be configured as follows:\n", 
            "+            </p>\n", 
            "+            <div class=\"xmlConf\">&lt;registry provider=\"org.apache.synapse.registry.url.SimpleURLRegistry\"&gt;\n", 
            "+  &lt;parameter name=\"root\"&gt;file:./repository/conf/sample/resources/&lt;/parameter&gt;\n", 
            "+  &lt;parameter name=\"cachableDuration\"&gt;15000&lt;/parameter&gt;\n", 
            "+&lt;/registry&gt;</div>\n", 
            "+            <p>\n", 
            "+                The 'root' parameter specifies the root URL of the registry for loaded resources. The\n", 
            "+                SimpleURLRegistry keys are path fragments, that when combined with the root prefix\n", 
            "+                would form the full URL for the referenced resource. The 'cachableDuration' parameter\n", 
            "+                specifies the number of milliseconds for which resources loaded from the registry\n", 
            "+                should be cached. More advanced registry implementations allows different cachable\n", 
            "+                durations to be specified for different resources, or mark some resources as never\n", 
            "+                expires. (e.g. Check the WSO2 ESB implementation based on Apache Synapse)\n", 
            "+            </p>\n", 
            "+        </section>\n", 
            "     </body>\n", 
            " </document>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "scratch/hiranya/website/src/site/xdoc/userguide/config.xml", 
      "from": "scratch/hiranya/website/src/site/xdoc/userguide/config.xml"
    }
  ], 
  "id": "1221190"
}