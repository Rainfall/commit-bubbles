{
  "when": "2013-07-16T17:04:58-04:00", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-18,7 +18,9", 
          "lines": [
            "  */\n", 
            " package org.apache.synapse.core.axis2;\n", 
            " \n", 
            "+import org.apache.axiom.util.UIDGenerator;\n", 
            " import org.apache.axis2.context.ConfigurationContext;\n", 
            "+import org.apache.axis2.context.MessageContext;\n", 
            " import org.apache.axis2.transport.http.AxisServlet;\n", 
            " import org.apache.axis2.transport.http.ListingAgent;\n", 
            " import org.apache.synapse.ServerManager;\n"
          ]
        }, 
        {
          "locn": "-27,6 +29,8", 
          "lines": [
            " import javax.servlet.ServletContext;\n", 
            " import javax.servlet.ServletException;\n", 
            " import javax.servlet.http.HttpServletRequest;\n", 
            "+import javax.servlet.http.HttpServletResponse;\n", 
            "+import java.io.IOException;\n", 
            " \n", 
            " /**\n", 
            "  * Extends axis2 servlet functionality so that  avoid  starting listeners again\n"
          ]
        }, 
        {
          "locn": "-59,4 +63,21", 
          "lines": [
            "     public void initContextRoot(HttpServletRequest req) {\n", 
            "         this.configContext.setContextRoot(\"/\");\n", 
            "     }\n", 
            "+\n", 
            "+    /**\n", 
            "+     * The Axis servlet does not generate a messageId for a new MessageContext. This is needed\n", 
            "+     * at least by the Clone and IterateMediator in order to generate correlationIds that can be\n", 
            "+     * picked up by the AggregateMediator (when no correlation expression is provided).\n", 
            "+     *\n", 
            "+     * @see org.apache.axis2.transport.http.AxisServlet#createMessageContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean)\n", 
            "+     */\n", 
            "+    protected MessageContext createMessageContext(HttpServletRequest request,\n", 
            "+                                                  HttpServletResponse response,\n", 
            "+                                                  boolean invocationType) throws IOException {\n", 
            "+    \tMessageContext msgCtx = super.createMessageContext(request, response, invocationType);\n", 
            "+        // Set a message ID as Axis2 doesn't seem to set one.\n", 
            "+        // Message ID is required for certain Synapse mediators.\n", 
            "+    \tmsgCtx.setMessageID(UIDGenerator.generateURNString());\n", 
            "+    \treturn msgCtx;\n", 
            "+    }\n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseAxisServlet.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseAxisServlet.java"
    }
  ], 
  "id": "1503887"
}