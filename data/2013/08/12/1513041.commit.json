{
  "when": "2013-08-12T01:28:55-04:00", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-26,86 +26,40", 
          "lines": [
            " \n", 
            " public class Sample53 extends SynapseTestCase {\n", 
            " \n", 
            "-    private SampleClientResult result;\n", 
            "-    private String addUrl;\n", 
            "-\n", 
            "     public Sample53() {\n", 
            "         super(53);\n", 
            "     }\n", 
            " \n", 
            "-\n", 
            "     public void testFailOver() {\n", 
            "         String expectedError = \"COULDN'T SEND THE MESSAGE TO THE SERVER\";\n", 
            "-        addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "+        String addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "         log.info(\"Running test: Failover sending among 3 endpoints\");\n", 
            "         final StockQuoteSampleClient client = getStockQuoteClient();\n", 
            " \n", 
            "         // Send some messages and check\n", 
            "-        Thread t = new Thread(new Runnable() {\n", 
            "-            public void run() {\n", 
            "-                result = client.sessionlessClient(addUrl, null, 10);\n", 
            "-            }\n", 
            "-        });\n", 
            "-        t.start();\n", 
            "-        try {\n", 
            "-            t.join();\n", 
            "-        } catch (InterruptedException e) {\n", 
            "-\n", 
            "-        }\n", 
            "+        SampleClientResult result = client.sessionlessClient(addUrl, null, 10);\n", 
            "         assertResponseReceived(result);\n", 
            " \n", 
            "         // Stop BE server 1\n", 
            "         getBackendServerControllers().get(0).stopProcess();\n", 
            "-        try {\n", 
            "-            Thread.sleep(2000);\n", 
            "-        } catch (InterruptedException e) {\n", 
            "+        sleep(2000);\n", 
            " \n", 
            "-        }\n", 
            "-\n", 
            "         // Send another burst of messages and check\n", 
            "-        t = new Thread(new Runnable() {\n", 
            "-            public void run() {\n", 
            "-                result = client.sessionlessClient(addUrl, null, 10);\n", 
            "-            }\n", 
            "-        });\n", 
            "-        t.start();\n", 
            "-        try {\n", 
            "-            t.join();\n", 
            "-        } catch (InterruptedException e) {\n", 
            "-\n", 
            "-        }\n", 
            "+        result = client.sessionlessClient(addUrl, null, 10);\n", 
            "         assertResponseReceived(result);\n", 
            " \n", 
            "         // Stop BE server 2\n", 
            "         getBackendServerControllers().get(1).stopProcess();\n", 
            "-        try {\n", 
            "-            Thread.sleep(2000);\n", 
            "-        } catch (InterruptedException e) {\n", 
            "+        sleep(2000);\n", 
            " \n", 
            "-        }\n", 
            "-\n", 
            "         // Send some more messages and check\n", 
            "-        t = new Thread(new Runnable() {\n", 
            "-            public void run() {\n", 
            "-                result = client.sessionlessClient(addUrl, null, 10);\n", 
            "-            }\n", 
            "-        });\n", 
            "-        t.start();\n", 
            "-        try {\n", 
            "-            t.join();\n", 
            "-        } catch (InterruptedException e) {\n", 
            "-\n", 
            "-        }\n", 
            "+        result = client.sessionlessClient(addUrl, null, 10);\n", 
            "         assertResponseReceived(result);\n", 
            " \n", 
            "         // Stop BE server 3\n", 
            "         getBackendServerControllers().get(2).stopProcess();\n", 
            "-        try {\n", 
            "-            Thread.sleep(2000);\n", 
            "-        } catch (InterruptedException e) {\n", 
            "+        sleep(2000);\n", 
            " \n", 
            "-        }\n", 
            "-\n", 
            "         // Send another message - Should fail\n", 
            "         result = client.sessionlessClient(addUrl, null, 1);\n", 
            "         Exception resultEx = result.getException();\n"
          ]
        }, 
        {
          "locn": "-115,4 +69,11", 
          "lines": [
            "         assertTrue(\"Did not receive expected error\", resultEx.getMessage().contains(expectedError));\n", 
            "     }\n", 
            " \n", 
            "+    private void sleep(long millis) {\n", 
            "+        try {\n", 
            "+            Thread.sleep(millis);\n", 
            "+        } catch (InterruptedException ignored) {\n", 
            "+        }\n", 
            "+    }\n", 
            "+\n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample53.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample53.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-183,6 +183,7", 
          "lines": [
            "             log.info(\"Shutting down Axis2 server...\");\n", 
            "             try {\n", 
            "                 listenerManager.stop();\n", 
            "+                listenerManager.destroy();\n", 
            "                 configContext.terminate();\n", 
            "             } catch (Exception e) {\n", 
            "                 log.warn(\"Error while shutting down Axis2 server\", e);\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/Axis2BackEndServerController.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/Axis2BackEndServerController.java"
    }
  ], 
  "id": "1513041"
}