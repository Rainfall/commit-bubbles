{
  "when": "2013-09-16T14:34:53-04:00", 
  "who": "veithen", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-242,41 +242,9", 
          "lines": [
            "      * @return cloned SOAPEnvelope from the provided one\n", 
            "      */\n", 
            "     public static SOAPEnvelope cloneSOAPEnvelope(SOAPEnvelope envelope) {\n", 
            "-        SOAPFactory fac;\n", 
            "-        if (SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI\n", 
            "-                .equals(envelope.getBody().getNamespace().getNamespaceURI())) {\n", 
            "-            fac = OMAbstractFactory.getSOAP11Factory();\n", 
            "-        } else {\n", 
            "-            fac = OMAbstractFactory.getSOAP12Factory();\n", 
            "-        }\n", 
            "-        SOAPEnvelope newEnvelope = fac.getDefaultEnvelope();\n", 
            "-\n", 
            "-        if (envelope.getHeader() != null) {\n", 
            "-            Iterator itr = envelope.getHeader().cloneOMElement().getChildren();\n", 
            "-            while (itr.hasNext()) {\n", 
            "-                OMNode node = (OMNode) itr.next();\n", 
            "-                itr.remove();\n", 
            "-                newEnvelope.getHeader().addChild(node);\n", 
            "-            }\n", 
            "-        }\n", 
            "-\n", 
            "-        if (envelope.getBody() != null) {\n", 
            "-            // treat the SOAPFault cloning as a special case otherwise a cloning OMElement as the\n", 
            "-            // fault would lead to class cast exceptions if accessed through the getFault method\n", 
            "-            if (envelope.getBody().hasFault()) {\n", 
            "-                SOAPFault fault = envelope.getBody().getFault();\n", 
            "-                newEnvelope.getBody().addFault(cloneSOAPFault(fault));\n", 
            "-            } else {\n", 
            "-                Iterator itr = envelope.getBody().cloneOMElement().getChildren();\n", 
            "-                while (itr.hasNext()) {\n", 
            "-                    OMNode node = (OMNode) itr.next();\n", 
            "-                    itr.remove();\n", 
            "-                    newEnvelope.getBody().addChild(node);\n", 
            "-                }\n", 
            "-            }\n", 
            "-        }\n", 
            "-\n", 
            "-        return newEnvelope;\n", 
            "+        OMCloneOptions options = new OMCloneOptions();\n", 
            "+        options.setPreserveModel(true);\n", 
            "+        return (SOAPEnvelope)envelope.clone(options);\n", 
            "     }\n", 
            " \n", 
            "     /**\n"
          ]
        }, 
        {
          "locn": "-392,75 +360,6", 
          "lines": [
            "     }\n", 
            " \n", 
            "     /**\n", 
            "-     * Clones the SOAPFault, fault cloning is not the same as cloning the OMElement because if the\n", 
            "-     * Fault is accessed through the SOAPEnvelope.getBody().getFault() method it will lead to a\n", 
            "-     * class cast because the cloned element is just an OMElement but not a Fault.\n", 
            "-     * \n", 
            "-     * @param fault that needs to be cloned\n", 
            "-     * @return the cloned fault\n", 
            "-     */\n", 
            "-    public static SOAPFault cloneSOAPFault(SOAPFault fault) {\n", 
            "-\n", 
            "-        SOAPFactory fac;\n", 
            "-        int soapVersion;\n", 
            "-        final int SOAP_11 = 1;\n", 
            "-        final int SOAP_12 = 2;\n", 
            "-        if (SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI\n", 
            "-                .equals(fault.getNamespace().getNamespaceURI())) {\n", 
            "-            fac = OMAbstractFactory.getSOAP11Factory();\n", 
            "-            soapVersion = SOAP_11;\n", 
            "-        } else {\n", 
            "-            fac = OMAbstractFactory.getSOAP12Factory();\n", 
            "-            soapVersion = SOAP_12;\n", 
            "-        }\n", 
            "-        SOAPFault newFault = fac.createSOAPFault();\n", 
            "-\n", 
            "-        SOAPFaultCode code = fac.createSOAPFaultCode();\n", 
            "-        SOAPFaultReason reason = fac.createSOAPFaultReason();\n", 
            "-\n", 
            "-        switch (soapVersion) {\n", 
            "-            case SOAP_11:\n", 
            "-                code.setText(fault.getCode().getTextAsQName());\n", 
            "-                reason.setText(fault.getReason().getText());\n", 
            "-                break;\n", 
            "-            case SOAP_12:\n", 
            "-                SOAPFaultValue value = fac.createSOAPFaultValue(code);\n", 
            "-                value.setText(fault.getCode().getTextAsQName());\n", 
            "-                for (Object obj : fault.getReason().getAllSoapTexts()) {\n", 
            "-                    SOAPFaultText text = fac.createSOAPFaultText();\n", 
            "-                    text.setText(((SOAPFaultText) obj).getText());\n", 
            "-                    reason.addSOAPText(text);\n", 
            "-                }\n", 
            "-                break;\n", 
            "-        }\n", 
            "-\n", 
            "-        newFault.setCode(code);\n", 
            "-        newFault.setReason(reason);\n", 
            "-\n", 
            "-        if (fault.getNode() != null) {\n", 
            "-            SOAPFaultNode soapfaultNode = fac.createSOAPFaultNode();\n", 
            "-            soapfaultNode.setNodeValue(fault.getNode().getNodeValue());\n", 
            "-            newFault.setNode(soapfaultNode);\n", 
            "-        }\n", 
            "-\n", 
            "-        if (fault.getRole() != null) {\n", 
            "-            SOAPFaultRole soapFaultRole = fac.createSOAPFaultRole();\n", 
            "-            soapFaultRole.setRoleValue(fault.getRole().getRoleValue());\n", 
            "-            newFault.setRole(soapFaultRole);\n", 
            "-        }\n", 
            "-\n", 
            "-        if (fault.getDetail() != null) {\n", 
            "-            SOAPFaultDetail soapFaultDetail = fac.createSOAPFaultDetail();\n", 
            "-            for (Iterator itr = fault.getDetail().getAllDetailEntries(); itr.hasNext();) {\n", 
            "-                soapFaultDetail.addDetailEntry(((OMElement) itr.next()).cloneOMElement());\n", 
            "-            }\n", 
            "-            newFault.setDetail(soapFaultDetail);\n", 
            "-        }\n", 
            "-\n", 
            "-        return newFault;\n", 
            "-    }\n", 
            "-\n", 
            "-    /**\n", 
            "      * Remove the headers that are marked as processed.\n", 
            "      * @param axisMsgCtx the Axis2 Message context\n", 
            "      * @param preserveAddressing if true preserve the addressing headers     \n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/util/MessageHelper.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/util/MessageHelper.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-133,16 +133,16", 
          "lines": [
            "                         } else {\n", 
            "                             newSOAPHeader.addAttribute(attr);\n", 
            "                         }\n", 
            "+                    } // while(allAttributes.hasNext())\n", 
            " \n", 
            "-                        Iterator itrChildren = soapHeader.getChildren();\n", 
            "-                        while (itrChildren.hasNext()) {\n", 
            "-                            OMNode node = (OMNode) itrChildren.next();\n", 
            "-                            itrChildren.remove();\n", 
            "-                            newSOAPHeader.addChild(node);\n", 
            "-                        }\n", 
            "+                    Iterator itrChildren = soapHeader.getChildren();\n", 
            "+                    while (itrChildren.hasNext()) {\n", 
            "+                        OMNode node = (OMNode) itrChildren.next();\n", 
            "+                        itrChildren.remove();\n", 
            "+                        newSOAPHeader.addChild(node);\n", 
            "+                    }\n", 
            " \n", 
            "-                        newEnvelope.getHeader().addChild(newSOAPHeader);\n", 
            "-                    } // while(allAttributes.hasNext())\n", 
            "+                    newEnvelope.getHeader().addChild(newSOAPHeader);\n", 
            " \n", 
            "                 } else {\n", 
            "                     itr.remove();\n"
          ]
        }, 
        {
          "locn": "-289,17 +289,17", 
          "lines": [
            "                         } else {\n", 
            "                             newSOAPHeader.addAttribute(attr);\n", 
            "                         }\n", 
            "+                    }\n", 
            " \n", 
            "-                        Iterator itrChildren = soapHeaderBlock.getChildren();\n", 
            "-                        while (itrChildren.hasNext()) {\n", 
            "-                            OMNode node = (OMNode) itrChildren.next();\n", 
            "-                            itrChildren.remove();\n", 
            "-                            newSOAPHeader.addChild(node);\n", 
            "-                        }\n", 
            "-\n", 
            "-                        newEnvelope.getHeader().addChild(newSOAPHeader);\n", 
            "+                    Iterator itrChildren = soapHeaderBlock.getChildren();\n", 
            "+                    while (itrChildren.hasNext()) {\n", 
            "+                        OMNode node = (OMNode) itrChildren.next();\n", 
            "+                        itrChildren.remove();\n", 
            "+                        newSOAPHeader.addChild(node);\n", 
            "                     }\n", 
            " \n", 
            "+                    newEnvelope.getHeader().addChild(newSOAPHeader);\n", 
            "+\n", 
            "                 } else {\n", 
            "                     itr.remove();\n", 
            "                     newEnvelope.getHeader().addChild(omNode);\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/SOAPUtils.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/SOAPUtils.java"
    }
  ], 
  "id": "1523751"
}