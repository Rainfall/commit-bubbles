{
  "when": "2016-12-25T12:38:00-05:00", 
  "message": "Handle failure situation while building the message in RelayUtils", 
  "who": "isudana", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-34,6 +34,8", 
          "lines": [
            " import org.apache.axis2.engine.Phase;\n", 
            " import org.apache.axis2.transport.RequestResponseTransport;\n", 
            " import org.apache.axis2.transport.TransportUtils;\n", 
            "+import org.apache.commons.io.IOUtils;\n", 
            "+import org.apache.commons.io.output.NullOutputStream;\n", 
            " import org.apache.commons.logging.Log;\n", 
            " import org.apache.commons.logging.LogFactory;\n", 
            " import org.apache.synapse.transport.passthru.PassThroughConstants;\n"
          ]
        }, 
        {
          "locn": "-153,11 +155,14", 
          "lines": [
            " \t\t}\n", 
            " \t   \n", 
            " \t    OMElement element = null;\n", 
            "-\t    try{\n", 
            "-\t        element = messageBuilder.getDocument(messageContext, bufferedInputStream);\n", 
            "-\t    }catch (Exception e) {\n", 
            "-\t    \tlog.error(\"Error while building PassThrough stream\",e);\n", 
            "-\t    }\n", 
            "+        try {\n", 
            "+            element = messageBuilder.getDocument(messageContext, bufferedInputStream);\n", 
            "+        } catch (Exception e) {\n", 
            "+            //Clearing the buffer when there is an exception occurred.\n", 
            "+            consumeAndDiscardMessage(messageContext);\n", 
            "+            messageContext.setProperty(PassThroughConstants.MESSAGE_BUILDER_INVOKED, Boolean.TRUE);\n", 
            "+            handleException(\"Error while building Passthrough stream\", e);\n", 
            "+        }\n", 
            " \n", 
            " \t    if (element != null) {\n", 
            " \t        messageContext.setEnvelope(TransportUtils.createSOAPEnvelope(element));\n"
          ]
        }, 
        {
          "locn": "-273,4 +278,36", 
          "lines": [
            "     private static boolean isOneWay(String mepString) {\n", 
            "         return WSDL2Constants.MEP_URI_IN_ONLY.equals(mepString);\n", 
            "     }\n", 
            "+\n", 
            "+    /**\n", 
            "+     * Consumes the data in pipe completely in the given message context and discard it\n", 
            "+     *\n", 
            "+     * @param msgContext Axis2 Message context which contains the data\n", 
            "+     * @throws AxisFault\n", 
            "+     */\n", 
            "+    private static void consumeAndDiscardMessage(MessageContext msgContext) throws AxisFault {\n", 
            "+        final Pipe pipe = (Pipe) msgContext.getProperty(PassThroughConstants.PASS_THROUGH_PIPE);\n", 
            "+        if (pipe != null) {\n", 
            "+            InputStream in = pipe.getInputStream();\n", 
            "+            if (in != null) {\n", 
            "+                try {\n", 
            "+                    IOUtils.copy(in, new NullOutputStream());\n", 
            "+                } catch (IOException exception) {\n", 
            "+                    handleException(\"Error when consuming the input stream to discard \", exception);\n", 
            "+                }\n", 
            "+            }\n", 
            "+        }\n", 
            "+    }\n", 
            "+\n", 
            "+    /**\n", 
            "+     * Perform an error log message to all logs @ ERROR and throws a AxisFault\n", 
            "+     *\n", 
            "+     * @param msg the log message\n", 
            "+     * @param e   an Exception encountered\n", 
            "+     * @throws AxisFault\n", 
            "+     */\n", 
            "+    private static void handleException(String msg, Exception e) throws AxisFault {\n", 
            "+        log.error(msg, e);\n", 
            "+        throw new AxisFault(msg, e);\n", 
            "+    }\n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/util/RelayUtils.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/util/RelayUtils.java"
    }
  ], 
  "id": "1776021"
}