{
  "when": "2013-07-27T09:15:56-04:00", 
  "who": "sadeep", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-0,0 +1,197", 
          "lines": [
            "+<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n", 
            "+<!--\n", 
            "+  ~  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+  ~  or more contributor license agreements.  See the NOTICE file\n", 
            "+  ~  distributed with this work for additional information\n", 
            "+  ~  regarding copyright ownership.  The ASF licenses this file\n", 
            "+  ~  to you under the Apache License, Version 2.0 (the\n", 
            "+  ~  \"License\"); you may not use this file except in compliance\n", 
            "+  ~  with the License.  You may obtain a copy of the License at\n", 
            "+  ~\n", 
            "+  ~   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+  ~\n", 
            "+  ~  Unless required by applicable law or agreed to in writing,\n", 
            "+  ~  software distributed under the License is distributed on an\n", 
            "+  ~   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+  ~  KIND, either express or implied.  See the License for the\n", 
            "+  ~  specific language governing permissions and limitations\n", 
            "+  ~  under the License.\n", 
            "+  -->\n", 
            "+\n", 
            "+<document>\n", 
            "+    <properties>\n", 
            "+        <title>Apache Synapse - Sample 470</title>\n", 
            "+    </properties>\n", 
            "+    <body>\n", 
            "+        <section name=\"Sample 470: Introduction to the EJB Mediator I - Invoking Stateless Session Beans\">\n", 
            "+            <div class=\"xmlConf\">&lt;definitions xmlns=&quot;http://ws.apache.org/ns/synapse&quot;&gt;\n", 
            "+    &lt;proxy name=&quot;StoreLocatorProxy&quot; transports=&quot;https http&quot; startOnLoad=&quot;true&quot; trace=&quot;disable&quot;&gt;\n", 
            "+        &lt;target&gt;\n", 
            "+            &lt;!-- First call StoreLocator#getClosestStore(), then call StoreRegistry#getStoreById() with the result. --&gt;\n", 
            "+            &lt;inSequence&gt;\n", 
            "+                &lt;bean action=&quot;CREATE&quot; class=&quot;samples.bean.Location&quot; var=&quot;loc&quot;/&gt;\n", 
            "+                &lt;bean action=&quot;SET_PROPERTY&quot; var=&quot;loc&quot; property=&quot;latitude&quot; value=&quot;{//m:latitude}&quot; xmlns:m=&quot;http://services.samples&quot;/&gt;\n", 
            "+                &lt;bean action=&quot;SET_PROPERTY&quot; var=&quot;loc&quot; property=&quot;longitude&quot; value=&quot;{//m:longitude}&quot; xmlns:m=&quot;http://services.samples&quot;/&gt;\n", 
            "+                &lt;ejb class=&quot;samples.ejb.StoreLocator&quot; beanstalk=&quot;demo&quot; method=&quot;getClosestStore&quot; target=&quot;store_id&quot; jndiName=&quot;StoreLocatorBean/remote&quot;&gt;\n", 
            "+                    &lt;args&gt;\n", 
            "+                        &lt;arg value=&quot;{get-property(&#39;loc&#39;)}&quot;/&gt;\n", 
            "+                    &lt;/args&gt;\n", 
            "+                &lt;/ejb&gt;\n", 
            "+                &lt;ejb class=&quot;samples.ejb.StoreRegistry&quot; beanstalk=&quot;demo&quot; method=&quot;getStoreById&quot; target=&quot;store&quot; jndiName=&quot;StoreRegistryBean/remote&quot;&gt;\n", 
            "+                    &lt;args&gt;\n", 
            "+                        &lt;arg value=&quot;{get-property(&#39;store_id&#39;)}&quot;/&gt;\n", 
            "+                    &lt;/args&gt;\n", 
            "+                &lt;/ejb&gt;\n", 
            "+                &lt;!-- Prepare the response. --&gt;\n", 
            "+                &lt;enrich&gt;\n", 
            "+                    &lt;source type=&quot;inline&quot; clone=&quot;true&quot;&gt;\n", 
            "+                        &lt;getClosestStoreResponse xmlns=&quot;&quot;&gt;\n", 
            "+                            &lt;store&gt;\n", 
            "+                                &lt;name&gt;?&lt;/name&gt;\n", 
            "+                                &lt;address&gt;?&lt;/address&gt;\n", 
            "+                                &lt;phone&gt;?&lt;/phone&gt;\n", 
            "+                            &lt;/store&gt;\n", 
            "+                        &lt;/getClosestStoreResponse&gt;\n", 
            "+                    &lt;/source&gt;\n", 
            "+                    &lt;target type=&quot;body&quot;/&gt;\n", 
            "+                &lt;/enrich&gt;\n", 
            "+                &lt;bean action=&quot;GET_PROPERTY&quot; var=&quot;store&quot; property=&quot;name&quot; target=&quot;{//store/name/text()}&quot;/&gt;\n", 
            "+                &lt;bean action=&quot;GET_PROPERTY&quot; var=&quot;store&quot; property=&quot;address&quot; target=&quot;{//store/address/text()}&quot;/&gt;\n", 
            "+                &lt;bean action=&quot;GET_PROPERTY&quot; var=&quot;store&quot; property=&quot;phoneNo&quot; target=&quot;{//store/phone/text()}&quot;/&gt;\n", 
            "+                &lt;!-- Send the response back to the client of the ESB. --&gt;\n", 
            "+                &lt;header name=&quot;To&quot; action=&quot;remove&quot;/&gt;\n", 
            "+                &lt;property name=&quot;RESPONSE&quot; value=&quot;true&quot;/&gt;\n", 
            "+                &lt;send/&gt;\n", 
            "+            &lt;/inSequence&gt;\n", 
            "+        &lt;/target&gt;\n", 
            "+    &lt;/proxy&gt;\n", 
            "+&lt;/definitions&gt;</div>\n", 
            "+            <subsection name=\"Objective\">\n", 
            "+                <p>\n", 
            "+                    Demonstrate the usage of the EJB mediator for invoking EJB Stateless\n", 
            "+                    Session Beans hosted on a remote EJB Container.\n", 
            "+                </p>\n", 
            "+            </subsection>\n", 
            "+            <subsection name=\"Pre-requisites\">\n", 
            "+                <p>\n", 
            "+                    <ul>\n", 
            "+                        <li>\n", 
            "+                            Build the backend EJB jar to be hosted on the EJB Container by changing\n", 
            "+                            the directory to SYNAPSE_HOME/samples/axis2Server/src/EJBSampleBeans\n", 
            "+                            and invoking: <div class=\"command\">mvn clean install</div>\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            Deploy the built EJB jar \n", 
            "+                            (SYNAPSE_HOME/samples/axis2Server/src/EJBSampleBeans/target/synapse-samples-ejb-1.0.0.jar)\n", 
            "+                            in an EJB Container such as JBoss or GlassFish.\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            Add minimal client JARs of your EJB Container to SYNAPSE_HOME/lib. \n", 
            "+                            E.g. If you are using JBoss 7, it is sufficient to add the \n", 
            "+                            jboss-client.jar file.\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            Add the synapse-samples-ejb-1.0.0.jar to SYNAPSE_HOME/lib. (Note: adding \n", 
            "+                            only the remote interfaces of the EJBs will suffice. Here we are using\n", 
            "+                            the complete jar file for simplicity.)\n", 
            "+                        </li>                \n", 
            "+                        <li>\n", 
            "+                            Configure a beanstalk named 'demo' in\n", 
            "+                            SYNAPSE_HOME/repository/conf/synapse.properties. You will need to \n", 
            "+                            specify the JNDI properties of your EJB Container in this configuration.\n", 
            "+                            Some example configurations are shown below. <br/> \n", 
            "+                            For JBoss 7:\n", 
            "+                            <div class=\"consoleOutput\">synapse.beanstalks=demo,foo\n", 
            "+#   JNDI properties\n", 
            "+synapse.beanstalks.demo.java.naming.factory.url.pkgs=org.jboss.ejb.client.naming\n", 
            "+#  Cache settings\n", 
            "+synapse.beanstalks.demo.cache.warn.limit.stateless=256\n", 
            "+synapse.beanstalks.demo.cache.warn.limit.stateful=256\n", 
            "+synapse.beanstalks.demo.cache.timeout.stateless=30\n", 
            "+synapse.beanstalks.demo.cache.timeout.stateful=30\n", 
            "+</div>\n", 
            "+                            <br/>                            \n", 
            "+                            For JBoss 6:\n", 
            "+                            <div class=\"consoleOutput\">synapse.beanstalks=demo,foo\n", 
            "+#   JNDI properties\n", 
            "+synapse.beanstalks.demo.java.naming.factory.initial=org.jnp.interfaces.NamingContextFactory\n", 
            "+synapse.beanstalks.demo.java.naming.factory.url.pkgs=org.jboss.naming:org.jnp.interfaces\n", 
            "+synapse.beanstalks.demo.java.naming.provider.url=localhost:1099\n", 
            "+#  Cache settings\n", 
            "+synapse.beanstalks.demo.cache.warn.limit.stateless=256\n", 
            "+synapse.beanstalks.demo.cache.warn.limit.stateful=256\n", 
            "+synapse.beanstalks.demo.cache.timeout.stateless=30\n", 
            "+synapse.beanstalks.demo.cache.timeout.stateful=30\n", 
            "+</div>\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            If the JNDI names assigned to the EJBs by your EJB Container differ from\n", 
            "+                            the JNDI names specified in the sample 470 configuration file\n", 
            "+                            (repository/conf/sample/synapse_sample_470.xml), edit 'jndiName' \n", 
            "+                            attribute of all &lt; ejb /&gt; mediator invocations in the \n", 
            "+                            synapse_sample_470.xml accordingly.\n", 
            "+                        </li>\n", 
            "+                        <li>\n", 
            "+                            Start Synapse using the configuration numbered 470 \n", 
            "+                            (repository/conf/sample/synapse_sample_470.xml):\n", 
            "+                            <div class=\"command\">\n", 
            "+                                Unix/Linux: sh synapse.sh -sample 470<br/>\n", 
            "+                                Windows: synapse.bat -sample 470\n", 
            "+                            </div>\n", 
            "+                        </li>\n", 
            "+                    </ul>\n", 
            "+                </p>\n", 
            "+            </subsection>\n", 
            "+            <subsection name=\"Executing the Client\">                \n", 
            "+                <p>\n", 
            "+                    Send the following request to http://localhost:8280/services/StoreLocatorProxy\n", 
            "+                    using a tool such at <a href=\"http://ws.apache.org/tcpmon/\">TCPMon</a> or curl.\n", 
            "+                </p>\n", 
            "+<div class=\"xmlConf\">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n", 
            "+  &lt;soapenv:Body&gt;\n", 
            "+    &lt;getClosestStore xmlns=&quot;http://services.samples&quot;&gt;\n", 
            "+        &lt;latitude&gt;78&lt;/latitude&gt;\n", 
            "+        &lt;longitude&gt;8&lt;/longitude&gt;\n", 
            "+    &lt;/getClosestStore&gt;\n", 
            "+  &lt;/soapenv:Body&gt;\n", 
            "+&lt;/soapenv:Envelope&gt;\n", 
            "+</div>\n", 
            "+                <p>\n", 
            "+                    When the <i>StoreLocatorProxy</i> receives the request, it first creates an instance of\n", 
            "+                     <i>samples.bean.Location</i> using the Bean mediator.\n", 
            "+                    Then, it sets the properties of the newly created bean with the values\n", 
            "+                    extracted from the incoming SOAP message, again using the Bean mediator.\n", 
            "+                </p>\n", 
            "+                <p>\n", 
            "+                    The subsequent EJB mediator invokes the <i>getClosestStore()</i> method on the remote stateless\n", 
            "+                    session bean, <i>StoreLocator</i>, with the previously populated\n", 
            "+                    Location object as an argument and stores the result in the <i>store_id</i> message context\n", 
            "+                    property. Another EJB mediator that follows calls the <i>getStoreById()</i> method\n", 
            "+                    on a second stateless session bean,<i>StoreRegistry</i>, to obtain store details encapsulated in\n", 
            "+                    a JavaBean (an instance of samples.bean.Store) and stores this resulting bean in a message context\n", 
            "+                    property named <i>store</i>. The <i>demo</i> beanstalk provides all necessary configurations\n", 
            "+                    needed for the two remote EJB invocations.\n", 
            "+                </p>\n", 
            "+                <p>\n", 
            "+                    Finally, Enrich and Bean mediators are used to build the response message extracting properties from\n", 
            "+                    the JavaBean stored in the <i>store</i> property.\n", 
            "+                </p>\n", 
            "+                <p>A sample response is shown below.</p>\n", 
            "+\n", 
            "+<div class=\"xmlConf\">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n", 
            "+  &lt;soapenv:Body&gt;\n", 
            "+    &lt;getClosestStoreResponse&gt;\n", 
            "+     &lt;store&gt;\n", 
            "+        &lt;name&gt;Kadawatha&lt;/name&gt;\n", 
            "+        &lt;address&gt;253, Kandy Road, Kadawatha&lt;/address&gt;\n", 
            "+        &lt;phone&gt;0112990789&lt;/phone&gt;\n", 
            "+     &lt;/store&gt;\n", 
            "+     &lt;/getClosestStoreResponse&gt;\n", 
            "+     &lt;/soapenv:Body&gt;\n", 
            "+&lt;/soapenv:Envelope&gt; \n", 
            "+</div>\n", 
            "+            </subsection>\n", 
            "+        </section>\n", 
            "+        <p><a href=\"../samples.html\">Back to Catalog</a></p>        \n", 
            "+    </body>\n", 
            "+</document>\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/documentation/src/site/xdoc/userguide/samples/sample470.xml", 
      "from": "java/modules/documentation/src/site/xdoc/userguide/samples/sample470.xml"
    }
  ], 
  "id": "1507632"
}