{
  "when": "2013-08-11T21:21:12-04:00", 
  "message": "Supporting bind-address parameter in the pass through transport", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-42,6 +42,7", 
          "lines": [
            "     public static final String SERVICE_URI_LOCATION = \"ServiceURI\";\n", 
            " \n", 
            "     public static final String WSDL_EPR_PREFIX = \"WSDLEPRPrefix\";\n", 
            "+    public static final String BIND_ADDRESS = \"bind-address\" ;\n", 
            " \n", 
            "     public static final String EPR_TO_SERVICE_NAME_MAP = \"service.epr.map\";\n", 
            "     public static final String NON_BLOCKING_TRANSPORT = \"NonBlockingTransport\";\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughConstants.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughConstants.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-53,7 +53,9", 
          "lines": [
            " \n", 
            " import javax.net.ssl.SSLContext;\n", 
            " import java.io.IOException;\n", 
            "+import java.net.InetAddress;\n", 
            " import java.net.InetSocketAddress;\n", 
            "+import java.net.UnknownHostException;\n", 
            " import java.util.ArrayList;\n", 
            " import java.util.HashMap;\n", 
            " import java.util.Map;\n"
          ]
        }, 
        {
          "locn": "-167,8 +169,20", 
          "lines": [
            "         final IOEventDispatch ioEventDispatch = getEventDispatch(handler, sslContext,\n", 
            "                 sslSetupHandler, sourceConfiguration.getConnectionConfig());\n", 
            " \n", 
            "-        ListenerEndpoint endpoint = ioReactor.listen(new InetSocketAddress(\n", 
            "-                sourceConfiguration.getPort()));\n", 
            "+        ListenerEndpoint endpoint;\n", 
            "+        if (sourceConfiguration.getBindAddress() != null) {\n", 
            "+            try {\n", 
            "+                endpoint = ioReactor.listen(new InetSocketAddress(\n", 
            "+                        InetAddress.getByName(sourceConfiguration.getBindAddress()),\n", 
            "+                        sourceConfiguration.getPort()));\n", 
            "+            } catch (UnknownHostException e) {\n", 
            "+                handleException(\"Failed to resolve the bind address: \" +\n", 
            "+                        sourceConfiguration.getBindAddress(), e);\n", 
            "+                return;\n", 
            "+            }\n", 
            "+        } else {\n", 
            "+            endpoint = ioReactor.listen(new InetSocketAddress(sourceConfiguration.getPort()));\n", 
            "+        }\n", 
            "         HttpGetRequestProcessor getProcessor = sourceConfiguration.getHttpGetRequestProcessor();\n", 
            "         if (getProcessor != null){\n", 
            "            getProcessor.init(sourceConfiguration.getConfigurationContext(), handler);\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpListener.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpListener.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-52,6 +52,8", 
          "lines": [
            "     /** port of the listener */\n", 
            "     private int port = 8280;\n", 
            " \n", 
            "+    private String bindAddress = null;\n", 
            "+\n", 
            "     /** Object to manage the source connections */\n", 
            "     private SourceConnections sourceConnections = null;\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-82,6 +84,11", 
          "lines": [
            "         this.sourceConnections = new SourceConnections();\n", 
            "         this.port = ParamUtils.getRequiredParamInt(parameters, \"port\");\n", 
            " \n", 
            "+        Parameter bindAddressParameter = parameters.getParameter(PassThroughConstants.BIND_ADDRESS);\n", 
            "+        if (bindAddressParameter != null) {\n", 
            "+            this.bindAddress = ((String) bindAddressParameter.getValue()).trim();\n", 
            "+        }\n", 
            "+\n", 
            "         Parameter hostParameter = parameters.getParameter(TransportListener.HOST_ADDRESS);\n", 
            "         if (hostParameter != null) {\n", 
            "             host = ((String) hostParameter.getValue()).trim();\n"
          ]
        }, 
        {
          "locn": "-130,6 +137,10", 
          "lines": [
            "         return port;\n", 
            "     }\n", 
            " \n", 
            "+    public String getBindAddress() {\n", 
            "+        return bindAddress;\n", 
            "+    }\n", 
            "+\n", 
            "     public SourceConnections getSourceConnections() {\n", 
            "         return sourceConnections;\n", 
            "     }\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/config/SourceConfiguration.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/config/SourceConfiguration.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-162,7 +162,7", 
          "lines": [
            "         msgContext.setTo(new EndpointReference(uri));\n", 
            "         msgContext.setProperty(PassThroughConstants.REST_URL_POSTFIX, uri);\n", 
            " \n", 
            "-\t\tif (\"GET\".equals(method) || \"DELETE\".equals(method)) {\n", 
            "+\t\tif ((\"GET\".equals(method) || \"DELETE\".equals(method)) && httpGetRequestProcessor != null) {\n", 
            " \t\t\tHttpResponse response = sourceConfiguration.getResponseFactory().newHttpResponse(\n", 
            " \t\t                request.getVersion(), HttpStatus.SC_OK,\n", 
            " \t\t                request.getConnection().getContext());\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/ServerWorker.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/ServerWorker.java"
    }
  ], 
  "id": "1513024"
}