{
  "when": "2011-12-13T04:38:48-05:00", 
  "who": "charith", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-199,11 +199,10", 
          "lines": [
            "                 Endpoint ep = messageContext.getEndpoint(targetEp);\n", 
            " \n", 
            "                 if (ep instanceof AddressEndpoint) {\n", 
            "-                    AddressEndpoint addEp = (AddressEndpoint) ep;\n", 
            "-                    String addressUrl = addEp.getDefinition().getAddress();\n", 
            " \n", 
            "                     try {\n", 
            "-                        MessageContext outCtx = sender.send(messageContext, addressUrl);\n", 
            "+                        MessageContext outCtx = sender.send(\n", 
            "+                                ((AddressEndpoint) ep).getDefinition(), messageContext);\n", 
            "                         // If no Exception Occurred We remove the Message\n", 
            "                         if (delete) {\n", 
            "                             messageStore.poll();\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/MessageForwardingProcessorView.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/MessageForwardingProcessorView.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-123,11 +123,10", 
          "lines": [
            "                     Endpoint ep = messageContext.getEndpoint(targetEp);\n", 
            " \n", 
            "                     if (ep instanceof AddressEndpoint) {\n", 
            "-                        AddressEndpoint addEp = (AddressEndpoint) ep;\n", 
            "-                        String addressUrl = addEp.getDefinition().getAddress();\n", 
            " \n", 
            "                         try {\n", 
            "-                            MessageContext outCtx = sender.send(messageContext, addressUrl);\n", 
            "+                            MessageContext outCtx = sender.send(\n", 
            "+                                    ((AddressEndpoint) ep).getDefinition(), messageContext);\n", 
            " \n", 
            "                             if (outCtx != null && \"true\".equals(outCtx.\n", 
            "                                     getProperty(ForwardingProcessorConstants.BLOCKING_SENDER_ERROR))) {\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/ForwardingJob.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/ForwardingJob.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-42,6 +42,7", 
          "lines": [
            " import org.apache.synapse.SynapseConstants;\n", 
            " import org.apache.synapse.SynapseException;\n", 
            " import org.apache.synapse.core.axis2.Axis2MessageContext;\n", 
            "+import org.apache.synapse.endpoints.EndpointDefinition;\n", 
            " import org.apache.synapse.util.MessageHelper;\n", 
            " \n", 
            " \n"
          ]
        }, 
        {
          "locn": "-77,10 +78,20", 
          "lines": [
            "         }\n", 
            "     }\n", 
            " \n", 
            "-    public MessageContext send(MessageContext messageIn , String serviceUrl) throws Exception {\n", 
            "+    /**\n", 
            "+     * Send the message to a given AddressEndpoint in a blocking manner\n", 
            "+     * @param endpoint EndpointDefinition for the given address endpoint\n", 
            "+     * @param messageIn Synapse Message Context to be sent\n", 
            "+     * @return  OutPut message Context\n", 
            "+     * @throws Exception\n", 
            "+     */\n", 
            "+    public MessageContext send(EndpointDefinition endpoint, MessageContext messageIn)\n", 
            "+            throws Exception {\n", 
            " \n", 
            "+        String serviceUrl = endpoint.getAddress();\n", 
            "+\n", 
            "         if(log.isDebugEnabled()) {\n", 
            "-            log.debug(\"Start Sending the Message \");\n", 
            "+            log.debug(\"Start Sending the Message : \" + messageIn.getMessageID());\n", 
            "         }\n", 
            " \n", 
            "         try {\n"
          ]
        }, 
        {
          "locn": "-106,26 +117,22", 
          "lines": [
            " \n", 
            "             }\n", 
            " \n", 
            "-           //After setting all the options we need to find the MEP of the Message\n", 
            "-           org.apache.axis2.context.MessageContext axis2Ctx =\n", 
            "-                   ((Axis2MessageContext)messageOut).getAxis2MessageContext();\n", 
            "+            //After setting all the options we need to find the MEP of the Message\n", 
            "+            org.apache.axis2.context.MessageContext axis2Ctx =\n", 
            "+                    ((Axis2MessageContext) messageOut).getAxis2MessageContext();\n", 
            " \n", 
            "-           boolean outOnlyMessage = \"true\".equals(messageIn.getProperty(\n", 
            "-                SynapseConstants.OUT_ONLY)) || WSDL2Constants.MEP_URI_IN_ONLY.equals(\n", 
            "-                axis2Ctx.getOperationContext()\n", 
            "-                        .getAxisOperation().getMessageExchangePattern());\n", 
            "+            boolean outOnlyMessage = \"true\".equals(messageIn.getProperty(\n", 
            "+                    SynapseConstants.OUT_ONLY)) || WSDL2Constants.MEP_URI_IN_ONLY.equals(\n", 
            "+                    axis2Ctx.getOperationContext()\n", 
            "+                            .getAxisOperation().getMessageExchangePattern());\n", 
            " \n", 
            "             // Here We consider all other Messages that evaluates to outOnlyMessage == false\n", 
            "             // follows out in mep.\n", 
            "-            if(log.isDebugEnabled()) {\n", 
            "+            if (log.isDebugEnabled()) {\n", 
            "                 log.debug(\"Invoking service Url \" + serviceUrl + \" with Message\" +\n", 
            "                         messageIn.getMessageID());\n", 
            "             }\n", 
            " \n", 
            "-\n", 
            "-\n", 
            "-\n", 
            "-\n", 
            "             options.setProperty(\n", 
            "                     AddressingConstants.DISABLE_ADDRESSING_FOR_OUT_MESSAGES, Boolean.TRUE);\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-141,6 +148,12", 
          "lines": [
            "                 }\n", 
            "             }\n", 
            " \n", 
            "+            if (endpoint.isUseMTOM()) {\n", 
            "+                options.setProperty(Constants.Configuration.ENABLE_MTOM, Constants.VALUE_TRUE);\n", 
            "+            } else if (endpoint.isUseSwa()) {\n", 
            "+                options.setProperty(Constants.Configuration.ENABLE_SWA, Constants.VALUE_TRUE);\n", 
            "+            }\n", 
            "+\n", 
            "             sc.setOptions(options);\n", 
            "             OMElement result = null;\n", 
            "             try {\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/BlockingMessageSender.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/BlockingMessageSender.java"
    }
  ], 
  "id": "1213629"
}