{
  "when": "2011-12-08T06:01:42-05:00", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-24,6 +24,8", 
          "lines": [
            " import org.apache.commons.logging.LogFactory;\n", 
            " import org.apache.synapse.samples.framework.tests.endpoint.*;\n", 
            " import org.apache.synapse.samples.framework.tests.message.*;\n", 
            "+import org.apache.synapse.samples.framework.tests.qos.Sample100;\n", 
            "+import org.apache.synapse.samples.framework.tests.qos.Sample101;\n", 
            " \n", 
            " import java.util.ArrayList;\n", 
            " import java.util.HashMap;\n"
          ]
        }, 
        {
          "locn": "-182,5 +184,9", 
          "lines": [
            "         //sampleClassRepo.put(\"57\", Sample57.class);  //intermittently fail\n", 
            "         sampleClassRepo.put(\"58\", Sample58.class);\n", 
            "         sampleClassRepo.put(\"59\", Sample59.class);\n", 
            "+\n", 
            "+        //QoS\n", 
            "+        sampleClassRepo.put(\"100\", Sample100.class);\n", 
            "+        sampleClassRepo.put(\"101\", Sample101.class);\n", 
            "     }\n", 
            " }\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-58,19 +58,6", 
          "lines": [
            " \n", 
            "         }\n", 
            " \n", 
            "-        t = new Thread(new Runnable() {\n", 
            "-            public void run() {\n", 
            "-                result = client.sessionlessClient(addUrl, null, 500);\n", 
            "-            }\n", 
            "-        });\n", 
            "-        t.start();\n", 
            "-\n", 
            "-        try {\n", 
            "-            t.join();\n", 
            "-        } catch (InterruptedException e) {\n", 
            "-\n", 
            "-        }\n", 
            "-\n", 
            "         assertResponseReceived(result);\n", 
            "     }\n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample57.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample57.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,46", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.qos;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample100 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample100.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+\n", 
            "+    public Sample100() {\n", 
            "+        super(100);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testWSSecurity() {\n", 
            "+        String trpUrl = \"http://localhost:8280/\";\n", 
            "+        log.info(\"Running test: Using WS-Security for outgoing messages\");\n", 
            "+        result = client.requestStandardQuote(null, trpUrl, null, \"IBM\", null);\n", 
            "+        assertTrue(\"Client did not run successfully\", result.responseReceived());\n", 
            "+    }\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample100.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample100.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,47", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.qos;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample101 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample101.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+\n", 
            "+    public Sample101() {\n", 
            "+        super(101);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testWSRM() {\n", 
            "+        String addUrl = \"http://localhost:8280/\";\n", 
            "+\n", 
            "+        log.info(\"Running test: Reliable message exchange\");\n", 
            "+        result = client.requestStandardQuote(addUrl, null, null, \"IBM\" ,null);\n", 
            "+        assertTrue(\"Client did not run successfully \", result.responseReceived());\n", 
            "+    }\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample101.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample101.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,18", 
          "lines": [
            "+<synapseSample>\n", 
            "+    <sampleID>100</sampleID>\n", 
            "+    <sampleName>Using WS-Security for outgoing messages</sampleName>\n", 
            "+    <synapseConfig>\n", 
            "+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>\n", 
            "+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>\n", 
            "+        <synapseXml>repository/conf/sample/synapse_sample_100.xml</synapseXml>\n", 
            "+    </synapseConfig>\n", 
            "+    <backEndServerConfig>\n", 
            "+        <axis2Server id='0'>\n", 
            "+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>\n", 
            "+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>\n", 
            "+        </axis2Server>\n", 
            "+    </backEndServerConfig>\n", 
            "+    <clientConfig>\n", 
            "+\t<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>\n", 
            "+    </clientConfig>\n", 
            "+</synapseSample>\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/resources/sample100.xml", 
      "from": "java/modules/integration/src/test/resources/sample100.xml"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,18", 
          "lines": [
            "+<synapseSample>\n", 
            "+    <sampleID>101</sampleID>\n", 
            "+    <sampleName>Reliable message exchange between Synapse and the back-end server using WS-ReliableMessaging</sampleName>\n", 
            "+    <synapseConfig>\n", 
            "+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>\n", 
            "+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>\n", 
            "+        <synapseXml>repository/conf/sample/synapse_sample_101.xml</synapseXml>\n", 
            "+    </synapseConfig>\n", 
            "+    <backEndServerConfig>\n", 
            "+        <axis2Server id='0'>\n", 
            "+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>\n", 
            "+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>\n", 
            "+        </axis2Server>\n", 
            "+    </backEndServerConfig>\n", 
            "+    <clientConfig>\n", 
            "+\t<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>\n", 
            "+    </clientConfig>\n", 
            "+</synapseSample>\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/resources/sample101.xml", 
      "from": "java/modules/integration/src/test/resources/sample101.xml"
    }
  ], 
  "id": "1211825"
}