{
  "when": "2013-08-03T17:03:25-04:00", 
  "message": "Adding enqueue mediator serializer test", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-0,0 +1,46", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+\n", 
            "+package org.apache.synapse.config.xml;\n", 
            "+\n", 
            "+public class EnqueueMediatorSerializationTest extends AbstractTestCase {\n", 
            "+\n", 
            "+    private EnqueueMediatorFactory factory;\n", 
            "+    private EnqueueMediatorSerializer serializer;\n", 
            "+\n", 
            "+    public EnqueueMediatorSerializationTest() {\n", 
            "+        super(EnqueueMediatorSerializationTest.class.getName());\n", 
            "+        factory = new EnqueueMediatorFactory();\n", 
            "+        serializer = new EnqueueMediatorSerializer();\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testEnqueueMediatorSerializationScenarioOne() throws Exception {\n", 
            "+        String inputXml = \"<enqueue xmlns=\\\"http://ws.apache.org/ns/synapse\\\" \" +\n", 
            "+                \"executor=\\\"bar\\\" sequence=\\\"foo\\\"/>\";\n", 
            "+        assertTrue(serialization(inputXml, factory, serializer));\n", 
            "+        assertTrue(serialization(inputXml, serializer));\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testEnqueueMediatorSerializationScenarioTwo() throws Exception {\n", 
            "+        String inputXml = \"<enqueue xmlns=\\\"http://ws.apache.org/ns/synapse\\\" \" +\n", 
            "+                \"executor=\\\"bar\\\" sequence=\\\"foo\\\" priority=\\\"5\\\"/>\";\n", 
            "+        assertTrue(serialization(inputXml, factory, serializer));\n", 
            "+        assertTrue(serialization(inputXml, serializer));\n", 
            "+    }\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/test/java/org/apache/synapse/config/xml/EnqueueMediatorSerializationTest.java", 
      "from": "java/modules/core/src/test/java/org/apache/synapse/config/xml/EnqueueMediatorSerializationTest.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-38,6 +38,7", 
          "lines": [
            "  * executor can throw exceptions.\n", 
            "  */\n", 
            " public class EnqueueMediator extends AbstractMediator {\n", 
            "+\n", 
            "     private String executorName = null;\n", 
            " \n", 
            "     private int priority = 0;\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/EnqueueMediator.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/EnqueueMediator.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-23,7 +23,6", 
          "lines": [
            " import org.apache.synapse.Mediator;\n", 
            " import org.apache.synapse.mediators.builtin.EnqueueMediator;\n", 
            " \n", 
            "-\n", 
            " public class EnqueueMediatorSerializer extends AbstractMediatorSerializer{\n", 
            " \n", 
            "     public OMElement serializeSpecificMediator(Mediator m) {\n"
          ]
        }, 
        {
          "locn": "-48,8 +47,10", 
          "lines": [
            "             handleException(\"Invalid enqueue mediator. sequence is required\");\n", 
            "         }\n", 
            " \n", 
            "-        enqueue.addAttribute(fac.createOMAttribute(\n", 
            "-                \"priority\", nullNS, mediator.getPriority() + \"\"));\n", 
            "+        if (mediator.getPriority() != 0) {\n", 
            "+            enqueue.addAttribute(fac.createOMAttribute(\n", 
            "+                    \"priority\", nullNS, mediator.getPriority() + \"\"));\n", 
            "+        }\n", 
            " \n", 
            "         return enqueue;\n", 
            "     }\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/EnqueueMediatorSerializer.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/EnqueueMediatorSerializer.java"
    }
  ], 
  "id": "1510068"
}