{
  "when": "2012-04-22T07:50:14-04:00", 
  "message": "Adding unit tests for PayloadFactory mediator", 
  "who": "sadeep", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-0,0 +1,76", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+\n", 
            "+package org.apache.synapse.config.xml;\n", 
            "+\n", 
            "+public class PayloadFactoryMediatorSerializationTest extends AbstractTestCase {\n", 
            "+\n", 
            "+    private PayloadFactoryMediatorFactory payloadFactoryMediatorFactory;\n", 
            "+    private PayloadFactoryMediatorSerializer payloadFactoryMediatorSerializer;\n", 
            "+\n", 
            "+    public PayloadFactoryMediatorSerializationTest() {\n", 
            "+        super(AbstractTestCase.class.getName());\n", 
            "+        payloadFactoryMediatorFactory = new PayloadFactoryMediatorFactory();\n", 
            "+        payloadFactoryMediatorSerializer = new PayloadFactoryMediatorSerializer();\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testPayloadFactoryMediatorStaticArgsSerialization() throws Exception {\n", 
            "+\n", 
            "+        String inputXml = \"<payloadFactory xmlns=\\\"http://ws.apache.org/ns/synapse\\\">\" +\n", 
            "+                \"<format><foo><bar>$1</bar><batz>X</batz></foo></format><args><arg value=\\\"One\\\"/></args>\" +\n", 
            "+                \"</payloadFactory>\";\n", 
            "+\n", 
            "+        assertTrue(serialization(inputXml, payloadFactoryMediatorFactory, payloadFactoryMediatorSerializer));\n", 
            "+        assertTrue(serialization(inputXml, payloadFactoryMediatorSerializer));\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testPayloadFactoryMediatorExpressionArgsSerialization() throws Exception {\n", 
            "+\n", 
            "+        String inputXml = \"<payloadFactory xmlns=\\\"http://ws.apache.org/ns/synapse\\\">\" +\n", 
            "+                \"<format><foo><bar>$1</bar><batz>X</batz></foo></format>\" +\n", 
            "+                \"<args><arg expression=\\\"get-property('foo')\\\"/><arg value=\\\"Two\\\"/></args></payloadFactory>\";\n", 
            "+\n", 
            "+        assertTrue(serialization(inputXml, payloadFactoryMediatorFactory, payloadFactoryMediatorSerializer));\n", 
            "+        assertTrue(serialization(inputXml, payloadFactoryMediatorSerializer));\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testPayloadFactoryMediatorFormatWithNamespaceSerialization() throws Exception {\n", 
            "+\n", 
            "+        String inputXml = \"<payloadFactory xmlns=\\\"http://ws.apache.org/ns/synapse\\\">\" +\n", 
            "+                \"<format><m:getQuote xmlns:m=\\\"http://services.samples\\\"><m:request><m:symbol>$1</m:symbol>\" +\n", 
            "+                \"</m:request></m:getQuote></format><args><arg xmlns:m0=\\\"http://services.samples\\\" \" +\n", 
            "+                \"expression=\\\"//m0:Code\\\"/></args></payloadFactory>\";\n", 
            "+\n", 
            "+        assertTrue(serialization(inputXml, payloadFactoryMediatorFactory, payloadFactoryMediatorSerializer));\n", 
            "+        assertTrue(serialization(inputXml, payloadFactoryMediatorSerializer));\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testPayloadFactoryMediatorMultiArgsSerialization() throws Exception {\n", 
            "+\n", 
            "+        String inputXml = \"<payloadFactory xmlns=\\\"http://ws.apache.org/ns/synapse\\\">\" +\n", 
            "+                \"<format><m:CheckPriceResponse xmlns:m=\\\"http://services.samples/xsd\\\"><m:Code>$1</m:Code>\" +\n", 
            "+                \"<m:Price>$2</m:Price></m:CheckPriceResponse></format><args>\" +\n", 
            "+                \"<arg xmlns:m0=\\\"http://services.samples/xsd\\\" expression=\\\"//m0:symbol\\\"/>\" +\n", 
            "+                \"<arg xmlns:m0=\\\"http://services.samples/xsd\\\" expression=\\\"//m0:last\\\"/></args></payloadFactory>\";\n", 
            "+\n", 
            "+        assertTrue(serialization(inputXml, payloadFactoryMediatorFactory, payloadFactoryMediatorSerializer));\n", 
            "+        assertTrue(serialization(inputXml, payloadFactoryMediatorSerializer));\n", 
            "+    }\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/test/java/org/apache/synapse/config/xml/PayloadFactoryMediatorSerializationTest.java", 
      "from": "java/modules/core/src/test/java/org/apache/synapse/config/xml/PayloadFactoryMediatorSerializationTest.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,73", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+\n", 
            "+package org.apache.synapse.mediators.transform;\n", 
            "+\n", 
            "+import junit.framework.TestCase;\n", 
            "+import org.apache.synapse.MessageContext;\n", 
            "+import org.apache.synapse.mediators.TestUtils;\n", 
            "+import org.apache.synapse.util.xpath.SynapseXPath;\n", 
            "+\n", 
            "+public class PayloadFactoryMediatorTest extends TestCase {\n", 
            "+\n", 
            "+    private static final String SOURCE =\n", 
            "+            \"<m:CheckPriceRequest xmlns:m=\\\"http://services.samples\\\"><m:Code>IBM</m:Code></m:CheckPriceRequest>\";\n", 
            "+\n", 
            "+    private static final String FORMAT =\n", 
            "+            \"<m:getQuote xmlns:m=\\\"http://services.samples\\\"><m:request><m:symbol>$1</m:symbol></m:request>\" +\n", 
            "+            \"</m:getQuote>\";\n", 
            "+\n", 
            "+    public void testStaticArgs() throws Exception {\n", 
            "+        \n", 
            "+        PayloadFactoryMediator mediator = new PayloadFactoryMediator();\n", 
            "+        mediator.setFormat(FORMAT);\n", 
            "+        PayloadFactoryMediator.Argument arg = new PayloadFactoryMediator.Argument();\n", 
            "+        arg.setValue(\"IBM\");\n", 
            "+        mediator.addArgument(arg);\n", 
            "+\n", 
            "+        testTransformation(mediator);\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testExpressionArgs() throws Exception {\n", 
            "+\n", 
            "+        PayloadFactoryMediator mediator = new PayloadFactoryMediator();\n", 
            "+        mediator.setFormat(FORMAT);\n", 
            "+        PayloadFactoryMediator.Argument arg = new PayloadFactoryMediator.Argument();\n", 
            "+        SynapseXPath expression = new SynapseXPath(\"//m:Code\");\n", 
            "+        expression.addNamespace(\"m\", \"http://services.samples\");\n", 
            "+        arg.setExpression(expression);\n", 
            "+        mediator.addArgument(arg);\n", 
            "+\n", 
            "+        testTransformation(mediator);\n", 
            "+    }\n", 
            "+\n", 
            "+    private void testTransformation(PayloadFactoryMediator mediator) throws Exception {\n", 
            "+\n", 
            "+        MessageContext synCtx = TestUtils.getTestContext(SOURCE);\n", 
            "+\n", 
            "+        assertTrue(mediator.mediate(synCtx));\n", 
            "+\n", 
            "+        SynapseXPath xpath = new SynapseXPath(\"//m:getQuote/m:request/m:symbol\");\n", 
            "+        xpath.addNamespace(\"m\", \"http://services.samples\");\n", 
            "+        xpath.stringValueOf(synCtx);\n", 
            "+\n", 
            "+        assertEquals(\"IBM\", xpath.stringValueOf(synCtx));\n", 
            "+    }\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/test/java/org/apache/synapse/mediators/transform/PayloadFactoryMediatorTest.java", 
      "from": "java/modules/core/src/test/java/org/apache/synapse/mediators/transform/PayloadFactoryMediatorTest.java"
    }
  ], 
  "id": "1328855"
}