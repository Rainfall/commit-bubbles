{
  "when": "2011-12-21T01:09:35-05:00", 
  "message": "Patch for SYNAPSE-781, Fixed some test failures and updated the log file location", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-39,7 +39,7", 
          "lines": [
            "     /**\n", 
            "      * The directory in which log files are created.\n", 
            "      */\n", 
            "-    public static String DIRECTORY = \"repository/logs\";\n", 
            "+    public static String DIRECTORY = \"logs\";\n", 
            " \n", 
            "     /**\n", 
            "      * Gives the format of the date to be appended to the name of the access log file.\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/AccessConstants.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/AccessConstants.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-34,7 +34,8", 
          "lines": [
            " class LoggingUtils {\n", 
            "     \n", 
            "     public final static String HEADER_LOG_ID = \"org.apache.synapse.transport.nhttp.headers\"; \n", 
            "-    public final static String WIRE_LOG_ID = \"org.apache.synapse.transport.nhttp.wire\"; \n", 
            "+    public final static String WIRE_LOG_ID = \"org.apache.synapse.transport.nhttp.wire\";\n", 
            "+    public final static String ACCESS_LOG_ID = \"org.apache.synapse.transport.nhttp.access\";\n", 
            " \n", 
            "     public static NHttpClientHandler decorate(NHttpClientHandler handler) {\n", 
            "         Log log = LogFactory.getLog(handler.getClass());\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/LoggingUtils.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/LoggingUtils.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-46,6 +46,7", 
          "lines": [
            "     private final Log log;\n", 
            "     private final Log iolog;\n", 
            "     private final Log headerlog;\n", 
            "+    private final Log accesslog;\n", 
            "     private final Log wirelog;\n", 
            "     private final String id;\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-59,6 +60,7", 
          "lines": [
            "         this.iolog = LogFactory.getLog(session.getClass());\n", 
            "         this.headerlog = LogFactory.getLog(LoggingUtils.HEADER_LOG_ID);\n", 
            "         this.wirelog = LogFactory.getLog(LoggingUtils.WIRE_LOG_ID);\n", 
            "+        this.accesslog = LogFactory.getLog(LoggingUtils.ACCESS_LOG_ID);\n", 
            "         this.id = \"http-incoming-\" + COUNT.incrementAndGet();\n", 
            "         if (this.iolog.isDebugEnabled() || this.wirelog.isDebugEnabled()) {\n", 
            "             this.session = new LoggingIOSession(session, this.id, this.iolog, this.wirelog);\n"
          ]
        }, 
        {
          "locn": "-148,6 +150,11", 
          "lines": [
            "                     headerlog.debug(id + \" << \" + headers[i].toString());\n", 
            "                 }\n", 
            "             }\n", 
            "+\n", 
            "+            if (message != null && accesslog.isInfoEnabled()) {\n", 
            "+                AccessHandler.getAccess().addAccessToQueue(message);\n", 
            "+            }\n", 
            "+\n", 
            "             this.writer.write(message);\n", 
            "         }\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-179,6 +186,10", 
          "lines": [
            "                     headerlog.debug(id + \" >> \" + headers[i].toString());\n", 
            "                 }\n", 
            "             }\n", 
            "+            if (message != null && accesslog.isInfoEnabled()) {\n", 
            "+                AccessHandler.getAccess().addAccessToQueue(message);\n", 
            "+            }\n", 
            "+\n", 
            "             return message;\n", 
            "         }\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/LoggingNHttpServerConnection.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/LoggingNHttpServerConnection.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-47,6 +47,7", 
          "lines": [
            "     private final Log iolog;\n", 
            "     private final Log headerlog;\n", 
            "     private final Log wirelog;\n", 
            "+    private final Log accesslog;\n", 
            "     private final String id;\n", 
            " \n", 
            "     public LoggingNHttpClientConnection(\n"
          ]
        }, 
        {
          "locn": "-59,6 +60,7", 
          "lines": [
            "         this.iolog = LogFactory.getLog(session.getClass());\n", 
            "         this.headerlog = LogFactory.getLog(LoggingUtils.HEADER_LOG_ID);\n", 
            "         this.wirelog = LogFactory.getLog(LoggingUtils.WIRE_LOG_ID);\n", 
            "+        this.accesslog = LogFactory.getLog(LoggingUtils.ACCESS_LOG_ID);\n", 
            "         this.id = \"http-outgoing-\" + COUNT.incrementAndGet();\n", 
            "         if (this.iolog.isDebugEnabled() || this.wirelog.isDebugEnabled()) {\n", 
            "             this.session = new LoggingIOSession(session, this.id, this.iolog, this.wirelog);\n"
          ]
        }, 
        {
          "locn": "-148,6 +150,9", 
          "lines": [
            "                     headerlog.debug(id + \" >> \" + headers[i].toString());\n", 
            "                 }\n", 
            "             }\n", 
            "+            if (message != null && accesslog.isInfoEnabled()) {\n", 
            "+                AccessHandler.getAccess().addAccessToQueue(message);\n", 
            "+            }\n", 
            "             this.writer.write(message);\n", 
            "         }\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-179,6 +184,9", 
          "lines": [
            "                     headerlog.debug(id + \" << \" + headers[i].toString());\n", 
            "                 }\n", 
            "             }\n", 
            "+            if (message != null && accesslog.isInfoEnabled()) {\n", 
            "+                AccessHandler.getAccess().addAccessToQueue(message);\n", 
            "+            }\n", 
            "             return message;\n", 
            "         }\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/LoggingNHttpClientConnection.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/LoggingNHttpClientConnection.java"
    }
  ], 
  "id": "1221624"
}