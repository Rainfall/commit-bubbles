{
  "when": "2013-07-24T16:11:35-04:00", 
  "message": "Not trying to send a fault for connections that are already done", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-21,6 +21,7", 
          "lines": [
            " \n", 
            " import org.apache.axiom.soap.SOAPEnvelope;\n", 
            " import org.apache.axis2.AxisFault;\n", 
            "+import org.apache.axis2.Constants;\n", 
            " import org.apache.axis2.context.MessageContext;\n", 
            " import org.apache.axis2.engine.MessageReceiver;\n", 
            " import org.apache.axis2.util.MessageContextBuilder;\n"
          ]
        }, 
        {
          "locn": "-59,7 +60,10", 
          "lines": [
            "         }\n", 
            " \n", 
            "         if (mc.getAxisOperation() == null ||\n", 
            "-                mc.getAxisOperation().getMessageReceiver() == null) {\n", 
            "+                mc.getAxisOperation().getMessageReceiver() == null ||\n", 
            "+                (mc.getOperationContext() != null &&\n", 
            "+                        Constants.VALUE_TRUE.equals(mc.getOperationContext().getProperty(\n", 
            "+                                Constants.RESPONSE_WRITTEN)))) {\n", 
            "             return;\n", 
            "         }\n", 
            " \n"
          ]
        }, 
        {
          "locn": "-77,7 +81,7", 
          "lines": [
            "                     SOAPEnvelope envelope = faultMessageContext.getEnvelope();\n", 
            " \n", 
            "                     if (log.isDebugEnabled()) {\n", 
            "-                        log.debug(\"Sending Fault for Request with Message ID : \"\n", 
            "+                        log.debug(\"Sending fault for request with message ID : \"\n", 
            "                                 + mc.getMessageID());\n", 
            "                     }\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/TargetErrorHandler.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/TargetErrorHandler.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-38,6 +38,7", 
          "lines": [
            "  * connections for host:port pair. \n", 
            "  */\n", 
            " public class TargetConnections {\n", 
            "+\n", 
            "     private static final Log log = LogFactory.getLog(TargetConnections.class);\n", 
            " \n", 
            "     /** map to hold the ConnectionPools. The key is host:port */\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/TargetConnections.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/TargetConnections.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-34,6 +34,7", 
          "lines": [
            "  * This stores connections for a particular host + port.\n", 
            "  */\n", 
            " public class HostConnections {\n", 
            "+\n", 
            "     private static final Log log = LogFactory.getLog(HostConnections.class);\n", 
            "     // host\n", 
            "     private String host;\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/HostConnections.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/HostConnections.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-116,7 +116,7", 
          "lines": [
            "                      TransportOutDescription transportOutDescription) throws AxisFault {\n", 
            " \n", 
            "         if (log.isDebugEnabled()) {\n", 
            "-            log.debug(\"Initializing Pass-through HTTP/S Sender...\");\n", 
            "+            log.debug(\"Initializing pass-through HTTP/S sender...\");\n", 
            "         }\n", 
            " \n", 
            "         // is this an SSL Sender?\n"
          ]
        }, 
        {
          "locn": "-147,7 +147,7", 
          "lines": [
            "                     proxyBypassList = (System.getProperty(\"http.nonProxyHosts\")).split(\"\\\\|\");\n", 
            "                 }\n", 
            " \n", 
            "-                log.info(\"HTTP Sender using Proxy : \"\n", 
            "+                log.info(\"HTTP sender using Proxy : \"\n", 
            "                     + proxyHost + \":\" + proxyPort + \" bypassing : \" + Arrays.toString(proxyBypassList));\n", 
            "             }\n", 
            "         }\n"
          ]
        }, 
        {
          "locn": "-223,10 +223,10", 
          "lines": [
            "                 try {\n", 
            "                     ioReactor.execute(ioEventDispatch);\n", 
            "                 } catch (Exception ex) {\n", 
            "-                   log.fatal(\"Exception encountered in the \" + namePrefix + \" Sender. \" +\n", 
            "+                   log.fatal(\"Exception encountered in the \" + namePrefix + \" sender. \" +\n", 
            "                             \"No more connections will be initiated by this transport\", ex);\n", 
            "                 }\n", 
            "-                log.info(namePrefix + \" Sender shutdown\");\n", 
            "+                log.info(namePrefix + \" sender shutdown\");\n", 
            "             }\n", 
            "         }, \"PassThrough\" + namePrefix + \"Sender\");\n", 
            "         t.start();\n"
          ]
        }, 
        {
          "locn": "-316,7 +316,7", 
          "lines": [
            "                     } catch (Exception e) {\n", 
            "                         handleException(\"Failed to submit the response\", e);\n", 
            "                     }\n", 
            "-                }else {\n", 
            "+                } else {\n", 
            "                     //handleException(\"No valid destination EPR to send message\");\n", 
            "                 \t//should be able to handle sendUsingOutputStream  Ref NHTTP_NIO\n", 
            "                 \tsendUsingOutputStream(msgContext);\n"
          ]
        }
      ], 
      "to": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpSender.java", 
      "from": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpSender.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-51,5 +51,7", 
          "lines": [
            "         HttpResponse response = client.doPost(\"http://127.0.0.1:8280/stockquote/order\",\n", 
            "                 payload.getBytes(), \"application/xml\");\n", 
            "         assertEquals(response.getStatus(), HttpStatus.SC_ACCEPTED);\n", 
            "+        Thread.sleep(2000);\n", 
            "+        assertEquals(1, getAxis2Server().getMessageCount(\"SimpleStockQuoteService\", \"placeOrder\"));\n", 
            "     }\n", 
            " }\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/rest/Sample800.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/rest/Sample800.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-11,6 +11,7", 
          "lines": [
            "         <axis2Server id='0'>\n", 
            "             <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>\n", 
            "             <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>\n", 
            "+            <counterEnabled>true</counterEnabled>\n", 
            "         </axis2Server>\n", 
            "     </backEndServerConfig>\n", 
            "     <clientConfig>\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/resources/sample800.xml", 
      "from": "java/modules/integration/src/test/resources/sample800.xml"
    }
  ], 
  "id": "1506689"
}