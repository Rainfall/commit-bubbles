{
  "when": "2012-02-21T02:13:06-05:00", 
  "message": "Added support for class endpoint. This allows users to externally define their own endpoints. This will be an extensibility mechanism for defining new Endpoints.\n\n", 
  "who": "azeez", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-245,6 +245,12", 
          "lines": [
            "         \treturn RecipientListEndpointFactory.getInstance();\n", 
            "         }\n", 
            " \n", 
            "+        OMElement classElement = configElement.getFirstChildWithName\n", 
            "+                (new QName(SynapseConstants.SYNAPSE_NAMESPACE, \"class\"));\n", 
            "+        if (classElement != null) {\n", 
            "+            return ClassEndpointFactory.getInstance();\n", 
            "+        }\n", 
            "+\n", 
            "         handleException(\"Invalid endpoint configuration.\");\n", 
            "         // just to make the compiler happy : never executes\n", 
            "         return null;\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/EndpointFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/EndpointFactory.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,93", 
          "lines": [
            "+/*\n", 
            "+*  Copyright (c) 2005-2011, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n", 
            "+*\n", 
            "+*  WSO2 Inc. licenses this file to you under the Apache License,\n", 
            "+*  Version 2.0 (the \"License\"); you may not use this file except\n", 
            "+*  in compliance with the License.\n", 
            "+*  You may obtain a copy of the License at\n", 
            "+*\n", 
            "+*    http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+*\n", 
            "+* Unless required by applicable law or agreed to in writing,\n", 
            "+* software distributed under the License is distributed on an\n", 
            "+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+* KIND, either express or implied.  See the License for the\n", 
            "+* specific language governing permissions and limitations\n", 
            "+* under the License.\n", 
            "+*/\n", 
            "+package org.apache.synapse.config.xml.endpoints;\n", 
            "+\n", 
            "+import org.apache.axiom.om.OMElement;\n", 
            "+import org.apache.synapse.SynapseConstants;\n", 
            "+import org.apache.synapse.commons.util.PropertyHelper;\n", 
            "+import org.apache.synapse.endpoints.Endpoint;\n", 
            "+\n", 
            "+import javax.xml.namespace.QName;\n", 
            "+import java.lang.reflect.InvocationTargetException;\n", 
            "+import java.util.Iterator;\n", 
            "+import java.util.Properties;\n", 
            "+\n", 
            "+/**\n", 
            "+ * This EndpointFactory will be used as an extension point for defining Endpoints externally.\n", 
            "+ * <p/>\n", 
            "+ * The endpoint configuration will look similar to the one shown below;\n", 
            "+ * <p/>\n", 
            "+ * <endpoint name=\"testEndpoint\">\n", 
            "+ * <class name=\"org.apache.synapse.ext.endpoints.TestEndpoint\">\n", 
            "+ * <parameter/>*\n", 
            "+ * </class>\n", 
            "+ * </endpoint>\n", 
            "+ */\n", 
            "+public class ClassEndpointFactory extends EndpointFactory {\n", 
            "+\n", 
            "+    private static ClassEndpointFactory instance = new ClassEndpointFactory();\n", 
            "+    public static final QName CLASS_QNAME = new QName(SynapseConstants.SYNAPSE_NAMESPACE,\n", 
            "+                                                      \"class\");\n", 
            "+    public static final QName NAME_QNAME = new QName(\"name\");\n", 
            "+    public static final QName PARAMETER_QNAME = new QName(\"parameter\");\n", 
            "+\n", 
            "+    private ClassEndpointFactory() {\n", 
            "+    }\n", 
            "+\n", 
            "+    public static ClassEndpointFactory getInstance() {\n", 
            "+        return instance;\n", 
            "+    }\n", 
            "+\n", 
            "+    protected Endpoint createEndpoint(OMElement epConfig,\n", 
            "+                                      boolean anonymousEndpoint,\n", 
            "+                                      Properties properties) {\n", 
            "+        OMElement classElement =\n", 
            "+                epConfig.getFirstChildWithName(CLASS_QNAME);\n", 
            "+        if (classElement == null) {\n", 
            "+            return null;\n", 
            "+        }\n", 
            "+\n", 
            "+        String nameAttr = classElement.getAttributeValue(NAME_QNAME);\n", 
            "+        if (nameAttr == null) {\n", 
            "+            return null;\n", 
            "+        }\n", 
            "+\n", 
            "+        Endpoint endpoint = null;\n", 
            "+        try {\n", 
            "+            Class clazz = Class.forName(nameAttr);\n", 
            "+            endpoint = (Endpoint) clazz.newInstance();\n", 
            "+            for (Iterator iter = classElement.getChildrenWithName(PARAMETER_QNAME);\n", 
            "+                 iter.hasNext(); ) {\n", 
            "+                OMElement paramEle = (OMElement) iter.next();\n", 
            "+                setParameter(endpoint, paramEle);\n", 
            "+            }\n", 
            "+        } catch (Exception e) {\n", 
            "+            handleException(\"Cannot create class endpoint\", e);\n", 
            "+        }\n", 
            "+\n", 
            "+        return endpoint;\n", 
            "+    }\n", 
            "+\n", 
            "+    private void setParameter(Endpoint endpoint, OMElement paramEle) throws IllegalAccessException,\n", 
            "+                                                                            InvocationTargetException,\n", 
            "+                                                                            NoSuchMethodException {\n", 
            "+        String name = paramEle.getAttributeValue(new QName(\"name\"));\n", 
            "+        String value = paramEle.getText();\n", 
            "+        PropertyHelper.setInstanceProperty(name, value, endpoint);\n", 
            "+    }\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/ClassEndpointFactory.java", 
      "from": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/ClassEndpointFactory.java"
    }
  ], 
  "id": "1291620"
}