{
  "when": "2011-12-07T08:30:46-05:00", 
  "who": "hiranya", 
  "changes": [
    {
      "chunks": [
        {
          "locn": "-22,6 +22,7", 
          "lines": [
            " import junit.framework.TestSuite;\n", 
            " import org.apache.commons.logging.Log;\n", 
            " import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.tests.endpoint.*;\n", 
            " import org.apache.synapse.samples.framework.tests.message.*;\n", 
            " \n", 
            " import java.util.ArrayList;\n"
          ]
        }, 
        {
          "locn": "-169,5 +170,17", 
          "lines": [
            "         sampleClassRepo.put(\"13\", Sample13.class);\n", 
            "         sampleClassRepo.put(\"15\", Sample15.class);\n", 
            "         sampleClassRepo.put(\"16\", Sample16.class);\n", 
            "+\n", 
            "+        //Endpoint\n", 
            "+        sampleClassRepo.put(\"50\", Sample50.class);\n", 
            "+        sampleClassRepo.put(\"51\", Sample51.class);\n", 
            "+        sampleClassRepo.put(\"52\", Sample52.class);\n", 
            "+        sampleClassRepo.put(\"53\", Sample53.class);\n", 
            "+        sampleClassRepo.put(\"54\", Sample54.class);\n", 
            "+        sampleClassRepo.put(\"55\", Sample55.class);\n", 
            "+        sampleClassRepo.put(\"56\", Sample56.class);\n", 
            "+        //sampleClassRepo.put(\"57\", Sample57.class);  //intermittently fail\n", 
            "+        sampleClassRepo.put(\"58\", Sample58.class);\n", 
            "+        sampleClassRepo.put(\"59\", Sample59.class);\n", 
            "     }\n", 
            " }\n", 
            "\\ No newline at end of file\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-23,6 +23,7", 
          "lines": [
            " import org.apache.axiom.om.OMElement;\n", 
            " import org.apache.axiom.om.impl.builder.StAXOMBuilder;\n", 
            " import org.apache.commons.io.FileUtils;\n", 
            "+import org.apache.commons.io.FilenameUtils;\n", 
            " import org.apache.commons.logging.Log;\n", 
            " import org.apache.commons.logging.LogFactory;\n", 
            " import org.apache.synapse.samples.framework.clients.EventSampleClient;\n"
          ]
        }, 
        {
          "locn": "-59,12 +60,11", 
          "lines": [
            "         this.sampleId = sampleId;\n", 
            "         log.info(\"Creating Synapse TestCase for test \" + sampleId);\n", 
            "         currentLocation = System.getProperty(\"user.dir\") + File.separator;\n", 
            "-        sampleDescriptor = File.separator + \"sample\" + sampleId + \".xml\";\n", 
            "+        sampleDescriptor = \"/sample\" + sampleId + \".xml\";\n", 
            "         configuration = new SampleConfiguration();\n", 
            "         backendServerControllers = new ArrayList<BackEndServerController>();\n", 
            "-        System.setProperty(\"java.io.tmpdir\", currentLocation + \"modules\" + File.separator +\n", 
            "-                \"integration\" + File.separator + \"target\" + File.separator + \"temp\");\n", 
            "-\n", 
            "+        System.setProperty(\"java.io.tmpdir\", FilenameUtils.normalize(\n", 
            "+                currentLocation + \"modules/integration/target/temp\"));\n", 
            "     }\n", 
            " \n", 
            "     /**\n"
          ]
        }, 
        {
          "locn": "-412,19 +412,21", 
          "lines": [
            "                 SampleConfigConstants.TAG_CLIENT_CONF_AXIS2_XML);\n", 
            " \n", 
            "         if (clientRepo == null) {\n", 
            "-            configuration.getClientConfig().setClientRepo(currentLocation +\n", 
            "-                    SampleConfigConstants.DEFAULT_CLIENT_CONF_REPO);\n", 
            "+            configuration.getClientConfig().setClientRepo(FilenameUtils.normalize(\n", 
            "+                    currentLocation + SampleConfigConstants.DEFAULT_CLIENT_CONF_REPO));\n", 
            "         } else {\n", 
            "             log.info(\"Using client Axis2 repository location: \" + clientRepo);\n", 
            "-            configuration.getClientConfig().setClientRepo(currentLocation + clientRepo);\n", 
            "+            configuration.getClientConfig().setClientRepo(FilenameUtils.normalize(\n", 
            "+                    currentLocation + clientRepo));\n", 
            "         }\n", 
            " \n", 
            "         if (clientAxis2Xml == null) {\n", 
            "-            configuration.getClientConfig().setAxis2Xml(currentLocation +\n", 
            "-                    SampleConfigConstants.DEFAULT_CLIENT_CONF_AXIS2_XML);\n", 
            "+            configuration.getClientConfig().setAxis2Xml(FilenameUtils.normalize(\n", 
            "+                    currentLocation + SampleConfigConstants.DEFAULT_CLIENT_CONF_AXIS2_XML));\n", 
            "         } else {\n", 
            "             log.info(\"Using client Axis2 XML: \" + clientAxis2Xml);\n", 
            "-            configuration.getClientConfig().setAxis2Xml(currentLocation + clientAxis2Xml);\n", 
            "+            configuration.getClientConfig().setAxis2Xml(FilenameUtils.normalize(\n", 
            "+                    currentLocation + clientAxis2Xml));\n", 
            "         }\n", 
            "         return true;\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/SynapseTestCase.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/SynapseTestCase.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,52", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+import java.util.concurrent.CountDownLatch;\n", 
            "+\n", 
            "+public class Sample54 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample54.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+    CountDownLatch latch;\n", 
            "+\n", 
            "+    public Sample54() {\n", 
            "+        super(54);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+        latch = new CountDownLatch(1);\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testSessionFullLB() {\n", 
            "+        String addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "+\n", 
            "+        log.info(\"Running test: Session affinity load balancing between 3 endpoints\");\n", 
            "+        result = client.statefulClient(addUrl,null, 100);\n", 
            "+        assertTrue(\"Client did not run successfully \", result.gotResponse());\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample54.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample54.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,64", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample55 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample55.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+    String addUrl;\n", 
            "+\n", 
            "+    public Sample55() {\n", 
            "+        super(55);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testSessionFullLBFailOver() {\n", 
            "+        addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "+\n", 
            "+        log.info(\"Running test: Failover sending among 3 endpoints\");\n", 
            "+        new Thread(new Runnable() {\n", 
            "+            public void run() {\n", 
            "+                result = client.statefulClient(addUrl,null, 200);\n", 
            "+            }\n", 
            "+        }).start();\n", 
            "+        try {\n", 
            "+            Thread.sleep(2000);\n", 
            "+        } catch (InterruptedException e) {\n", 
            "+\n", 
            "+        }\n", 
            "+        getBackendServerControllers().get(0).stop();\n", 
            "+\n", 
            "+        try {\n", 
            "+            Thread.sleep(2000);\n", 
            "+        } catch (InterruptedException e) {\n", 
            "+\n", 
            "+        }\n", 
            "+\n", 
            "+        assertTrue(\"Did not receive a response\", result.gotResponse());\n", 
            "+    }\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample55.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample55.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,48", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample56 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample56.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+\n", 
            "+    public Sample56() {\n", 
            "+        super(56);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testSmartClientMode() {\n", 
            "+        String addUrl = \"http://localhost:8280\";\n", 
            "+\n", 
            "+        log.info(\"Running test: Smart Client mode\");\n", 
            "+        result = client.requestStandardQuote(addUrl, null, null, \"IBM\" ,null);\n", 
            "+        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample56.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample56.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,78", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample57 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample57.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+    String addUrl;\n", 
            "+\n", 
            "+    public Sample57() {\n", 
            "+        super(57);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testDynamicLB() {\n", 
            "+        addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "+\n", 
            "+        log.info(\"Running test: Dynamic load balancing between 3 nodes\");\n", 
            "+        try {\n", 
            "+            Thread.sleep(3000);\n", 
            "+        } catch (InterruptedException e) {\n", 
            "+\n", 
            "+        }\n", 
            "+        new Thread(new Runnable() {\n", 
            "+            public void run() {\n", 
            "+                result = client.sessionlessClient(addUrl, null, 500);\n", 
            "+            }\n", 
            "+        }).start();\n", 
            "+//            try {\n", 
            "+//                Thread.sleep(2000);\n", 
            "+//            } catch (InterruptedException e) {\n", 
            "+//\n", 
            "+//            }\n", 
            "+//            getbESControllers().get(\"SampleServer0\").stop();\n", 
            "+//\n", 
            "+        try {\n", 
            "+            Thread.sleep(3000);\n", 
            "+        } catch (InterruptedException e) {\n", 
            "+\n", 
            "+        }\n", 
            "+        new Thread(new Runnable() {\n", 
            "+            public void run() {\n", 
            "+                result = client.sessionlessClient(addUrl, null, 500);\n", 
            "+            }\n", 
            "+        }).start();\n", 
            "+        try {\n", 
            "+            Thread.sleep(5000);\n", 
            "+        } catch (InterruptedException e) {\n", 
            "+\n", 
            "+        }\n", 
            "+\n", 
            "+        assertTrue(\"Did not receive a response\", result.gotResponse());\n", 
            "+    }\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample57.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample57.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,61", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample58 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample58.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+    String addUrl;\n", 
            "+\n", 
            "+    public Sample58() {\n", 
            "+        super(58);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testStaticLB() {\n", 
            "+        addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "+\n", 
            "+        new Thread(new Runnable() {\n", 
            "+            public void run() {\n", 
            "+                result = client.sessionlessClient(addUrl,null, 200);\n", 
            "+            }\n", 
            "+        }).start();\n", 
            "+        try {\n", 
            "+            Thread.sleep(2000);\n", 
            "+        } catch (InterruptedException e) {\n", 
            "+\n", 
            "+        }\n", 
            "+        getBackendServerControllers().get(0).stop();\n", 
            "+\n", 
            "+        try {\n", 
            "+            Thread.sleep(2000);\n", 
            "+        } catch (InterruptedException e) {\n", 
            "+\n", 
            "+        }\n", 
            "+    }\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample58.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample58.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,48", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample59 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample59.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+\n", 
            "+    public Sample59() {\n", 
            "+        super(59);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testSessionLessLB() {\n", 
            "+        String addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "+\n", 
            "+        log.info(\"Running test: Weighted load balancing between 3 endpoints\");\n", 
            "+        result = client.sessionlessClient(addUrl,null, 100);\n", 
            "+        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample59.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample59.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,48", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample50 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample50.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+\n", 
            "+    public Sample50() {\n", 
            "+        super(50);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testRestToPox() {\n", 
            "+        String ep = \"http://localhost:8280/services/MTOMSwASampleService\";\n", 
            "+        String trpUrl = \"http://localhost:8280/services/StockQuote\";\n", 
            "+\n", 
            "+        log.info(\"Running test: HTTP REST request \");\n", 
            "+        result = client.requestRestQuote(null, trpUrl, null, \"IBM\");\n", 
            "+        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+    }\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample50.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample50.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,63", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.io.FilenameUtils;\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.MTOMSwASampleClient;\n", 
            "+\n", 
            "+import java.io.File;\n", 
            "+\n", 
            "+public class Sample51 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample51.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    MTOMSwASampleClient client;\n", 
            "+\n", 
            "+    public Sample51() {\n", 
            "+        super(51);\n", 
            "+        client = getMTOMSwASampleClient();\n", 
            "+    }\n", 
            "+\n", 
            "+    public void testMTOMOptimization() {\n", 
            "+        String ep = \"http://localhost:8280/services/MTOMSwASampleService\";\n", 
            "+        String currentLocation = System.getProperty(\"user.dir\") + File.separator;\n", 
            "+        String filename = FilenameUtils.normalize(\n", 
            "+                currentLocation + \"repository/conf/sample/resources/mtom/asf-logo.gif\");\n", 
            "+        log.info(\"Running test: MTOM optimization and request/response correlation \");\n", 
            "+        result = client.sendUsingMTOM(filename, ep);\n", 
            "+        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testSWAOptimization() {\n", 
            "+        String ep = \"http://localhost:8280/services/MTOMSwASampleService\";\n", 
            "+        String currentLocation = System.getProperty(\"user.dir\") + File.separator;\n", 
            "+        String filename = FilenameUtils.normalize(\n", 
            "+                currentLocation + \"repository/conf/sample/resources/mtom/asf-logo.gif\");\n", 
            "+\n", 
            "+        log.info(\"Running test:SwA optimization and request/response correlation \");\n", 
            "+        result = client.sendUsingSWA(filename, ep);\n", 
            "+        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+    }\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample51.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample51.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,49", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample52 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample52.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+\n", 
            "+    public Sample52() {\n", 
            "+        super(52);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testSessionLessLB() {\n", 
            "+        //String repo = getConfiguration().getClientConfig().getClientRepo();\n", 
            "+        String addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "+\n", 
            "+        log.info(\"Running test: Session-less load balancing between 3 endpoints\");\n", 
            "+        result = client.sessionlessClient(addUrl, null, 100);\n", 
            "+        assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample52.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample52.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-0,0 +1,83", 
          "lines": [
            "+/*\n", 
            "+ *  Licensed to the Apache Software Foundation (ASF) under one\n", 
            "+ *  or more contributor license agreements.  See the NOTICE file\n", 
            "+ *  distributed with this work for additional information\n", 
            "+ *  regarding copyright ownership.  The ASF licenses this file\n", 
            "+ *  to you under the Apache License, Version 2.0 (the\n", 
            "+ *  \"License\"); you may not use this file except in compliance\n", 
            "+ *  with the License.  You may obtain a copy of the License at\n", 
            "+ *\n", 
            "+ *   http://www.apache.org/licenses/LICENSE-2.0\n", 
            "+ *\n", 
            "+ *  Unless required by applicable law or agreed to in writing,\n", 
            "+ *  software distributed under the License is distributed on an\n", 
            "+ *   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n", 
            "+ *  KIND, either express or implied.  See the License for the\n", 
            "+ *  specific language governing permissions and limitations\n", 
            "+ *  under the License.\n", 
            "+ */\n", 
            "+package org.apache.synapse.samples.framework.tests.endpoint;\n", 
            "+\n", 
            "+import org.apache.axis2.AxisFault;\n", 
            "+import org.apache.commons.logging.Log;\n", 
            "+import org.apache.commons.logging.LogFactory;\n", 
            "+import org.apache.synapse.samples.framework.SampleClientResult;\n", 
            "+import org.apache.synapse.samples.framework.SynapseTestCase;\n", 
            "+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;\n", 
            "+\n", 
            "+public class Sample53 extends SynapseTestCase {\n", 
            "+\n", 
            "+    private static final Log log = LogFactory.getLog(Sample53.class);\n", 
            "+    SampleClientResult result;\n", 
            "+    StockQuoteSampleClient client;\n", 
            "+    String addUrl;\n", 
            "+\n", 
            "+    public Sample53() {\n", 
            "+        super(53);\n", 
            "+        client = getStockQuoteClient();\n", 
            "+    }\n", 
            "+\n", 
            "+\n", 
            "+    public void testFailOver() {\n", 
            "+        String expectedError = \"COULDN'T SEND THE MESSAGE TO THE SERVER\";\n", 
            "+        addUrl = \"http://localhost:8280/services/LBService1\";\n", 
            "+        log.info(\"Running test: Failover sending among 3 endpoints\");\n", 
            "+\n", 
            "+        new Thread(new Runnable() {\n", 
            "+            public void run() {\n", 
            "+                result = client.sessionlessClient(addUrl, null, -1);\n", 
            "+            }\n", 
            "+        }).start();\n", 
            "+\n", 
            "+        for (int i = 0; i < 3; i++) {\n", 
            "+            try {\n", 
            "+                Thread.sleep(2000);\n", 
            "+            } catch (InterruptedException e) {\n", 
            "+\n", 
            "+            }\n", 
            "+            getBackendServerControllers().get(i).stop();\n", 
            "+        }\n", 
            "+\n", 
            "+        try {\n", 
            "+            Thread.sleep(2000);\n", 
            "+        } catch (InterruptedException e) {\n", 
            "+\n", 
            "+        }\n", 
            "+\n", 
            "+        while (!result.isFinished()) {\n", 
            "+            try {\n", 
            "+                Thread.sleep(1000);\n", 
            "+            } catch (InterruptedException e) {\n", 
            "+            }\n", 
            "+        }\n", 
            "+\n", 
            "+        assertTrue(\"Did not receive a response\", result.gotResponse());\n", 
            "+        Exception resultEx = result.getException();\n", 
            "+        assertNotNull(\"Did not receive expected error\", resultEx);\n", 
            "+        log.info(\"Got an error as expected: \" + resultEx.getMessage());\n", 
            "+        assertTrue(\"Did not receive expected error\", resultEx instanceof AxisFault);\n", 
            "+        assertTrue(\"Did not receive expected error\",\n", 
            "+                resultEx.getMessage().indexOf(expectedError) != -1);\n", 
            "+    }\n", 
            "+\n", 
            "+}\n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample53.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample53.java"
    }, 
    {
      "chunks": [
        {
          "locn": "-51,7 +51,7", 
          "lines": [
            "         String prxUrl = \"http://localhost:8280/\";\n", 
            " \n", 
            "         log.info(\"Running test: Using Synapse as a HTTP Proxy\");\n", 
            "-        result = client.requestStandardQuote(addUrl, null, prxUrl, \"IBM\" ,null);\n", 
            "+        result = client.requestStandardQuote(addUrl, null, prxUrl, \"IBM\", null);\n", 
            "         assertTrue(\"Client did not get run successfully \", result.gotResponse());\n", 
            "     }\n", 
            " \n"
          ]
        }
      ], 
      "to": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample0.java", 
      "from": "java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/message/Sample0.java"
    }
  ], 
  "id": "1211430"
}